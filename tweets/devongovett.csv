id,created_at,text
1259542537313771500,Sun May 10 17:55:16 +0000 2020,Working on my talk for React Europe. So excited to finally share the work my team has been doing for the past year‚Ä¶ https://t.co/MxSBXqEhm3
1259236881117507600,Sat May 09 21:40:42 +0000 2020,@JakeDohm @peduarte @NateBaldwinArt Well luckily it doesn‚Äôt matter that much because many users are now on touch de‚Ä¶ https://t.co/GJNb1scawQ
1259168080451661800,Sat May 09 17:07:19 +0000 2020,@buildsghost https://t.co/XHaPE1eX3U
1258950070193406000,Sat May 09 02:41:01 +0000 2020,@evanwallace @amasad @rauchg Awesome, well keep me updated. Really excited to see how the project evolves. Would lo‚Ä¶ https://t.co/JZiI2KhkkY
1258947260282335200,Sat May 09 02:29:51 +0000 2020,@evanwallace @amasad @rauchg Nice! Is there a way to run the phases separately? I'd like to run the scan phase on e‚Ä¶ https://t.co/PZ4duO2RGk
1258946133344219100,Sat May 09 02:25:22 +0000 2020,@rauchg @amasad @evanwallace Oh yeah that would be interesting for sure. Didn't know there was a wasm version alrea‚Ä¶ https://t.co/pK5vQof93D
1258944747508363300,Sat May 09 02:19:52 +0000 2020,@amasad @rauchg @evanwallace Nice! I'll need to look into how to call Go APIs from Node. Probably a C++ wrapper I guess.
1258943443457343500,Sat May 09 02:14:41 +0000 2020,@amasad @rauchg I would love to swap out Babel and our custom bundling code in Parcel for esbuild. Then you'd get i‚Ä¶ https://t.co/OiPAp0dbBD
1258910764665987000,Sat May 09 00:04:50 +0000 2020,@_developit ü§£
1258867102766645200,Fri May 08 21:11:20 +0000 2020,@_developit Didn't you hear, bundlers are unnecessary now? üòú
1258865506062229500,Fri May 08 21:04:59 +0000 2020,@buildsghost Another is programmatic focus (e.g. auto focus).
1258864393510547500,Fri May 08 21:00:34 +0000 2020,@buildsghost 1. Screen readers. They often move focus without firing any other events first. 2. Mobile software key‚Ä¶ https://t.co/OKyWMvGK49
1258844925388456000,Fri May 08 19:43:13 +0000 2020,@NateBaldwinArt @JakeDohm @peduarte I think those should probably be avoided if possible, but they are quite common‚Ä¶ https://t.co/qLwzq3grHL
1258840181345403000,Fri May 08 19:24:22 +0000 2020,@notbrent @whatsamtweets @Jordy_vD_ @peduarte I'd probably use the pointer cursor for external links in tweets, and‚Ä¶ https://t.co/kF7SR5ZY2D
1258836143744798700,Fri May 08 19:08:19 +0000 2020,@buildsghost Seems like a good one for @stubbornella and team.
1258835042714804200,Fri May 08 19:03:56 +0000 2020,@notbrent @whatsamtweets @Jordy_vD_ @peduarte Sure. But I think this needs to be communicated by good visual design‚Ä¶ https://t.co/CSWduaMokc
1258834416152875000,Fri May 08 19:01:27 +0000 2020,@buildsghost Yeah. I think you'd want it to pop outside the bounds of the component so it doesn't get clipped by a‚Ä¶ https://t.co/fwgqxnOoJG
1258833125255213000,Fri May 08 18:56:19 +0000 2020,@buildsghost Oh, you want `outline` but with `outline-radius` basically?
1258832984196571100,Fri May 08 18:55:46 +0000 2020,@whatsamtweets @Jordy_vD_ @peduarte And then users switch to a native app and none of the buttons have pointer curs‚Ä¶ https://t.co/yYOwLuWgR6
1258831851034034200,Fri May 08 18:51:15 +0000 2020,@buildsghost :focus-visible https://t.co/bJYWMByo8R
1258831477745152000,Fri May 08 18:49:46 +0000 2020,@Jordy_vD_ @peduarte I'd extend that even further to say that hover effects in general are way overused on the web.‚Ä¶ https://t.co/uoVDmJdV8C
1258826376355786800,Fri May 08 18:29:30 +0000 2020,@gnapse @Jordy_vD_ @peduarte The primary effect in that scenario is performing an action (changing some state). Cha‚Ä¶ https://t.co/CeIKlng7AA
1258825734061035500,Fri May 08 18:26:57 +0000 2020,@ryanflorence Yes, this. If it's a navigational element (e.g. a link that looks like a button), use the pointer cur‚Ä¶ https://t.co/orVlHCDnBW
1258825287241875500,Fri May 08 18:25:10 +0000 2020,@gnapse @Jordy_vD_ @peduarte IMO this should be avoided, but if it happens, then the cursor should follow the behav‚Ä¶ https://t.co/hXAR0WJWNT
1258818406725255200,Fri May 08 17:57:50 +0000 2020,@Jordy_vD_ @peduarte You should make your buttons look clickable without relying on the cursor. Especially in a wor‚Ä¶ https://t.co/oY30IWGqPG
1258815564283179000,Fri May 08 17:46:32 +0000 2020,@Jordy_vD_ @peduarte That's not what the pointer cursor means. üôÉ  The pointer cursor is for links, not anything tha‚Ä¶ https://t.co/uW7SSUeLem
1258792373842296800,Fri May 08 16:14:23 +0000 2020,@JakeDohm @ChaseGiunta @peduarte Yeah, bad design on my part. But there‚Äôs lots of examples of that on the web.
1258792238500294700,Fri May 08 16:13:51 +0000 2020,@ChaseGiunta @peduarte Haha yeah I‚Äôll probably change the design üòÜ
1258791969251197000,Fri May 08 16:12:47 +0000 2020,@JakeDohm @peduarte Some good resources in this tweet. https://t.co/oSKIZ79uUY  @NateBaldwinArt did the research on‚Ä¶ https://t.co/tqWmLMmLVh
1258789162020245500,Fri May 08 16:01:38 +0000 2020,@ChaseGiunta @peduarte TBH the cursor really isn‚Äôt that important in a world of touch devices with no hover states‚Ä¶ https://t.co/xbfBejF6nn
1258787763148611600,Fri May 08 15:56:04 +0000 2020,@ChaseGiunta @peduarte Links, clearly. Clicking them brings you to another page.
1258787416443240400,Fri May 08 15:54:41 +0000 2020,@ChaseGiunta @peduarte I referred to the &lt;button&gt; element in my tweet. ü§∑üèª‚Äç‚ôÇÔ∏è   Buttons work differently than links,‚Ä¶ https://t.co/D2SwUPigwi
1258786259238961200,Fri May 08 15:50:05 +0000 2020,@ChaseGiunta @peduarte Also if your button doesn‚Äôt look like a button then I think you have bigger problems.
1258785925749854200,Fri May 08 15:48:46 +0000 2020,@ChaseGiunta @peduarte They do in every browser except Safari, and there‚Äôs a setting for that.
1258780957504532500,Fri May 08 15:29:01 +0000 2020,@agorovyi @peduarte Ah yes. This is the one I was trying to find. üôÇ
1258780326827946000,Fri May 08 15:26:31 +0000 2020,@peduarte Very surprised at these results. Buttons shouldn't have the hand cursor. Native buttons don't, and neithe‚Ä¶ https://t.co/KCFfeNSwpa
1258771698209321000,Fri May 08 14:52:14 +0000 2020,@dan_abramov Sorry for complaining without checking for updates first! Thanks for your work on the lint rule. I've‚Ä¶ https://t.co/ojOeI6uV17
1258565324091166700,Fri May 08 01:12:10 +0000 2020,@theKashey @IAmTrySound https://t.co/Xj9pDdvIdk
1258519987079090200,Thu May 07 22:12:01 +0000 2020,This is exactly how important things like accessibility get dropped. "Why is this library so complicated? I don't n‚Ä¶ https://t.co/cz3x9fOkn9
1258500498824417300,Thu May 07 20:54:35 +0000 2020,RT @sophiebits: @devongovett @rahul1sethi @sebmarkbage eslint-plugin-react-hooks&gt;=2.4.0 uses the suggestions API https://t.co/Xvlqoy6feM
1258500483305533400,Thu May 07 20:54:31 +0000 2020,@sophiebits @rahul1sethi @sebmarkbage Oh awesome! Apparently I'm wayyy out of date here. üòÄ
1258442072358482000,Thu May 07 17:02:25 +0000 2020,@peduarte Can you disable only the auto fixes? I'd still like to know about the warnings so I can decide what to do.
1258441151763198000,Thu May 07 16:58:45 +0000 2020,@rahul1sethi @sebmarkbage Also, sometimes it's legit. Like, you want a useEffect to run only on mount. But the linter "fixes" that for you.
1258441010205487000,Thu May 07 16:58:12 +0000 2020,@rahul1sethi @sebmarkbage Sure, if the linter can tell that the convention is being followed, then I'd agree it sho‚Ä¶ https://t.co/5Z83Bn6dXh
1258440359379521500,Thu May 07 16:55:37 +0000 2020,@kai_cataldo Yeah that sounds like a good idea. When not run with `--fix` they are warnings, so seems weird to auto‚Ä¶ https://t.co/UebIgzoH4Z
1258438153943183400,Thu May 07 16:46:51 +0000 2020,I must say, the autofixers in eslint-plugin-react-hooks are quite aggressive. Just spent an hour debugging why my c‚Ä¶ https://t.co/5E5BaY1IDd
1258113500817223700,Wed May 06 19:16:47 +0000 2020,@buildsghost @tannerlinsley Haha, what can I say? I am building a lot of stuff!
1258111761842008000,Wed May 06 19:09:53 +0000 2020,@tannerlinsley Awesome! We are literally building the same things right now. üòú https://t.co/GXtrS0y54p
1258080760440873000,Wed May 06 17:06:41 +0000 2020,@undefinedbuddy @code Ok, thanks for the troll. Good bye.
1258079614221475800,Wed May 06 17:02:08 +0000 2020,@undefinedbuddy @code You made the comparison, not me. You are making a big deal about it being written in rust and‚Ä¶ https://t.co/lW6uAhAhnC
1258074621321941000,Wed May 06 16:42:18 +0000 2020,@undefinedbuddy @code AFAICT that is not similar at all. You literally have zero source code in your repo. At least‚Ä¶ https://t.co/kYkxUNmlSS
1258066765864530000,Wed May 06 16:11:05 +0000 2020,@undefinedbuddy I couldn‚Äôt find any rust code at all in the repo. Just a prebuilt binary. I wouldn‚Äôt call that open source.
1258064694306168800,Wed May 06 16:02:51 +0000 2020,@undefinedbuddy Are you going to open source it?
1258050655731638300,Wed May 06 15:07:04 +0000 2020,@mattiatoso That's true to some degree. Parcel already shares Babel ASTs between multiple plugins though. Also, if‚Ä¶ https://t.co/N7xpvyKDDY
1257848870454739000,Wed May 06 01:45:15 +0000 2020,@codervandal I'm curious what you're building. We have run into very few usecases that need to operate beyond the b‚Ä¶ https://t.co/Q1BUtO1GYo
1257848540413390800,Wed May 06 01:43:56 +0000 2020,@codervandal Plugins run in separate stages, and even on separate threads. We have plugin APIs designed for each st‚Ä¶ https://t.co/4F3v8wXVFk
1257846886280519700,Wed May 06 01:37:22 +0000 2020,@codervandal I'm not sure I can answer that for you. I guess you'll have to consider how likely it is that you'll n‚Ä¶ https://t.co/wcprvxccwH
1257843885893546000,Wed May 06 01:25:26 +0000 2020,@codervandal We'd consider that multiple plugins. Easiest way is to make a monorepo with yarn workspaces/lerna. You‚Ä¶ https://t.co/yMf5duyt5w
1257828984676470800,Wed May 06 00:26:13 +0000 2020,@codervandal Work in progress: https://t.co/4p0rYQGK0F  Adobe has used Parcel 1 in production for a couple years. W‚Ä¶ https://t.co/vhCMc99u5e
1257823370533429200,Wed May 06 00:03:55 +0000 2020,@codervandal Just an example. Entry points can be any file that Parcel can handle through its plugin system.
1257816640260960300,Tue May 05 23:37:10 +0000 2020,@stevenbeeckman Yep! That's the idea. All of the languages parcel supports out of the box are actually plugins too. üôÇ
1257790027775373300,Tue May 05 21:51:25 +0000 2020,@ramainen @andrey_sitnik Config-optional. The default Parcel config includes everything Parcel 1 had and more. So 9‚Ä¶ https://t.co/HjNG6sLX8T
1257782608814956500,Tue May 05 21:21:57 +0000 2020,@Rich_Harris https://t.co/ibJGF277Jd
1257781455347843000,Tue May 05 21:17:22 +0000 2020,@Rich_Harris hmm, I think it uses Parcel? https://t.co/RsnTmYX9QM https://t.co/WqhpejMUCX
1257754890048139300,Tue May 05 19:31:48 +0000 2020,@FredKSchott @mxstbr Oh that's clever. Well done. üëè
1257754111774093300,Tue May 05 19:28:42 +0000 2020,@mxstbr @FredKSchott Haha sorry. This marketing spin has been getting on my nerves lately. üòú
1257751972028887000,Tue May 05 19:20:12 +0000 2020,@mxstbr @FredKSchott ugh, wish people would stop saying bundler-less. it's actually not. literally snowpack v2 adds‚Ä¶ https://t.co/TkIpRQrxIK
1257741966390911000,Tue May 05 18:40:27 +0000 2020,@youyuxi @TimvdLippe https://t.co/5WqLws27Yj
1257735958738268200,Tue May 05 18:16:34 +0000 2020,@SubDeveloper @romejsdev And importantly, Rome only works on JS so far. Parcel builds a graph of your entire app, i‚Ä¶ https://t.co/ssOyLfbxxS
1257735598753734700,Tue May 05 18:15:08 +0000 2020,@SubDeveloper @romejsdev Rome actually implements the underlying logic to compile and lint your code. It's closer t‚Ä¶ https://t.co/W52Wziu7Ek
1257728927717441500,Tue May 05 17:48:38 +0000 2020,I'm hopeful that Parcel can enable lots of other tools to work better together in a more optimized way, both in ter‚Ä¶ https://t.co/9DfW52mmyx
1257728927008583700,Tue May 05 17:48:38 +0000 2020,I think pigeonholing Parcel as only a bundler limits its potential. We might decide not to bundle during developmen‚Ä¶ https://t.co/80lgOnzOlO
1257728926245286000,Tue May 05 17:48:38 +0000 2020,Parcel makes it much much easier to use tools together because of this end-to-end integration. No more configuring‚Ä¶ https://t.co/kI5j7mx6RM
1257728925511245800,Tue May 05 17:48:37 +0000 2020,The Parcel graph is an optimized way of combining many other tools together. It understands your entire application‚Ä¶ https://t.co/Jst1QXgdxo
1257728924164821000,Tue May 05 17:48:37 +0000 2020,I'm going to stop describing Parcel as a "bundler". That's only one small piece of what it does. In Parcel 2, it's‚Ä¶ https://t.co/6BXwLVTp6d
1257691802175324200,Tue May 05 15:21:07 +0000 2020,@michaelvillar I thought it was Wednesday yesterday. üòû
1257690275431903200,Tue May 05 15:15:03 +0000 2020,@youyuxi @TimvdLippe Yeah for sure. I'm gonna stop referring to it as a bundler I think. That's only a small part of what it does.
1257688118246793200,Tue May 05 15:06:28 +0000 2020,@AdamRackis Nah, it's fine. Just wish I had more time to work on it.
1257686810307645400,Tue May 05 15:01:16 +0000 2020,@AdamRackis üòê
1257686529192820700,Tue May 05 15:00:09 +0000 2020,@quinnirill I've been thinking about this too. Would be awesome if bundlers took historical builds for some window‚Ä¶ https://t.co/nC9hd2Y5LV
1257684340026142700,Tue May 05 14:51:27 +0000 2020,@TimvdLippe @youyuxi There's a reason create-react-app, vue-cli, next.js, etc. are so popular.
1257684015483547600,Tue May 05 14:50:10 +0000 2020,@TimvdLippe @youyuxi I could not disagree more strongly. üòÜ   The reason JS tooling is so hard to use is because the‚Ä¶ https://t.co/Y6GKsm9lcR
1257518811994964000,Tue May 05 03:53:43 +0000 2020,@FredKSchott I mean CSS, HTML, images, etc. here. Not TS/CoffeeScript.
1257518586400104400,Tue May 05 03:52:49 +0000 2020,@FredKSchott If you want to support anything more than JS, you're likely gonna need a plugin for most bundlers so i‚Ä¶ https://t.co/NDKwGMuBxl
1257511377888899000,Tue May 05 03:24:10 +0000 2020,@FredKSchott Also when you go to bundle for production, you're gonna need a second set of plugins anyway. Might as‚Ä¶ https://t.co/5OoWcLXeIV
1257511064716992500,Tue May 05 03:22:55 +0000 2020,@FredKSchott Sure, but then users need to manually configure all those tools too. That's the part about keeping thi‚Ä¶ https://t.co/JnWDobeONa
1257506919108903000,Tue May 05 03:06:27 +0000 2020,@FredKSchott Gate keeping is not what I was going for, but In my experience, it's non-trivial to build a powerful a‚Ä¶ https://t.co/w6QnDuW3oP
1257503785338855400,Tue May 05 02:54:00 +0000 2020,@FredKSchott This is what I was trying to get at in the thread too. No reason these need to be separate tools. One‚Ä¶ https://t.co/CxFd7zRwFZ
1257485240387289000,Tue May 05 01:40:18 +0000 2020,@codervandal I get `items: any[]`
1257485047117910000,Tue May 05 01:39:32 +0000 2020,@nsthorat Yes, if there are no actual items then that makes sense. I'm trying to get it to use the return type as the param type.
1257482745065771000,Tue May 05 01:30:23 +0000 2020,@Rudeg Yeah, was hoping to avoid that üò¢
1257478763161415700,Tue May 05 01:14:34 +0000 2020,Playground: https://t.co/0nTdrqmZ7F
1257478762175754200,Tue May 05 01:14:34 +0000 2020,TypeScript experts: I need your help. I'm trying to type the following function. `list.items` should infer its type‚Ä¶ https://t.co/p6zkMNTgKf
1257388841088045000,Mon May 04 19:17:15 +0000 2020,@rektide Good luck. IMO there's a reason we use minifiers in addition to gzip/brotli.
1257381672737267700,Mon May 04 18:48:46 +0000 2020,@youyuxi @matthewcp Yeah the hard part comes when you want it to be extensible. The first version of Parcel only to‚Ä¶ https://t.co/x3WlvYu4gC
1257378510622150700,Mon May 04 18:36:12 +0000 2020,@matthewcp @youyuxi You'd be surprised how challenging this is to do well in practice. Especially if you want to av‚Ä¶ https://t.co/u8VKWcBv21
1257372754413748200,Mon May 04 18:13:20 +0000 2020,@youyuxi Well, you do need to recreate all the transform plugins (TS, Babel, .vue, postcss, etc. etc. etc.). That's‚Ä¶ https://t.co/TttIFgyGTh
1257371905759338500,Mon May 04 18:09:57 +0000 2020,@youyuxi That's true, but I think it's something we could support if we had a more granular bundling strategy for d‚Ä¶ https://t.co/tasqqrMnBq
1257370868776394800,Mon May 04 18:05:50 +0000 2020,@_pastelsky In Parcel 2 we automatically split large bundles up into shared bundles that can be cached separately.‚Ä¶ https://t.co/ZNDG5wsMVD
1257370038249668600,Mon May 04 18:02:32 +0000 2020,@youyuxi FWIW, this can be implemented as a Parcel 2 plugin very easily. Plus, you can have all of the other functi‚Ä¶ https://t.co/nDuj7iwn4H
1257369601291309000,Mon May 04 18:00:48 +0000 2020,@youyuxi No reason faster dev builds need to mean reinventing the entire tooling stack. We can pretty easily adjust‚Ä¶ https://t.co/CIMNgf5Lbh
1257369312668549000,Mon May 04 17:59:39 +0000 2020,@youyuxi I think a lot of people hear "bundling" and think "all tooling" though. You're still gonna want a dev serv‚Ä¶ https://t.co/T9ba9hbFzW
1257364931525124000,Mon May 04 17:42:15 +0000 2020,@_pastelsky Yes that's true. But, there's practical limits to how small your chunks should be, and how many you can‚Ä¶ https://t.co/aH6byOCVqs
1257362755390263300,Mon May 04 17:33:36 +0000 2020,@__WesSouza No need to wait! Try it out today. üôÇ
1257362656304025600,Mon May 04 17:33:12 +0000 2020,@mohsen____ @hakimel It looks like the scrollbar still goes above the header. I think scroll-margin-top only affect‚Ä¶ https://t.co/IDua9hVWvx
1257360919237144600,Mon May 04 17:26:18 +0000 2020,@_developit Curious how would you implement HMR with ES modules. I haven't seen a good way. AFAIK there's no way to‚Ä¶ https://t.co/VJ6T0N1f2n
1257342746832056300,Mon May 04 16:14:05 +0000 2020,Bundlers will still be needed for the foreseeable future to achieve the best performance. Even upcoming standards l‚Ä¶ https://t.co/m6Jvy34hjw
1257342744911130600,Mon May 04 16:14:05 +0000 2020,Parcel 2 already supports native ES modules as an output format for production, and we can potentially use that dur‚Ä¶ https://t.co/ZVPMKkaF7v
1257342743833202700,Mon May 04 16:14:05 +0000 2020,We‚Äôve made great progress in caching so far, but that‚Äôs not the only thing we can do. Since Parcel understands your‚Ä¶ https://t.co/aoIZfRlNkq
1257342742004449300,Mon May 04 16:14:04 +0000 2020,There‚Äôs no reason why we can‚Äôt have both great DX and great UX in the same tool. That‚Äôs what we‚Äôve always been tryi‚Ä¶ https://t.co/arMWjTmkkF
1257342740691550200,Mon May 04 16:14:04 +0000 2020,Data shows that even ESM and HTTP2 can‚Äôt out perform bundling yet. Gzip/brotli compression suffers on many smaller‚Ä¶ https://t.co/W8MVAMn96k
1257342736585367600,Mon May 04 16:14:03 +0000 2020,I‚Äôve seen a lot of hate on bundlers lately. I can understand why: people are frustrated with slow builds during dev‚Ä¶ https://t.co/8D6JEmbclv
1257153156053524500,Mon May 04 03:40:43 +0000 2020,@TensorNo @ryanflorence @frontvu Not sure if that's entirely possible to implement in css, but some of it might be.‚Ä¶ https://t.co/eec8JW6uYL
1257151232315027500,Mon May 04 03:33:05 +0000 2020,RT @devongovett: &lt;div&gt; is simultaneously the best and worst feature of the web.  Best: super flexible and easy to use. You can build anythi‚Ä¶
1257149334551847000,Mon May 04 03:25:32 +0000 2020,@ryanflorence @frontvu Exactly. HTML is only as accessible as you make it.  IMO browsers should make elements not r‚Ä¶ https://t.co/1rqFVeJNwx
1257120202900164600,Mon May 04 01:29:47 +0000 2020,@ryanflorence It needs to be so much easier to do the right thing by default, not only in frameworks, but at the we‚Ä¶ https://t.co/iG9CmURGFg
1257005134334161000,Sun May 03 17:52:32 +0000 2020,@buildsghost Will this go along with your unified theory of food?
1256753228349243400,Sun May 03 01:11:33 +0000 2020,@buildsghost Yep, Spectrum does exactly that! Recently changed for the same reasons you cite. https://t.co/TdQhl4BGJY
1256631574717583400,Sat May 02 17:08:09 +0000 2020,@robertpham4real image is generated by https://t.co/jaQrDI4sTC. I think it's the "One Dark" theme.
1256610507114475500,Sat May 02 15:44:26 +0000 2020,@trickydisco78 @DavidKPiano I had not. Looks interesting! I was looking for something like this. üò≤
1256608605643522000,Sat May 02 15:36:52 +0000 2020,@boubiyeah @acutmore In the real version, it only triggers the fetch on mount, and when the request parameters chan‚Ä¶ https://t.co/gRs9jmNUlh
1256607777574674400,Sat May 02 15:33:35 +0000 2020,@DavidKPiano @frassinier Yeah I get that. Idk, I just find giant objects harder to read/understand than code. ü§∑‚Äç‚ôÇÔ∏è
1256607295053500400,Sat May 02 15:31:40 +0000 2020,@frassinier Oh I see. Well, in the real version I'm using TypeScript, which should have the same effect. I simplifi‚Ä¶ https://t.co/WKrQFLa6Uu
1256497407631569000,Sat May 02 08:15:01 +0000 2020,@BeaufortAustin Yep! Also helps centralize all of the possible scenarios in one area of the code and make impossibl‚Ä¶ https://t.co/AWR0xDYNUc
1256494070630768600,Sat May 02 08:01:45 +0000 2020,@frassinier To each their own I guess. I find object configs quite restrictive for this. Hard to put logic inline.‚Ä¶ https://t.co/HHrdhQBl4k
1256492954488721400,Sat May 02 07:57:19 +0000 2020,@acutmore Hmm it is immediately replaced by a new abort controller though...
1256437219566317600,Sat May 02 04:15:51 +0000 2020,@gafemoyano Exactly! If there's no `break` or `return` statement after a case, it falls through to the next one. https://t.co/JU94uyQUgc
1256424013913448400,Sat May 02 03:23:22 +0000 2020,@DavidKPiano Absolutely! Depends how complicated your state is. üôÇ
1256416399196487700,Sat May 02 02:53:07 +0000 2020,@cromas Probably @DavidKPiano üòâ
1256368203594264600,Fri May 01 23:41:36 +0000 2020,Spent today writing a state machine for data loading. Handles lots of edge cases like duplicate loads, aborting, er‚Ä¶ https://t.co/ICCuUKA2Oq
1255878178460991500,Thu Apr 30 15:14:25 +0000 2020,@jkup üòÇ
1255875525555286000,Thu Apr 30 15:03:52 +0000 2020,üò≤ Whoa, just noticed I joined the 5 digit club. üéâüíïü•∞ https://t.co/XsWiOCjfv3
1255871882311561200,Thu Apr 30 14:49:24 +0000 2020,@h5bp @roblarsenwww OMG I'm old üòÆ
1255867187660681200,Thu Apr 30 14:30:45 +0000 2020,@danideicide_ üò≤
1255866945632481300,Thu Apr 30 14:29:47 +0000 2020,@necolas What if you went further and used string event names like the DOM, and only registered one at a time?  use‚Ä¶ https://t.co/P67QXXNIF8
1255631039965225000,Wed Apr 29 22:52:23 +0000 2020,@Veinq_ ü§´
1255629596109594600,Wed Apr 29 22:46:38 +0000 2020,Weekdays are pretty much when I clean up and write tests for all the code I wrote on the weekend. In between meetings, that is. üôÉ
1255569267514204200,Wed Apr 29 18:46:55 +0000 2020,@kentcdodds @ryanflorence @remix_run Exactly. It's similar to what relay does but more general since you can use an‚Ä¶ https://t.co/FavyHJVrb6
1255565063869436000,Wed Apr 29 18:30:13 +0000 2020,@ryanflorence @kentcdodds @remix_run Awesome! I was experimenting with a Parcel plugin for that a while back and it‚Ä¶ https://t.co/ndqjm5zHxE
1255561702491316200,Wed Apr 29 18:16:51 +0000 2020,@ryanflorence @kentcdodds @remix_run Nice! How are you doing that? Do you extract the `load` function out of the co‚Ä¶ https://t.co/rqel8XvgwR
1255557673874944000,Wed Apr 29 18:00:51 +0000 2020,@ryanflorence @kentcdodds @remix_run Nice, looks great! Really liking the API so far.  But does it render-as-you fetch or fetch-on-render? üôÉ
1255505482711736300,Wed Apr 29 14:33:27 +0000 2020,@Paratron @wouterds @dan_abramov You can still have just a single component per file with named exports if you want‚Ä¶ https://t.co/CWAACaiLYq
1255504532378960000,Wed Apr 29 14:29:41 +0000 2020,@AdamRackis @buildsghost No I just mean it's big and complicated with a lot of features to support.
1255368767791644700,Wed Apr 29 05:30:12 +0000 2020,@mjackson Yep! I find I need to cast fairly often. Usually not to any though. Casting is a fine workaround for when‚Ä¶ https://t.co/3oXcnG6Eyi
1255263586118664200,Tue Apr 28 22:32:15 +0000 2020,@ahmedoverflow I like it a lot. I also have an iMac for personal use (the laptop is a work machine), and it's very‚Ä¶ https://t.co/m8UQAEil8z
1255235674275557400,Tue Apr 28 20:41:20 +0000 2020,@wouterds @dan_abramov Now add another export. Then you have to `import HelloWorld, {Other} from 'my-library'` Bett‚Ä¶ https://t.co/EQN4SC2GGx
1255231400258744300,Tue Apr 28 20:24:21 +0000 2020,@dan_abramov Big fan of using named exports over default exports too. Shows up much better in compile time errors,‚Ä¶ https://t.co/563EyPNtPs
1255229427513991200,Tue Apr 28 20:16:31 +0000 2020,@amasad @replit Impressive that the editor works so well on mobile. What are you using? In the past it seemed like‚Ä¶ https://t.co/CGpgWA8K8o
1255179717562359800,Tue Apr 28 16:58:59 +0000 2020,Chromatic is amazing! We've been using it to test visual regressions in our design system at Adobe, and it's helped‚Ä¶ https://t.co/62pnvugmxu
1255176504083800000,Tue Apr 28 16:46:13 +0000 2020,@okito @jonikorpi Strange.
1255174528461795300,Tue Apr 28 16:38:22 +0000 2020,@cromas Yes. 2016 one.
1255174020456042500,Tue Apr 28 16:36:21 +0000 2020,@GiacomoRebonato @jonikorpi Hmm I have power on the right side and my monitor on the left. You're saying I should s‚Ä¶ https://t.co/imGuuzaM9s
1255171457799225300,Tue Apr 28 16:26:10 +0000 2020,@jonikorpi Oh that's interesting. I have a large 4K monitor connected to the left ports. Should I try the right one‚Ä¶ https://t.co/B5v7sGhwb2
1255167425168863200,Tue Apr 28 16:10:08 +0000 2020,Really loving this new 16" MacBook Pro overall. It's fast, the keyboard is good, and the bigger screen is nice.  Th‚Ä¶ https://t.co/DlKrWhGt8c
1255141991291084800,Tue Apr 28 14:29:04 +0000 2020,@buildsghost Lol now you know why Parcel 2 has taken 2 years to build. üòú
1254869817019871200,Mon Apr 27 20:27:33 +0000 2020,@yoavweiss Nice! Could something like this be done today with a service worker? e.g. a build tool produces the full‚Ä¶ https://t.co/U3vM5weHqp
1254797382824280000,Mon Apr 27 15:39:43 +0000 2020,@elyktrix this is already basically possible with less awful syntax with css variables.
1254566327349473300,Mon Apr 27 00:21:35 +0000 2020,@tannerlinsley Make sure you implement the ARIA grid pattern either way you go, but especially with divs! üòä   https://t.co/VtPPqIqIAL
1254486884559904800,Sun Apr 26 19:05:55 +0000 2020,Docs docs docs docs docs! üé∂
1254165386657853400,Sat Apr 25 21:48:24 +0000 2020,@void_0 @dan_abramov @Yurm04 It's can be hard to keep track of these differences. You might test in Chrome, and wri‚Ä¶ https://t.co/fWSjt8Y9xB
1254164784158662700,Sat Apr 25 21:46:00 +0000 2020,@void_0 @dan_abramov @Yurm04 * Menus that close on blur (e.g. tabbing out). If the browser fires a focus/blur event‚Ä¶ https://t.co/zQW5YOKaN9
1254164603325431800,Sat Apr 25 21:45:17 +0000 2020,@void_0 @dan_abramov @Yurm04 Many things rely on consistent event ordering to work reliably. Examples:  * Modals/po‚Ä¶ https://t.co/rWgeZpigW2
1254154323061170200,Sat Apr 25 21:04:26 +0000 2020,@dan_abramov @Yurm04 Also note this is also inconsistent for other browser native controls like checkboxes and radio buttons.
1254153060462375000,Sat Apr 25 20:59:25 +0000 2020,@dan_abramov @Yurm04 Mostly agree, but be careful! Focus behavior with  &lt;button&gt; is inconsistent across browsers: s‚Ä¶ https://t.co/xa301G9S5h
1253857692625469400,Sat Apr 25 01:25:44 +0000 2020,@ryanflorence Yeah, makes sense. Still have to ship 3 versions of the code to all clients but better than shipping prettier I guess.
1253856946702053400,Sat Apr 25 01:22:46 +0000 2020,@ryanflorence Such a good idea. Only problem is you'd have to ship all of prettier to the browser. üôÉ
1253716659652591600,Fri Apr 24 16:05:19 +0000 2020,@mjackson I've always wondered why router links don't just use `href` and have their own prop like `to` instead...
1253700325048905700,Fri Apr 24 15:00:24 +0000 2020,@_developit @igarshmyb Define ‚Äúall‚Äù. üòâ
1253697259205570600,Fri Apr 24 14:48:13 +0000 2020,@peduarte Too small tap targets (e.g. smaller than 44px)
1253067290079228000,Wed Apr 22 21:04:57 +0000 2020,@mjackson @cramforce Let us know if Parcel can help with anything. üòú
1253062268645855200,Wed Apr 22 20:45:00 +0000 2020,@ascorbic @kylemathews @swyx @gatsbyjs @chatsidhartha Yeah fsevents isn't very granular in the events it gives us.‚Ä¶ https://t.co/QMZbflZs48
1253060863084265500,Wed Apr 22 20:39:25 +0000 2020,@ascorbic @kylemathews @swyx @gatsbyjs @chatsidhartha Hmm yeah. Probably depends on the OS...
1253060498263687200,Wed Apr 22 20:37:58 +0000 2020,@kylemathews @swyx @gatsbyjs @chatsidhartha @ascorbic Is that part open source? Can't find it in the repo
1253060003998494700,Wed Apr 22 20:36:00 +0000 2020,@kylemathews @swyx @gatsbyjs @chatsidhartha @ascorbic Oh awesome! Had no idea. üòç
1253058406484603000,Wed Apr 22 20:29:39 +0000 2020,@kylemathews @swyx @gatsbyjs Cool! Would love to help with caching bundling where we can. üòÄ
1253051816293486600,Wed Apr 22 20:03:28 +0000 2020,@mjackson Hmm, wonder why Next.js doesn't use React Router...
1253050354716950500,Wed Apr 22 19:57:39 +0000 2020,@mjackson Neat! What's different about it from e.g. Next.js?
1253043387244019700,Wed Apr 22 19:29:58 +0000 2020,@kylemathews @swyx @gatsbyjs Cool stuff! Is it just the data layer that‚Äôs incremental, or also the bundling?
1253020558939222000,Wed Apr 22 17:59:15 +0000 2020,@edm00se Yup! It's great.
1253018016398233600,Wed Apr 22 17:49:09 +0000 2020,@GabeFromUtah Indeed it is! Good eye. üòâ
1253012573248557000,Wed Apr 22 17:27:31 +0000 2020,Best quarantine purchase so far! ‚òïÔ∏è https://t.co/LZNa2wNkI9
1252979210555023400,Wed Apr 22 15:14:57 +0000 2020,@cpojer We believe in @sebmck üôè
1252686435221561300,Tue Apr 21 19:51:34 +0000 2020,@quinnirill Ooh, yes. I've been thinking about this too.
1252642977970745300,Tue Apr 21 16:58:53 +0000 2020,@mxstbr @mjackson Agreed üíØ
1252635497169481700,Tue Apr 21 16:29:10 +0000 2020,@diegohaz It has been over a year since I wrote that RFC and a lot has happened since then. Not sure why this tweet‚Ä¶ https://t.co/LCGyQCRDga
1252634386417123300,Tue Apr 21 16:24:45 +0000 2020,@diegohaz Yes, that‚Äôs why I proposed it to React core as opposed to userland. My guess is that this high level API‚Ä¶ https://t.co/LFzAXGqStt
1252615957777756200,Tue Apr 21 15:11:31 +0000 2020,Bundling still relevant after all üòâ https://t.co/Qd6386vS64
1252614239505670100,Tue Apr 21 15:04:41 +0000 2020,@ryanflorence @Jordy_vD_ @cramforce IMO it's typically better to solve this by making your app more modular, e.g. m‚Ä¶ https://t.co/VJFAiPi2vU
1252373584485343200,Mon Apr 20 23:08:25 +0000 2020,@elijahmanor @trueadm was working on this. Last I heard that project was also paused. What‚Äôs the current status, @trueadm?
1252331788665409500,Mon Apr 20 20:22:20 +0000 2020,@mrgnrdrck That's exactly what I'm talking about! Custom code for an autocomplete shouldn't be required. It should‚Ä¶ https://t.co/Evat1rbjVA
1252331547178307600,Mon Apr 20 20:21:22 +0000 2020,@mrgnrdrck Wow, I could not disagree more strongly! üòÄ
1252325193583739000,Mon Apr 20 19:56:07 +0000 2020,@souporserious @TheToxicHydra @dfkaye @robinrendle I think this might become easier with Web Animations once the sc‚Ä¶ https://t.co/duWuWZ10RO
1252324997990764500,Mon Apr 20 19:55:21 +0000 2020,@souporserious @TheToxicHydra @dfkaye @robinrendle follow up: seems to work great on desktop! On iPad safari it's s‚Ä¶ https://t.co/lCqF3uEqUu
1252290569495122000,Mon Apr 20 17:38:32 +0000 2020,@buildsghost import * as lib from ‚Äòlib‚Äô  with (lib) {   // üòà  }
1252261031243444200,Mon Apr 20 15:41:10 +0000 2020,@zamith Yes to all of those.  There are very few built in controls, mostly just basic form controls. And they are v‚Ä¶ https://t.co/a76U2VmIf8
1252097425319198700,Mon Apr 20 04:51:03 +0000 2020,@PierB @mikaelgramont https://t.co/WwlWdxggpM
1252088063691329500,Mon Apr 20 04:13:51 +0000 2020,@PierB @mikaelgramont Event handling is one. In my experience, browsers are still quite inconsistent. Check out the‚Ä¶ https://t.co/CEeAUtQUNn
1252077728490156000,Mon Apr 20 03:32:47 +0000 2020,@PierB @mikaelgramont Absolutely, but that‚Äôs a trade off. React handles a lot of edge cases and cross browser diffe‚Ä¶ https://t.co/F6wx5CWnMQ
1251974654190776300,Sun Apr 19 20:43:12 +0000 2020,@slightlylate @addyosmani Umm, ok. You don't have to use it if you don't want. ü§∑‚Äç‚ôÇÔ∏è
1251973908934213600,Sun Apr 19 20:40:15 +0000 2020,@slightlylate @addyosmani I don't think page reload performance from localhost is really representative so I'm not sure how that would help.
1251973291604013000,Sun Apr 19 20:37:47 +0000 2020,@slightlylate @addyosmani The point here is to maintain the state of the app while reloading. Not the same as a full page reload.
1251972643114238000,Sun Apr 19 20:35:13 +0000 2020,@addyosmani I'm not really sure what needed to change in webpack core to make it work, but we based our implementat‚Ä¶ https://t.co/ubrXBFY49s
1251970976444629000,Sun Apr 19 20:28:35 +0000 2020,@addyosmani Came to the web 5 months ago in Parcel. üòâ https://t.co/2Qtjl9WJHT
1251962763020128300,Sun Apr 19 19:55:57 +0000 2020,@evanplaice I am the creator of Parcel, I think I know how bundlers work. Parcel 2 outputs ESM with very little to‚Ä¶ https://t.co/0c6dAGosLS
1251956575935201300,Sun Apr 19 19:31:22 +0000 2020,@evanplaice What? It‚Äôs clearly not the framework if the framework is 1KB. Maybe it actually is more complicated than you think?
1251953432425971700,Sun Apr 19 19:18:53 +0000 2020,@evanplaice Right... so I'm not sure what you're arguing here. I think we're agreeing. 12K of actual logic. These c‚Ä¶ https://t.co/H7ln1rKh7I
1251952224042774500,Sun Apr 19 19:14:05 +0000 2020,@rauchg Landed in Parcel 5 months ago. üòâ https://t.co/Kgz6lwFMAA
1251951173663260700,Sun Apr 19 19:09:54 +0000 2020,@evanplaice This literally is all there in service of UX. It's not like I wanted to write all this code.
1251950740144181200,Sun Apr 19 19:08:11 +0000 2020,@evanplaice I don't know what you're referring to. All of this code is necessary, regardless of whether you build i‚Ä¶ https://t.co/sa6zXHs2Bn
1251946486994104300,Sun Apr 19 18:51:17 +0000 2020,@evanplaice But it's over 20KB min+gzipped, so that doesn't seem like the issue here. The issue is that the platfor‚Ä¶ https://t.co/XT9JsVWqs1
1251943248639037400,Sun Apr 19 18:38:25 +0000 2020,@BenDelarre @evanplaice Yeah. I think that‚Äôs what https://t.co/kIZRwMzopo is looking at. Seems like a big/long term‚Ä¶ https://t.co/qCz5g6slbM
1251940691426435000,Sun Apr 19 18:28:15 +0000 2020,@evanplaice The fully accessible custom select I built is quite a bit bigger than that, without even including Reac‚Ä¶ https://t.co/tLFNMhFNux
1251938791406702600,Sun Apr 19 18:20:42 +0000 2020,@ElanHasson Yeah, unfortunately there is no possibility of a cross site shared CDN anymore due to privacy concerns.‚Ä¶ https://t.co/ywIc21AeKH
1251938455271075800,Sun Apr 19 18:19:22 +0000 2020,@BenDelarre @evanplaice Unfortunately, there is no cross site shared cache anymore due to privacy/security concerns‚Ä¶ https://t.co/sFkggHI4zl
1251938136835276800,Sun Apr 19 18:18:06 +0000 2020,@evanplaice üëç seems like a good place to start.
1251937744453959700,Sun Apr 19 18:16:32 +0000 2020,@ElanHasson Web components are just another runtime, like React or Vue. They‚Äôre a start, but there‚Äôs no actual buil‚Ä¶ https://t.co/z1eCwPccmR
1251937128432328700,Sun Apr 19 18:14:05 +0000 2020,@evanplaice Except you‚Äôd still have to download the implementation separately for each site you visit. Doesn‚Äôt really solve the problem.
1251936874785980400,Sun Apr 19 18:13:05 +0000 2020,@evanplaice The problem is the 2K version would likely miss a ton of functionality. Accessibility, support for mous‚Ä¶ https://t.co/pdkBIcSOeM
1251934708054716400,Sun Apr 19 18:04:28 +0000 2020,@evanplaice Web components don‚Äôt solve the issue of needing to ship the implementation for each component over the‚Ä¶ https://t.co/OOqZTkb3qo
1251930904831746000,Sun Apr 19 17:49:22 +0000 2020,@evanplaice Web components may well be the base for this one day! I think what we‚Äôre asking for is some higher leve‚Ä¶ https://t.co/t4qSaJYild
1251930171071885300,Sun Apr 19 17:46:27 +0000 2020,@mikaelgramont In fact, at one point, they tried to remove parts of it, e.g. the synthetic event system, and found‚Ä¶ https://t.co/6FFUii1ifv
1251929818293080000,Sun Apr 19 17:45:03 +0000 2020,@mikaelgramont But why do you think ReactDOM is large? I highly doubt a skilled team like the React team is adding‚Ä¶ https://t.co/jQvQfFgM6o
1251925943989330000,Sun Apr 19 17:29:39 +0000 2020,@Lynx_Eyes https://t.co/ZhYnizf8sO
1251923847382659000,Sun Apr 19 17:21:19 +0000 2020,@Lynx_Eyes These days browsers don‚Äôt allow that kind of shared cross domain cache for privacy/security reasons. I‚Äôm‚Ä¶ https://t.co/oFFqT1GLhF
1251923334138228700,Sun Apr 19 17:19:17 +0000 2020,@dustindeus Not quite open source yet. End of May!
1251918081179279400,Sun Apr 19 16:58:24 +0000 2020,@dustindeus Yep!
1251910771379859500,Sun Apr 19 16:29:21 +0000 2020,@amarkeev Yeah, github is pretty slow, even with JS. They mostly do full page reloads on most interactions anyway,‚Ä¶ https://t.co/TFgFHuhknh
1251903818482069500,Sun Apr 19 16:01:44 +0000 2020,@dustindeus Yup üòâ https://t.co/lVpbXJB37l https://t.co/1FMvVfkbXb
1251903585027145700,Sun Apr 19 16:00:48 +0000 2020,@epidemian Absolutely. Developers should be conscious of what they're including in their apps and avoid bloat. That‚Ä¶ https://t.co/5N1DOYZCmp
1251903029789421600,Sun Apr 19 15:58:36 +0000 2020,@amarkeev Yeah I agree, if you're a content site or provide some very simple forms, you probably shouldn't ship any‚Ä¶ https://t.co/8jFWXfCeNr
1251901566195363800,Sun Apr 19 15:52:47 +0000 2020,@albertgao If this behavior were built into the browser, as primitive UI controls that could be fully styled and cu‚Ä¶ https://t.co/yF6Kc0c0I6
1251901344329261000,Sun Apr 19 15:51:54 +0000 2020,@albertgao I disagree. The actual behavior of a button is pretty consistent and well understood, and even speced by‚Ä¶ https://t.co/5UWNgrBBFx
1251899990546370600,Sun Apr 19 15:46:31 +0000 2020,@ndCircus Absolutely. Devs should be conscious of bundle size and not ship over complex code. But that only goes so‚Ä¶ https://t.co/bIDOKXRWEF
1251897897798402000,Sun Apr 19 15:38:12 +0000 2020,@Lynx_Eyes Sure, but at least they don't need to download the entire UI framework as well. Then they'd be 10x bigger still.
1251758327828107300,Sun Apr 19 06:23:36 +0000 2020,Bundle size is not the only metric. Overall quality of experience, taking all of this into account, is more importa‚Ä¶ https://t.co/B9vjcDgqTT
1251758325127016400,Sun Apr 19 06:23:35 +0000 2020,We have to build every UI control we need from scratch. We have to support desktop, mobile, mouse, touch, keyboards‚Ä¶ https://t.co/q7zueiD4E2
1251758324162257000,Sun Apr 19 06:23:35 +0000 2020,Makes me so mad to see web platform advocates shaming people on twitter for their bundle sizes while at the same ti‚Ä¶ https://t.co/bvAiqPcqaF
1251758323558281200,Sun Apr 19 06:23:35 +0000 2020,The main reason web apps have a lot of JS is because the platform alone is insufficient to build high quality apps.‚Ä¶ https://t.co/n40LYrT5AY
1251617134532124700,Sat Apr 18 21:02:33 +0000 2020,@BeatzBall Yeah, this was one of the first things I tried. Not too noticeable on Mac where the scroll bars are hidd‚Ä¶ https://t.co/3LwKkqYSBk
1251551118355689500,Sat Apr 18 16:40:13 +0000 2020,@buildsghost Something like react-native for desktop? I started building an IDE with something like that a while ba‚Ä¶ https://t.co/jIFXTlNx8R
1251549704749412400,Sat Apr 18 16:34:36 +0000 2020,@souporserious @TheToxicHydra @dfkaye @robinrendle Ooh, didn't know about that one! Will try it out. üòç
1251537196114309000,Sat Apr 18 15:44:54 +0000 2020,@TheToxicHydra @dfkaye @robinrendle Yes but it‚Äôs janky. Scroll listeners don‚Äôt fire every frame, so the table body‚Ä¶ https://t.co/6wlIV9TZ4V
1251528672089043000,Sat Apr 18 15:11:02 +0000 2020,@TheToxicHydra @dfkaye @robinrendle True, but then you have to sync the horizontal scroll position somehow. That can be pretty janky.
1251527944670859300,Sat Apr 18 15:08:08 +0000 2020,@georgegreenest Sure, but then you'd need to synchronize the horizontal scroll position somehow. Doing that with JS can be pretty janky.
1251526997768941600,Sat Apr 18 15:04:23 +0000 2020,@cyberingcc Then you have to sync the horizontal scroll position of the headers somehow, which can be janky if done in JS.
1251299095060181000,Fri Apr 17 23:58:46 +0000 2020,@cromas Yeah, that was the first thing I tried. The problem is the vertical scrollbar would be invisible when there‚Ä¶ https://t.co/6YczhP6CmX
1251289480067035100,Fri Apr 17 23:20:34 +0000 2020,@AdamE8g Interesting. Looks like the scrollbar is actually underneath the header?
1251284964991103000,Fri Apr 17 23:02:38 +0000 2020,@buildsghost It's virtualized, so everything is absolute/sticky positioned.
1251284870073999400,Fri Apr 17 23:02:15 +0000 2020,@bcangussu @fregante If the header is inside the scrollable region, then negative margin would make it invisible ri‚Ä¶ https://t.co/37acj5XImX
1251283107304505300,Fri Apr 17 22:55:15 +0000 2020,@fregante Close, but the scrollbar would still go above the headers. Need a margin on the scrollbar somehow.
1251280895505506300,Fri Apr 17 22:46:27 +0000 2020,@dfkaye @robinrendle Yeah that's close. Ideally the vertical scrollbar wouldn't go over the headers, just the body‚Ä¶ https://t.co/kSvqAWLr0Q
1251279371370807300,Fri Apr 17 22:40:24 +0000 2020,@itsjustcon Yeah, but then you can't horizontal scroll over the headers, only over the body. Plus, with hardware ac‚Ä¶ https://t.co/lwh1olgAJb
1251279084472037400,Fri Apr 17 22:39:16 +0000 2020,@buildsghost I've been trying position: sticky and it's close, but I don't think it works quite as expected. Hard t‚Ä¶ https://t.co/E5fm7OzQcY
1251276598407393300,Fri Apr 17 22:29:23 +0000 2020,Is there really no good way to build a table in CSS that can be scrolled both horizontally and vertically, but with‚Ä¶ https://t.co/KNdVwnnyTz
1251036030163021800,Fri Apr 17 06:33:27 +0000 2020,@buildsghost Best option: no types or tests. üòú
1250846007778144300,Thu Apr 16 17:58:22 +0000 2020,RT @devongovett: I discovered recently that React components using forwardRef, memo, lazy, or other top-level React methods could not be tr‚Ä¶
1250823680138965000,Thu Apr 16 16:29:39 +0000 2020,@WickyNilliams Yeah for sure. There are some questionable API decisions in there. `addEventListener` is another one‚Ä¶ https://t.co/EU1wBtbr9S
1250811362659332000,Thu Apr 16 15:40:42 +0000 2020,Crank looks really interesting. I've been using more generator functions recently, and they have some very cool pro‚Ä¶ https://t.co/rCqR8Cztgn
1250626747273379800,Thu Apr 16 03:27:06 +0000 2020,I discovered recently that React components using forwardRef, memo, lazy, or other top-level React methods could no‚Ä¶ https://t.co/qy522x16wp
1250529154472149000,Wed Apr 15 20:59:18 +0000 2020,Problem: building the app is slow. Solution: buy a faster laptop. üòÖ  This new 16" MBP I got literally runs Parcel o‚Ä¶ https://t.co/NqCmbaTkY0
1250439470786068500,Wed Apr 15 15:02:56 +0000 2020,@rahul1sethi @jaffathecake @pete_tnt @parceljs This seems like it would be very difficult to impossible in the gene‚Ä¶ https://t.co/y3Nx4ryXwh
1250322793196998700,Wed Apr 15 07:19:18 +0000 2020,@evanwallace So, in parcel 2‚Äôs case, there‚Äôd be a transformer plugin that parses the code and emits dependencies an‚Ä¶ https://t.co/ajOsB9XRH6
1250322286013378600,Wed Apr 15 07:17:17 +0000 2020,@evanwallace Yeah, I‚Äôm sure you‚Äôd lose some perf, but still much better than other tools. Something like flatbuffer‚Ä¶ https://t.co/TlAjAzjqJK
1250321071229653000,Wed Apr 15 07:12:27 +0000 2020,@evanwallace I imagine even JS based tools can gain quite a bit of performance by reducing algorithmic complexity t‚Ä¶ https://t.co/62PzoBnFcj
1250320391299428400,Wed Apr 15 07:09:45 +0000 2020,@evanwallace JS really is the wrong tool for this job, but the ease of authoring and integrating plugins in it is q‚Ä¶ https://t.co/PiA975lqNB
1250319752842494000,Wed Apr 15 07:07:13 +0000 2020,@evanwallace Yeah... unfortunately most of what‚Äôs slow about Parcel is really Babel (esp scope tracking). We‚Äôd need‚Ä¶ https://t.co/4LYtIvO0sG
1250315426946375700,Wed Apr 15 06:50:02 +0000 2020,@evanwallace Would be super awesome to combine something like this with a more general orchestration tool like Parc‚Ä¶ https://t.co/eBIYIejgRp
1250312810971590700,Wed Apr 15 06:39:38 +0000 2020,@evanwallace I don't think this benchmark is necessarily comparing equals. For example, Parcel runs Babel by defaul‚Ä¶ https://t.co/gSXIgZZDlU
1250106316321738800,Tue Apr 14 16:59:06 +0000 2020,@cromas I had the 2016 one. Had many keys fail, so hopefully this one is better! ü§û
1249805375961886700,Mon Apr 13 21:03:16 +0000 2020,@peduarte @JoshWComeau @Media @shuding_ @moon_meister üòÖ sorry to rain on your parade
1249803259553779700,Mon Apr 13 20:54:51 +0000 2020,@JoshWComeau @peduarte @Media @shuding_ @moon_meister I've been using pointer events, which have a `pointerType` pr‚Ä¶ https://t.co/m5VyLS618U
1249796898040328200,Mon Apr 13 20:29:35 +0000 2020,Finally! üòÜü•≥ https://t.co/xDvmRHSu8U
1249724427433959400,Mon Apr 13 15:41:36 +0000 2020,@bdc This is one of the reasons native devs can be so productive, while producing high quality output. Native UI fr‚Ä¶ https://t.co/8vfmAJ773s
1249723486987145200,Mon Apr 13 15:37:52 +0000 2020,@bdc The web platform is great, and lots of things are *possible* but not *easy*. We need higher level UI primitive‚Ä¶ https://t.co/cCZcROm8Nl
1249377269983916000,Sun Apr 12 16:42:08 +0000 2020,@notphanan Unfortunately it doesn‚Äôt work reliably across browsers, especially on hybrid devices with both touch and‚Ä¶ https://t.co/3mBL60C66f
1249057329087000600,Sat Apr 11 19:30:48 +0000 2020,@fluchtpunkt We used to write code this way: imperative DOM code to keep the DOM up to date with state etc. It was‚Ä¶ https://t.co/dqxzUB5lh0
1249056719562403800,Sat Apr 11 19:28:22 +0000 2020,@fluchtpunkt The combobox would need to do most of the things preact does manually, eg updating the DOM at the righ‚Ä¶ https://t.co/IeSca3c2Lz
1249018706232893400,Sat Apr 11 16:57:19 +0000 2020,@kindberg Yep it‚Äôs all hooks! You are responsible for doing whatever rendering you need to fit your design. üòä
1249007437408952300,Sat Apr 11 16:12:33 +0000 2020,@sebastienlorber ü§Æ why does this need to be in the syntax vs an API? Something like Record.create({...})
1249003272238596000,Sat Apr 11 15:56:00 +0000 2020,@johndanielpray It can't actually be hidden (display: none). We used this trick: https://t.co/tYqlQDNfBJ plus aria-‚Ä¶ https://t.co/z8Cz73dxBk
1249001087723393000,Sat Apr 11 15:47:19 +0000 2020,@fluchtpunkt Might make some wrappers as web components with preact one day. Honestly it would probably be smaller‚Ä¶ https://t.co/H9Tb9Yokgc
1248777203703144400,Sat Apr 11 00:57:41 +0000 2020,@ForceTheIssue https://t.co/mSyWBzE05X üòç
1248775639315800000,Sat Apr 11 00:51:28 +0000 2020,@DavidKPiano @codervandal Haha I was waiting for you to appear! üòâ  This doc was definitely more of a thought proces‚Ä¶ https://t.co/PtK7OCXIXt
1248756313330335700,Fri Apr 10 23:34:40 +0000 2020,@codervandal Possibly! Lots of the behavior here is already implemented in reusable hooks from other components (e.‚Ä¶ https://t.co/XNo8Ut2BPD
1248755927374684200,Fri Apr 10 23:33:08 +0000 2020,@concreteniche Certainly makes documentation easier, where storing state doesn't really matter. But, there are lots‚Ä¶ https://t.co/kjttFpvFfi
1248754105708732400,Fri Apr 10 23:25:54 +0000 2020,@timkevinoxley Exactly! Hoping to help end that tradeoff by providing a library of headless primitives teams can us‚Ä¶ https://t.co/m0KuOwImJP
1248730664628670500,Fri Apr 10 21:52:45 +0000 2020,@diegohaz @sseraphini Yeah, though probably not for the first version. We're designing the APIs to be extensible fo‚Ä¶ https://t.co/9tKt8FRtWu
1248701509971263500,Fri Apr 10 19:56:54 +0000 2020,Next up: ComboBox! üòÄ  This thing is gonna be complicated, especially once you factor in all the events and controll‚Ä¶ https://t.co/x0vYKXAQpV
1248503649820500000,Fri Apr 10 06:50:40 +0000 2020,@klaaspieter Actually testing with real screen readers isn‚Äôt as hard as you might imagine. VoiceOver is built into‚Ä¶ https://t.co/fjZTiQC2tJ
1248488807625674800,Fri Apr 10 05:51:42 +0000 2020,@albertgao Jest with react-testing-library for unit tests. Storybook a11y plug-in using aXe, and eslint-plugin-a11y‚Ä¶ https://t.co/dRfc2vO9YF
1248403035727908900,Fri Apr 10 00:10:52 +0000 2020,@somekindofwei Custom library üôÇ
1248388596077228000,Thu Apr 09 23:13:29 +0000 2020,@schrepfler I'll be sure to post it here. üôÇ
1248374434861158400,Thu Apr 09 22:17:13 +0000 2020,@JonasKuske @AmirTadzhiev Would be really cool to somehow share this stuff across frameworks too... ü§î
1248357255709249500,Thu Apr 09 21:08:57 +0000 2020,@ccalo The tray is based on the viewport width. iPad gets the normal popover, for example. We do scale up the size‚Ä¶ https://t.co/QiLx8A3C8S
1248342422217580500,Thu Apr 09 20:10:01 +0000 2020,@dgrubelic Yeah. I generally prioritize interactions over file size (within limits of course). Tiny size is no good‚Ä¶ https://t.co/QS1bZzns5Y
1248336173228937200,Thu Apr 09 19:45:11 +0000 2020,@GarthDB Plus, that's just one example. Icons are another. The items are fully customizable by apps. Unfortunately,‚Ä¶ https://t.co/jz41ZjWxXY
1248335908715151400,Thu Apr 09 19:44:08 +0000 2020,@GarthDB They are separate pieces of information, e.g. a title and description. Exposed to ARIA separately. They ha‚Ä¶ https://t.co/wmcmOQXCsH
1248335165425778700,Thu Apr 09 19:41:11 +0000 2020,@GarthDB For me it just wraps? Not really the same thing as called for by the design...
1248333331722190800,Thu Apr 09 19:33:53 +0000 2020,@GarthDB See the first video. There are icons, and multiple lines of text in each option. AFAIK there's no way to d‚Ä¶ https://t.co/1LruXWENk7
1248330959629344800,Thu Apr 09 19:24:28 +0000 2020,@GarthDB You can have custom options with more than just a single line of text.
1248322470236446700,Thu Apr 09 18:50:44 +0000 2020,@auniverseaway @FezVrasta Hmm, something seems wrong there. Happy to help debug internally. üôÇ
1248321445165297700,Thu Apr 09 18:46:39 +0000 2020,@auniverseaway @FezVrasta Maybe including all of react and react-dom too? It's definitely not that big by itself.
1248320809162010600,Thu Apr 09 18:44:08 +0000 2020,@anddoutoi @twsted Yep!
1248320596812783600,Thu Apr 09 18:43:17 +0000 2020,@AmirTadzhiev If there's some kind of Vue shim for hooks, you might be able to get it to work directly!
1248320394089492500,Thu Apr 09 18:42:29 +0000 2020,@twsted @anddoutoi I've been meaning to test with Preact soon too, if it's bundle size you're worried about. I think it should work.
1248316725721882600,Thu Apr 09 18:27:54 +0000 2020,@peduarte One of them is designated as the main label for the item and pointed to by aria-labelledby, and the other‚Ä¶ https://t.co/wBa6F33PIz
1248315604248879000,Thu Apr 09 18:23:27 +0000 2020,@FezVrasta Yep, that'll be open source too. I didn't really cover the features of that here, but it's pretty cool t‚Ä¶ https://t.co/IKKJ0Vk3LA
1248315197107794000,Thu Apr 09 18:21:50 +0000 2020,@marcysutton @amber1ey Yeah of course! Our product teams at Adobe definitely do lots of user testing as they build‚Ä¶ https://t.co/C4iISy38iU
1248311308279152600,Thu Apr 09 18:06:23 +0000 2020,@pacocoursey Zero dependencies other than react (we're looking into testing with preact too). We used hooks and fun‚Ä¶ https://t.co/FVUfRCsCjc
1248311079320486000,Thu Apr 09 18:05:28 +0000 2020,@amber1ey We haven't done formal user testing yet, but functional testing we had a big spreadsheet for the browser/‚Ä¶ https://t.co/3QDXhZ9Eut
1248310009168986000,Thu Apr 09 18:01:13 +0000 2020,@chancethedev @diegohaz The autofocus behavior is also different: when opened with keyboard/screen reader, the firs‚Ä¶ https://t.co/NwMzIoyls9
1248309796857512000,Thu Apr 09 18:00:22 +0000 2020,@chancethedev @diegohaz It's mostly different between mouse, touch, and keyboard, not specific platforms. For examp‚Ä¶ https://t.co/vluv0hHzUT
1248307385333985300,Thu Apr 09 17:50:47 +0000 2020,@HipsterSmoothie Shooting for end of May!
1248306574994505700,Thu Apr 09 17:47:34 +0000 2020,And before you ask, yes, all of this will be open source very soon. The best part is that it's totally abstracted a‚Ä¶ https://t.co/XP2rSPnoqT
1248306573320917000,Thu Apr 09 17:47:34 +0000 2020,We worked hard to ensure that everything works well with screen readers, on both desktop and mobile. This included‚Ä¶ https://t.co/0sihClKn9H
1248306452256546800,Thu Apr 09 17:47:05 +0000 2020,For long lists, the listbox is virtualized, which makes sure it can be shown quickly without waiting for the browse‚Ä¶ https://t.co/zIdCwxS08r
1248306411508916200,Thu Apr 09 17:46:55 +0000 2020,Native browser form autofill is supported by rendering a hidden native select and handling its onChange event. üò≤ https://t.co/QA4V9sDWGO
1248304791219916800,Thu Apr 09 17:40:29 +0000 2020,On mobile, the popover is replaced by a tray, which allows a bigger area for users to scroll.  We also ensure that‚Ä¶ https://t.co/uAXXF1SUtl
1248304789856727000,Thu Apr 09 17:40:28 +0000 2020,Typeahead is implemented both inside the listbox and while the select is closed. This allows quickly selecting an i‚Ä¶ https://t.co/DrggLYqg0N
1248304778867642400,Thu Apr 09 17:40:26 +0000 2020,Everything is implemented according to the collapsible listbox ARIA pattern. The arrow keys can be used to open the‚Ä¶ https://t.co/HtusU8exs5
1248304777588441000,Thu Apr 09 17:40:26 +0000 2020,I've been working on an accessible custom select component for the last few weeks. By far one of the most difficult‚Ä¶ https://t.co/9QZb40BqWs
1247923268629057500,Wed Apr 08 16:24:27 +0000 2020,As if the last couple months could get any worse... üò≠ https://t.co/lr4EPo8hiG
1247223267317801000,Mon Apr 06 18:02:53 +0000 2020,@mohsen____ @peduarte @parceljs I don't think that can be easily made safe unfortunately. There are too many ways t‚Ä¶ https://t.co/1Jp0VDfOFb
1247221618230747100,Mon Apr 06 17:56:20 +0000 2020,@buildsghost @kylewelch @peduarte We switched to preferring children over props after years of people complaining t‚Ä¶ https://t.co/W0WmWsLego
1247218646096605200,Mon Apr 06 17:44:32 +0000 2020,@buildsghost @kylewelch @peduarte I'm not following how this relates to collection items...
1247209138930634800,Mon Apr 06 17:06:45 +0000 2020,@buildsghost @kylewelch @peduarte Similarly, it allows design to change over time to add more features like this wi‚Ä¶ https://t.co/ORUPjDHbAl
1247208751691522000,Mon Apr 06 17:05:13 +0000 2020,@buildsghost @kylewelch @peduarte It allows for the UI to be adaptive. Imagine a breadcrumbs component that collaps‚Ä¶ https://t.co/BEFhFj8J66
1247207376479899600,Mon Apr 06 16:59:45 +0000 2020,@aarongarciah @peduarte Item just defines the data. You can think of it like passing in an array of item objects as‚Ä¶ https://t.co/XIWQDdVqUq
1247206893015019500,Mon Apr 06 16:57:49 +0000 2020,@buildsghost @peduarte Yeah you can do that, as long as you don‚Äôt wanna support wrapper components that return items too.
1247206641654620200,Mon Apr 06 16:56:50 +0000 2020,@buildsghost @kylewelch @peduarte Our item component supports &lt; 5 props, which are the same across all collection c‚Ä¶ https://t.co/sAEUhzgfUb
1247205608865976300,Mon Apr 06 16:52:43 +0000 2020,@buildsghost @peduarte It‚Äôs not clone element, it‚Äôs more like replace element. Item doesn‚Äôt do anything by itself.‚Ä¶ https://t.co/pGbkVdciIk
1247194048953069600,Mon Apr 06 16:06:47 +0000 2020,@Kosai106 @peduarte Not quite yet. But very soon! üòâ
1247190989036376000,Mon Apr 06 15:54:38 +0000 2020,@peduarte Yeah, exactly. You can pass it via context. Keep the public API consistent but change out the implementat‚Ä¶ https://t.co/CUnJu8zdyq
1247189669399244800,Mon Apr 06 15:49:23 +0000 2020,@peduarte IMO those are just implementation details. &lt;Item&gt; could render different things depending on its parent.‚Ä¶ https://t.co/pRZotYsowg
1247065112302633000,Mon Apr 06 07:34:26 +0000 2020,@_developit Did you check out the thing I sent you a while back? üòâ
1247064027752099800,Mon Apr 06 07:30:08 +0000 2020,@peduarte All items are the same. üòâ   &lt;List&gt;   &lt;Item /&gt; &lt;/List&gt;  &lt;Menu&gt;   &lt;Item /&gt; &lt;/Menu&gt;  &lt;Select&gt;   &lt;Item /&gt; &lt;/Select&gt;
1246479183972204500,Sat Apr 04 16:46:10 +0000 2020,@chriscoyier It's in the cloud, man! ‚òÅÔ∏èüòÇ
1245812337807777800,Thu Apr 02 20:36:22 +0000 2020,Github is down. Now it really feels like the end of the world! üòÇ https://t.co/ReZiPU7XkS
1245483145513717800,Wed Apr 01 22:48:16 +0000 2020,@swyx For sure! Plenty of libraries are working on this. I think web platform advocates should take notice and buil‚Ä¶ https://t.co/LNiR9K7FFQ
1245460416437747700,Wed Apr 01 21:17:57 +0000 2020,@giuseppegurgone @kilianvalkhof Yeah, we have a totally different architecture than most existing libraries (you'll‚Ä¶ https://t.co/aB0yrmI58q
1245456859793776600,Wed Apr 01 21:03:49 +0000 2020,@giuseppegurgone @kilianvalkhof I'm building a library to do just that at the moment. But ideally it would be built into the platform.
1245451356237729800,Wed Apr 01 20:41:57 +0000 2020,@kilianvalkhof Ah yeah. Seems like not the immediate goal though. Glad someone is thinking about it though!
1245450291463336000,Wed Apr 01 20:37:43 +0000 2020,@kilianvalkhof I have. I'm not sure I really understood what the goal was. It looked like they were trying to stand‚Ä¶ https://t.co/8jWAPB4izK
1245449036666003500,Wed Apr 01 20:32:44 +0000 2020,@benadam11 Maybe, I haven't used it!
1245448917304541200,Wed Apr 01 20:32:15 +0000 2020,Some ideas:  - Events for higher level gestures and interactions. Even pointer events are too low level. - Higher l‚Ä¶ https://t.co/lkRCc5VzaL
1245448020197425200,Wed Apr 01 20:28:41 +0000 2020,People sometimes wonder why the web hasn't won vs native. I think it has to do with DX. Building polished UIs is si‚Ä¶ https://t.co/HnZ8L46TKR
1245446604464611300,Wed Apr 01 20:23:04 +0000 2020,Never have I battled more browser bugs in one week than I have this week. üò†  Building basic components is easier th‚Ä¶ https://t.co/UysC1S11D0
1245364967219445800,Wed Apr 01 14:58:40 +0000 2020,@WellPaidGeek I wouldn't put that past @slightlylate üòâ
1245029674620600300,Tue Mar 31 16:46:20 +0000 2020,@jaredpalmer @marvinhagemeist Or really a standard API to style *any* form control cross browser.
1245021069062205400,Tue Mar 31 16:12:08 +0000 2020,@marvinhagemeist @jaredpalmer Yeah... I guess for custom styling purposes it might be easier to not use native cont‚Ä¶ https://t.co/07c6TUdAJ2
1245010939067449300,Tue Mar 31 15:31:53 +0000 2020,@jaredpalmer I'll never understand why they don't just use the platform native controls. üò¢
1244738767904100400,Mon Mar 30 21:30:23 +0000 2020,@mjackson Lazy iteration
1244703690352545800,Mon Mar 30 19:10:59 +0000 2020,@jonastreub In the example there's one extra container div. That's necessary for the border - otherwise it would be‚Ä¶ https://t.co/CZNR1aIAZo
1244701835383865300,Mon Mar 30 19:03:37 +0000 2020,@jonastreub The negative margin on the parent accounts for that üòâ
1244679626162450400,Mon Mar 30 17:35:22 +0000 2020,Made a 10 line polyfill for flexbox gap. üòÄ  You can use it just like normal CSS properties. No extra wrappers aroun‚Ä¶ https://t.co/o9gASIhClV
1244645736547070000,Mon Mar 30 15:20:42 +0000 2020,@buildsghost Very nice!
1244481001213980700,Mon Mar 30 04:26:06 +0000 2020,@asvny_ @souporserious Could be fixed by negative margin I think.  .flex {   --gap: 10px; } .flex.column {   margin‚Ä¶ https://t.co/2I85UtBiZY
1244469657303748600,Mon Mar 30 03:41:02 +0000 2020,@souporserious You mean like `gap`? Can (kinda) be polyfilled I think.
1244465932833095700,Mon Mar 30 03:26:14 +0000 2020,@buildsghost Would be interested to see that. I've spent basically the last 3 months (re)building an implementation‚Ä¶ https://t.co/2rx2mnyXR8
1244456195567616000,Mon Mar 30 02:47:32 +0000 2020,@souporserious Isn't flex basically a stack?
1244289499246530600,Sun Mar 29 15:45:09 +0000 2020,@kluplau @ryanflorence @sanketsahu You probably shouldn't use those though. They don't work predictably on touch de‚Ä¶ https://t.co/l8BPLATBR2
1243963423941169200,Sat Mar 28 18:09:26 +0000 2020,@sebmarkbage @dan_abramov @mattgperry @framer @reactjs Sounds much more complicated than it needs to be IMO.
1243954905796219000,Sat Mar 28 17:35:35 +0000 2020,@sebmarkbage @dan_abramov @mattgperry @framer @reactjs I think it‚Äôs gotta preserve state. For example a video playe‚Ä¶ https://t.co/5AJUNqaj3g
1243924071080800300,Sat Mar 28 15:33:04 +0000 2020,@dan_abramov @mattgperry @framer @reactjs That requires some way to tell React that those two elements on completel‚Ä¶ https://t.co/sFZhBUTzVs
1243923724899741700,Sat Mar 28 15:31:41 +0000 2020,@dan_abramov @mattgperry @framer @reactjs Sometimes you may truly want global: imagine a full page transition. Clic‚Ä¶ https://t.co/CeB82P150z
1243923605550796800,Sat Mar 28 15:31:13 +0000 2020,@dan_abramov @mattgperry @framer @reactjs ü§∑üèª‚Äç‚ôÇÔ∏è Yeah, the problems with global things are well documented. Perhaps‚Ä¶ https://t.co/RuZHKQU2Ch
1243565883609530400,Fri Mar 27 15:49:45 +0000 2020,@souporserious AFAIK that only generates an id, doesn't affect reconciliation. A globalKey would need to affect rec‚Ä¶ https://t.co/XrQg6SLOgK
1243563347339088000,Fri Mar 27 15:39:40 +0000 2020,This looks amazing! üòÆ   I've been thinking of writing a React RFC for globally unique keys on elements for a while.‚Ä¶ https://t.co/otLADmW4py
1243560324072079400,Fri Mar 27 15:27:40 +0000 2020,@mattgperry @framer @reactjs Awesome work! I've been thinking that React should support globally unique keys on ele‚Ä¶ https://t.co/KNBCEX6yH1
1243190028970360800,Thu Mar 26 14:56:14 +0000 2020,@fasterthanlime Take care and be safe! ü§ó
1242489967726571500,Tue Mar 24 16:34:27 +0000 2020,RT @lazdnet: With the help of dozens of contributors, #CoronaDataScraper now has county-level #COVID19 infection data for 98.2% of US popul‚Ä¶
1242474578099572700,Tue Mar 24 15:33:18 +0000 2020,RT @mxstbr: We should ban margin from our components. No more margin, anywhere in our apps.  Hear me out.  https://t.co/8kAjlshpHL
1242474120484282400,Tue Mar 24 15:31:29 +0000 2020,@mxstbr Yes! I've been thinking this for a long time. Glad someone finally said it. ü•≥
1242333931308867600,Tue Mar 24 06:14:25 +0000 2020,@bradleymeck Absolutely!
1241220640264212500,Sat Mar 21 04:30:36 +0000 2020,@ryanflorence @ReactTraining @bradwestfall @cassidoo @chancethedev Gaaah, I'm so sorry to hear this! üò≠
1241150922677309400,Fri Mar 20 23:53:34 +0000 2020,@ryanflorence I think I'm gonna use it anyway and let Safari gracefully degrade in this case. Other workarounds seem too complex.
1241142700188921900,Fri Mar 20 23:20:53 +0000 2020,Unfortunately, not implemented in Safari. üòû  Here's the issue for it. Doesn't look like much recent activity. https://t.co/JjoirdbR8O
1241140822927495200,Fri Mar 20 23:13:26 +0000 2020,Just learned about CSS containment. Seems marketed mostly as an optimization, but has other usecases too.‚Ä¶ https://t.co/BsZgAY8YQf
1241134342866272300,Fri Mar 20 22:47:41 +0000 2020,@swyx @Netlify Whoa, good luck with whatever is next!
1241120373493485600,Fri Mar 20 21:52:10 +0000 2020,@ralex1993 It should be transparent in Parcel. We‚Äôd only do that if you didn‚Äôt specify your own Babel config, or in node_modules.
1241118714616893400,Fri Mar 20 21:45:35 +0000 2020,This is a big deal! Enable the ‚Äúbugfixes‚Äù: true option in your Babel preset-env config today and get magically smal‚Ä¶ https://t.co/hTLDYFDFbD
1241038587002359800,Fri Mar 20 16:27:11 +0000 2020,Really happy to work for a company that supports the community during tough times. Adobe is donating $2 million to‚Ä¶ https://t.co/hha7PdM7ZL
1241020340446187500,Fri Mar 20 15:14:40 +0000 2020,@brillout The nice thing about GQL is it‚Äôs a standard query language. RPC is nice but everything is ad hoc. You‚Äôd h‚Ä¶ https://t.co/O4yewrhCdK
1241019553544429600,Fri Mar 20 15:11:33 +0000 2020,@sseraphini @swyx Glad to hear it‚Äôs improving. You still need to write everything twice though: once in a fragment‚Ä¶ https://t.co/A8ph48rcr7
1241018968753627100,Fri Mar 20 15:09:13 +0000 2020,@sompylasar @swyx Yeah! That‚Äôs neat, but there‚Äôs still duplication between the fragment and the UI code.
1240883439970078700,Fri Mar 20 06:10:41 +0000 2020,@sseraphini @swyx I‚Äôve always found relay to be really heavy. You need to be fully invested in it both on the front‚Ä¶ https://t.co/klN4mgY3s8
1240863501855293400,Fri Mar 20 04:51:27 +0000 2020,@swyx Yeah, sorta. AFAIK you still have to write everything twice with relay (fragment + UI) but at least it‚Äôs colocated.
1240861462098096000,Fri Mar 20 04:43:21 +0000 2020,@swyx Got it. Yeah, agreed.
1240859628612628500,Fri Mar 20 04:36:04 +0000 2020,@swyx React solved this for UI - we do everything at the component level now. But with GraphQL we're still stuck ma‚Ä¶ https://t.co/3ewCUsMNu1
1240858655005634600,Fri Mar 20 04:32:12 +0000 2020,@swyx GraphQL is meant to solve the overfetching problem. But ironically IMO, in large apps with lots of deep compo‚Ä¶ https://t.co/alvbi5ww0Z
1240854779791675400,Fri Mar 20 04:16:48 +0000 2020,@swyx I remember! This approach seems to be a hybrid of runtime and codegen. Some codegen is pretty much required f‚Ä¶ https://t.co/9LvnSDQH93
1240852583335383000,Fri Mar 20 04:08:04 +0000 2020,This looks incredible! üò≤  Keeping queries in sync with UI changes has always been a pain point with GraphQL, especi‚Ä¶ https://t.co/ZxCqNPpGXk
1240690539738968000,Thu Mar 19 17:24:10 +0000 2020,Tried out mouse pointer support in the iOS 13.4 beta. It's pretty cool! üëç  Unfortunately, Safari doesn't implement‚Ä¶ https://t.co/XeQMGJVv58
1240510664088551400,Thu Mar 19 05:29:24 +0000 2020,@cocdcy @stroughtonsmith The @media (hover: hover) media query should work.
1240330632988745700,Wed Mar 18 17:34:01 +0000 2020,@philswenson Yes, I‚Äôm agreeing with you! Touch failed for professional applications. They adapted and fixed it by adding a mouse.
1240328199088689200,Wed Mar 18 17:24:21 +0000 2020,@philswenson Yeah i agree. Tried to push things as far as they could but gave up and added a pointer sounds like failure to me.
1240316423747940400,Wed Mar 18 16:37:34 +0000 2020,@mattcassinelli @stroughtonsmith Absolutely, and that‚Äôs great! Adding pointer input is admission of failure of touc‚Ä¶ https://t.co/jfVetN0itz
1240314405998317600,Wed Mar 18 16:29:32 +0000 2020,@mattcassinelli @stroughtonsmith Lol ok. I already made it clear in this thread that there are specific application‚Ä¶ https://t.co/J5j89aysvK
1240313793667719200,Wed Mar 18 16:27:06 +0000 2020,@mattcassinelli @stroughtonsmith Hence ‚Äúfailure of large screen touch interfaces‚Äù.
1240313031457796000,Wed Mar 18 16:24:05 +0000 2020,@stroughtonsmith I would flip that around. When doing work for long periods of time, you need an ergonomic setup. T‚Ä¶ https://t.co/OkfPUy0BPt
1240312008123109400,Wed Mar 18 16:20:01 +0000 2020,@stroughtonsmith I think touch is great for a certain set of very specific apps, eg drawing apps. But beyond that,‚Ä¶ https://t.co/uVFkjPc7jG
1240311722470068200,Wed Mar 18 16:18:53 +0000 2020,@DNeighly Sure, there are certain applications where it makes sense. Drawing apps are one. But it doesn‚Äôt feel true‚Ä¶ https://t.co/zp5sUeTLbs
1240310144287666200,Wed Mar 18 16:12:36 +0000 2020,Adding a trackpad and pointer input to the iPad feels like a huge admission of the failure of large screen touch in‚Ä¶ https://t.co/zhSBdUj66y
1239606806474715100,Mon Mar 16 17:37:48 +0000 2020,@_developit maybe it's connected to the stock market
1239598041952215000,Mon Mar 16 17:02:58 +0000 2020,This turned out to be a good tweet. üòâ  https://t.co/pj2CmCRMQ7 https://t.co/xDU3PhUMgB
1239597763374923800,Mon Mar 16 17:01:52 +0000 2020,RT @natfriedman: Excited to announce that @npmjs will be joining GitHub, and honored to have the chance to serve the millions of JavaScript‚Ä¶
1239220031243731000,Sun Mar 15 16:00:53 +0000 2020,@Vjeux Put it in a canvas, convert to PNG, extract gzipped image data. üòÇ
1238979273777492000,Sun Mar 15 00:04:12 +0000 2020,@marcysutton True true!
1238978688567275500,Sun Mar 15 00:01:53 +0000 2020,Well, I guess that‚Äôs the end of the ski season! üò¢   https://t.co/uGgo4lE6mc  Canceled my return flight from Utah. D‚Ä¶ https://t.co/fNu6g9aLUH
1238556462768476200,Fri Mar 13 20:04:06 +0000 2020,On the plus side, totally empty plane!
1238474527065030700,Fri Mar 13 14:38:31 +0000 2020,Flying today. Wish me luck! üò¨
1238469737404719000,Fri Mar 13 14:19:29 +0000 2020,@AdamRackis Idk about outrageously expensive but they‚Äôre better than working at a dining room table, hunched over a laptop.
1238245702196699100,Thu Mar 12 23:29:15 +0000 2020,@ScriptedAlchemy @codervandal Either way, I don't think I'd choose fast builds over fast loads. UX is more important than DX.
1238245359580860400,Thu Mar 12 23:27:53 +0000 2020,@ScriptedAlchemy @codervandal I think with a good cache it can be fast. But we'll see.
1238237477694886000,Thu Mar 12 22:56:34 +0000 2020,@codervandal @ScriptedAlchemy i.e. avoiding deploying the root app? That's true, but if you avoid that you give up‚Ä¶ https://t.co/3v2Es9OFwD
1238234831869210600,Thu Mar 12 22:46:03 +0000 2020,@ScriptedAlchemy @codervandal I don't think distributed caching needs to require any complex infra. A simple S3 buc‚Ä¶ https://t.co/YX3QqDP6cX
1238231903515234300,Thu Mar 12 22:34:25 +0000 2020,@FredKSchott Yeah I'll look into that if it goes on for too much longer.
1238230984962666500,Thu Mar 12 22:30:46 +0000 2020,@codervandal @ScriptedAlchemy Don't get me wrong, this is a cool concept in theory. I just wonder whether the probl‚Ä¶ https://t.co/a437o2Gx33
1238230592484823000,Thu Mar 12 22:29:13 +0000 2020,@codervandal @ScriptedAlchemy Right. That gets back to the original issue though. The problem with externals and dl‚Ä¶ https://t.co/vibQhpwzlc
1238229282255593500,Thu Mar 12 22:24:00 +0000 2020,@codervandal @ScriptedAlchemy In that case, you might over load if any of the modules in that shared chunk are alre‚Ä¶ https://t.co/KO9bGMPaht
1238226853619355600,Thu Mar 12 22:14:21 +0000 2020,@alexUX_UI @codervandal @ScriptedAlchemy That requires every separate app to know about every other app to know wha‚Ä¶ https://t.co/B8O1WjwrUE
1238226519094210600,Thu Mar 12 22:13:01 +0000 2020,@codervandal @ScriptedAlchemy Ah ok, so it's strategy 2 from my first tweet. In that case, how do you group modules‚Ä¶ https://t.co/3gcCYas5m0
1238224102697005000,Thu Mar 12 22:03:25 +0000 2020,@ScriptedAlchemy @codervandal Ok, so how does the build for App B know that that App A already has react and not to‚Ä¶ https://t.co/vxSjmrhxMW
1238223365791350800,Thu Mar 12 22:00:30 +0000 2020,@codervandal @ScriptedAlchemy So, at runtime, `require` would resolve react to the copy that's already loaded in th‚Ä¶ https://t.co/def98mN9gi
1238222453379174400,Thu Mar 12 21:56:52 +0000 2020,@codervandal @ScriptedAlchemy So, each app would have a copy of react, react-dom, lodash etc.? That seems like a ma‚Ä¶ https://t.co/OcU84Bq7dE
1238221808710463500,Thu Mar 12 21:54:18 +0000 2020,@codervandal @ScriptedAlchemy I must be missing something about how it works. Seems like you'd get duplicate librar‚Ä¶ https://t.co/ER0OyZw2Ns
1238220421427675100,Thu Mar 12 21:48:48 +0000 2020,@ScriptedAlchemy Sure, at runtime, but by that point you've either already loaded duplicate copies of every shared‚Ä¶ https://t.co/6kytbKZTUE
1238219553890373600,Thu Mar 12 21:45:21 +0000 2020,@ScriptedAlchemy Still, seems like a hard problem without either manual configuration in each app or a central plac‚Ä¶ https://t.co/v2MWweP3Ou
1238211543814115300,Thu Mar 12 21:13:31 +0000 2020,That or you manually configure what to exclude from each build, which seems very problematic at scale.  What am I missing?
1238211541696008200,Thu Mar 12 21:13:31 +0000 2020,@ScriptedAlchemy hey, nice work on federated modules! üòä  What I don‚Äôt understand is how you would avoid really larg‚Ä¶ https://t.co/PwSMf7yUUe
1238183283059347500,Thu Mar 12 19:21:13 +0000 2020,@sitnikcode That's why I mentioned having a good home office setup. If I were planning on working remotely permanen‚Ä¶ https://t.co/bbaIra92id
1238164742373404700,Thu Mar 12 18:07:33 +0000 2020,@v1rtl I guess. I enjoy the camaraderie of the office and interacting with people face to face.
1238164416220164000,Thu Mar 12 18:06:15 +0000 2020,@BrianRosamilia No, we have an open office layout. It‚Äôs not perfect, but it‚Äôs fine for me. Noise canceling headphones are great.
1238148439713517600,Thu Mar 12 17:02:46 +0000 2020,Unpopular opinion: I really dislike working from home.  Unless you have a really good home office setup, it‚Äôs less‚Ä¶ https://t.co/rt2W6JXqVh
1238131919297998800,Thu Mar 12 15:57:07 +0000 2020,@stroughtonsmith Note it didn‚Äôt say ARM. üòâ
1237811715338678300,Wed Mar 11 18:44:45 +0000 2020,@Justinwillis96 @slightlylate @sethreidnz I find it hard to believe that this choice would be made only because Saf‚Ä¶ https://t.co/YIS3is4MUM
1237808295718424600,Wed Mar 11 18:31:09 +0000 2020,@slightlylate @sethreidnz Is it bad that I‚Äôm a web dev and I‚Äôve never even heard of most of those features let alon‚Ä¶ https://t.co/oUEIoihVfZ
1237798756067598300,Wed Mar 11 17:53:15 +0000 2020,@sethreidnz @slightlylate Possible since iOS 13.
1237793779521740800,Wed Mar 11 17:33:28 +0000 2020,@sethreidnz @slightlylate My question was what PWA features are still missing on iOS? It's been pretty good recently.
1237793566069371000,Wed Mar 11 17:32:37 +0000 2020,@sethreidnz @slightlylate I'm using Chrome right now to talk to you. I tried the Twitter PWA on iOS for a while act‚Ä¶ https://t.co/7uMRaRy1WC
1237791839400296400,Wed Mar 11 17:25:46 +0000 2020,@BenDelarre @slightlylate Is that actually true? There were no other ways to deliver those features? What wasn't possible with WebGL 1?
1237788063545221000,Wed Mar 11 17:10:45 +0000 2020,@satya164 @slightlylate Looks like it's been supported since iOS 8? https://t.co/ymIMvswL3W
1237786044969308200,Wed Mar 11 17:02:44 +0000 2020,@sethreidnz @slightlylate What does that even mean?
1237785921321177000,Wed Mar 11 17:02:15 +0000 2020,@slightlylate I've personally never needed any of those features. Not to say that they are not useful features, or‚Ä¶ https://t.co/JyDMflJSSL
1237776541347504000,Wed Mar 11 16:24:58 +0000 2020,@slightlylate Ok, can you point to an example? Thinking back a few years, I can‚Äôt remember waiting to use a feature‚Ä¶ https://t.co/3OIyGj33Jf
1237773399960633300,Wed Mar 11 16:12:29 +0000 2020,@slightlylate ‚ÄúBetter‚Äù is subjective, based on your priorities. What in particular do you think is ‚Äúrotting‚Äù? As a‚Ä¶ https://t.co/WanSxfVlSV
1237770127585624000,Wed Mar 11 15:59:29 +0000 2020,@slightlylate I‚Äôm sorry, what? How is that the problem?
1237769203878228000,Wed Mar 11 15:55:49 +0000 2020,@slightlylate Pretty sure it was a lot more complicated than that and you know it.
1237768025262018600,Wed Mar 11 15:51:08 +0000 2020,@slightlylate I think it is clear that Apple is investing in the web, just in different areas than you want. Privac‚Ä¶ https://t.co/mfiN1dkinz
1237766130472644600,Wed Mar 11 15:43:36 +0000 2020,@slightlylate Also that‚Äôs just patently false. Only on iOS, a minority platform, do they disallow third party brows‚Ä¶ https://t.co/yVwr5nAVWg
1237765392434512000,Wed Mar 11 15:40:40 +0000 2020,@slightlylate This is all very dramatic. You just said they were knifing the web to death. Then you said they kille‚Ä¶ https://t.co/KSbRnHxjXU
1237762677545435100,Wed Mar 11 15:29:53 +0000 2020,@slightlylate Maybe just stop with the conspiracy theories. They really don‚Äôt help anyone.
1237605555075559400,Wed Mar 11 05:05:32 +0000 2020,@ryanflorence Hmm is that legal? listbox role can only contain options and groups afaik.
1237441687837765600,Tue Mar 10 18:14:23 +0000 2020,@codegician @drewlearns2 Sure, I'm not really talking about uploading them though, but using them in your own code.
1237437216529383400,Tue Mar 10 17:56:37 +0000 2020,@codegician @drewlearns2 How is that different than HTML? JS is also valid in HTML.
1237425752250802200,Tue Mar 10 17:11:04 +0000 2020,@kentcdodds We‚Äôll finally ship Parcel 2! üòúüòÇ
1237423252680478700,Tue Mar 10 17:01:08 +0000 2020,RT @mathias: New accessibility feature in @ChromeDevTools: simulate vision deficiencies, including blurred vision &amp; various types of color‚Ä¶
1237422611287564300,Tue Mar 10 16:58:35 +0000 2020,@_wodin_ That‚Äôs amazing! üòä
1237389514860925000,Tue Mar 10 14:47:04 +0000 2020,@rubnvp Layout is certainly more limited in SVG. I‚Äôm not advocating for using SVG for everything though. Just where‚Ä¶ https://t.co/wSOxce8efm
1237387812539789300,Tue Mar 10 14:40:18 +0000 2020,@aberbamx You can style SVG with CSS too, and even make it responsive. But I agree about layout. I‚Äôm not advocating‚Ä¶ https://t.co/1rCQEFQx0T
1237387491050569700,Tue Mar 10 14:39:02 +0000 2020,@kidandcat You can style SVG with CSS too. üòâ
1237177784503394300,Tue Mar 10 00:45:44 +0000 2020,@sompylasar Yeah I don't think everything should be in SVG either. Text is way more powerful in HTML/CSS. I think a‚Ä¶ https://t.co/X350OhGO49
1237153857257390000,Mon Mar 09 23:10:39 +0000 2020,@chrisdmacrae @Hale_Sai I'm not advocating building everything with SVG either. Use the right tool for the job, and‚Ä¶ https://t.co/OBgtpLKOt7
1237151579792277500,Mon Mar 09 23:01:36 +0000 2020,@mayfer Sure, if you have to support something that old, then do what you gotta do. I don't think that's most people though.
1237151219052732400,Mon Mar 09 23:00:10 +0000 2020,@melaniersumner Also browser support is excellent now. https://t.co/BUqbrhBdSP
1237150144816021500,Mon Mar 09 22:55:54 +0000 2020,@mayfer SVG has been supported since IE9...
1237150041531240400,Mon Mar 09 22:55:29 +0000 2020,@drewlearns2 What?
1237149926053646300,Mon Mar 09 22:55:02 +0000 2020,@melaniersumner See the next tweet. The SVG is aria-hidden, and there's a native input for accessibility. I'm not a‚Ä¶ https://t.co/3xpzN1IV7B
1237149664043925500,Mon Mar 09 22:53:59 +0000 2020,@chrisdmacrae See the example in the next tweet. There's a hidden input for accessibility, and the svg is aria-hidd‚Ä¶ https://t.co/jxFQOzQJnY
1237141226760966100,Mon Mar 09 22:20:28 +0000 2020,@bernharduw Yep!
1237141120200528000,Mon Mar 09 22:20:02 +0000 2020,@dr_sensor Good question, I'm not sure. Worth testing it out!
1237138403860201500,Mon Mar 09 22:09:15 +0000 2020,@dr_sensor There‚Äôs a native input element there for accessibility, but it‚Äôs visually hidden. The SVG itself is hidd‚Ä¶ https://t.co/D6z08hCAld
1237138119658356700,Mon Mar 09 22:08:07 +0000 2020,@bernharduw It‚Äôs a utility in a library I‚Äôm working on. Basically returns whether the element is focused with the k‚Ä¶ https://t.co/q7PZmnYuX4
1237137879114993700,Mon Mar 09 22:07:09 +0000 2020,@dowenb Yeah it‚Äôs super powerful once you realize you can manipulate it dynamically just like HTML elements!
1237137611468071000,Mon Mar 09 22:06:06 +0000 2020,@Michaelynch It does use a checkbox for accessibility (see the &lt;input&gt; element in the example). A switch is semanti‚Ä¶ https://t.co/fcqNBTnRJE
1237109040053760000,Mon Mar 09 20:12:34 +0000 2020,@sanketsahu Yeah. Probably because they consider SVG to be a static image format. In reality, you can manipulate it‚Ä¶ https://t.co/iLtNsD6scN
1237105710799810600,Mon Mar 09 19:59:20 +0000 2020,@ravavyr You can style SVG with CSS if you want. With properties that are actually designed for making shapes. It's‚Ä¶ https://t.co/xva58wOw6x
1237105435863158800,Mon Mar 09 19:58:14 +0000 2020,@Kosai106 Sure, but number of elements isn't the point. It's using purpose built elements instead of making divs in‚Ä¶ https://t.co/EgY2boXUlI
1237104811578765300,Mon Mar 09 19:55:46 +0000 2020,@ravavyr Oh I understand CSS just fine. But I don't think it's the right tool for every job. SVG is designed to mak‚Ä¶ https://t.co/ezmQck5ZPN
1237102626983968800,Mon Mar 09 19:47:05 +0000 2020,@ravavyr Why? To me, it seems much cleaner and easier to maintain over time to use elements designed for this purpo‚Ä¶ https://t.co/yajvkuHKoe
1237102261538402300,Mon Mar 09 19:45:38 +0000 2020,@ravavyr Wait, are you arguing for or against SVG? That‚Äôs the exact argument I‚Äôd give against CSS.
1237101216162668500,Mon Mar 09 19:41:28 +0000 2020,@ravavyr Why can‚Äôt you edit the SVG manually just like CSS? It doesn‚Äôt have to be exported from a tool. See the example in my next tweet.
1237096824776749000,Mon Mar 09 19:24:01 +0000 2020,@wcastand The example above uses a hidden input element for accessibility. The svg itself is aria-hidden. Similar t‚Ä¶ https://t.co/FtgI7gbtJk
1237096318910136300,Mon Mar 09 19:22:01 +0000 2020,In addition, design tools can literally output SVG in most cases. So rather than developers looking at a mock and r‚Ä¶ https://t.co/9HaWc5HIWq
1237096229659541500,Mon Mar 09 19:21:39 +0000 2020,As an example, here's the code for a switch component using SVG. No box shadow hacks, no border radius tricks, no :‚Ä¶ https://t.co/QDydANqwSg
1237096139318423600,Mon Mar 09 19:21:18 +0000 2020,SVG is a massively underused technology in web development.  Why is it so common to build everything out of divs wi‚Ä¶ https://t.co/RnCSw32F3u
1237070968628994000,Mon Mar 09 17:41:17 +0000 2020,@viticci Sounds like... a MacBook?
1236341056037245000,Sat Mar 07 17:20:52 +0000 2020,Parcel just hit 35,000 stars on Github! ü§©üò≤  Where do we collect our award? üèÜüòú https://t.co/oQBGm5KW1a
1236311004885053400,Sat Mar 07 15:21:27 +0000 2020,@jayantbhawal No, I hadn‚Äôt seen that. Wow, awesome stuff!
1236013317220495400,Fri Mar 06 19:38:33 +0000 2020,Officially switching to Firefox as my default development browser. Their dev tools are excellent. Better than Chrom‚Ä¶ https://t.co/KYAK3Ra1Kr
1235958084691882000,Fri Mar 06 15:59:05 +0000 2020,@AdamRackis @Rich_Harris If Rome‚Äôs bundler is better than Parcel‚Äôs default one, for example, we could swap it out o‚Ä¶ https://t.co/XDEInLRkc9
1235957801035300900,Fri Mar 06 15:57:57 +0000 2020,@AdamRackis @Rich_Harris These days, I don‚Äôt really consider Parcel 2 to be a bundler anymore. That‚Äôs just one thin‚Ä¶ https://t.co/lbgkvEhnpy
1235956583760191500,Fri Mar 06 15:53:07 +0000 2020,@AdamRackis @Rich_Harris Right. It‚Äôs all marketing. Spinning the term Parcel used to mean something else.
1235956225373692000,Fri Mar 06 15:51:41 +0000 2020,@AdamRackis @Rich_Harris TBH zero config was never the main goal for Parcel, it was just something that happened.‚Ä¶ https://t.co/BV4YqsD7ie
1235955013148528600,Fri Mar 06 15:46:52 +0000 2020,@Rich_Harris @AdamRackis &gt; so webpack went (nearly) zero-config  lol
1235240656894746600,Wed Mar 04 16:28:16 +0000 2020,@shameermulji @lukejacksonn It doesn‚Äôt have to. You can make a bad UX with platform frameworks too. The UX differen‚Ä¶ https://t.co/z6YBon6265
1235222070369194000,Wed Mar 04 15:14:25 +0000 2020,@rickhanlonii Great quote
1235219870133846000,Wed Mar 04 15:05:40 +0000 2020,@klaaspieter If you can‚Äôt name a React Native app, that‚Äôs a good thing! It means they feel native to you. I bet you‚Ä¶ https://t.co/G6U2ta0Gfm
1235074385569964000,Wed Mar 04 05:27:34 +0000 2020,@sandofsky More like, some teams don‚Äôt have unlimited time and resources to build 3 versions of the same app.
1234990582885302300,Tue Mar 03 23:54:34 +0000 2020,@gruber The interesting thing about React Native is that you can mix and match as needed. Reuse shared code where i‚Ä¶ https://t.co/xPeBkYfIlO
1234989964510687200,Tue Mar 03 23:52:07 +0000 2020,@gruber You can build slow and bloated apps with any technology. It‚Äôs also possible to build fast and responsive ap‚Ä¶ https://t.co/au5xOfM5iW
1234957321626738700,Tue Mar 03 21:42:24 +0000 2020,@_baxuz For most apps that doesn‚Äôt matter at all. They‚Äôre just displaying a bunch of data in a list view from an AP‚Ä¶ https://t.co/i0uyXqkN7L
1234957103464235000,Tue Mar 03 21:41:32 +0000 2020,@nerdtypething The similarity is the economic advantage of building one app instead of many, not the technical aspect.
1234944453065863200,Tue Mar 03 20:51:16 +0000 2020,@sergeybedritsky @chazmuzz I don‚Äôt mean Electron itself, but a similar architecture to React Native: JS driving nat‚Ä¶ https://t.co/UGXKaJs8lv
1234944021207736300,Tue Mar 03 20:49:33 +0000 2020,@klaaspieter The point is that the economics made it make sense regardless. I agree re the quality of many electron‚Ä¶ https://t.co/RmBJ4jUNo5
1234943446994976800,Tue Mar 03 20:47:16 +0000 2020,@lukejacksonn It‚Äôs possible to write inefficient code in any system. The advantages I‚Äôm referring to are economic:‚Ä¶ https://t.co/fybXMCsAxh
1234942827496231000,Tue Mar 03 20:44:48 +0000 2020,@chazmuzz @sergeybedritsky I work at Adobe. Some of our largest and most profitable apps are moving to this type of‚Ä¶ https://t.co/BaJ0BUbvlx
1234941430331670500,Tue Mar 03 20:39:15 +0000 2020,@ghostrich And it happened on the desktop!
1234940576228790300,Tue Mar 03 20:35:52 +0000 2020,@bitcrumb @mcarterj Exactly. Shared code where it makes sense. Native where it doesn‚Äôt.
1234937318571528200,Tue Mar 03 20:22:55 +0000 2020,@mcarterj I think a mix and match approach actually makes the most sense. In the IDE I'm building, I'm using native‚Ä¶ https://t.co/YMhgzLSEak
1234937033476296700,Tue Mar 03 20:21:47 +0000 2020,@swyx haha autocorrect ü§¶‚Äç‚ôÇÔ∏è   good day for that one though üòâ
1234936805704626200,Tue Mar 03 20:20:53 +0000 2020,@philswenson What does "native" even mean? Using a compiled language? Using platform UI widgets? I'd say the latter‚Ä¶ https://t.co/MOciwI7A7Y
1234936335518953500,Tue Mar 03 20:19:01 +0000 2020,@philswenson I actually agree re electron. That's why I'm working on something similar to react native for desktop,‚Ä¶ https://t.co/bHMwoYhZq2
1234935616422305800,Tue Mar 03 20:16:09 +0000 2020,@civeljahim ... annnd blocked. Bye.
1234935419592036400,Tue Mar 03 20:15:22 +0000 2020,@gruber This is just plain false. I guarantee you‚Äôre using several React Native apps and don‚Äôt even know it.
1234934751036760000,Tue Mar 03 20:12:43 +0000 2020,Lol at Apple fanboys jumping on React Native at every opportunity. They feel threatened by it, and rightly so!  Rea‚Ä¶ https://t.co/XWeHCaQuGK
1234873851764306000,Tue Mar 03 16:10:43 +0000 2020,Getting the important things out of the way early today. If you are able, please vote today! It‚Äôs important. #GoVote https://t.co/1hyVnFdsUV
1234859637511422000,Tue Mar 03 15:14:14 +0000 2020,RT @BernieSanders: If you can vote, show up today for those who can't‚Äî  The disenfranchised, who deserve their rights restored.   The undoc‚Ä¶
1234605059968647200,Mon Mar 02 22:22:38 +0000 2020,@stefsull Of course it‚Äôs your choice. But voting isn‚Äôt only about what feels right you you alone. It‚Äôs a strategic‚Ä¶ https://t.co/FynoWtASrw
1234580276795175000,Mon Mar 02 20:44:10 +0000 2020,This is bad. The moderates are rallying around Biden. Time for progressives to rally around Bernie.‚Ä¶ https://t.co/MIaGQcAl2f
1234578909783416800,Mon Mar 02 20:38:44 +0000 2020,@stefsull Yep, all of them should drop out IMO. Holding on now is just selfish.
1234265929267073000,Sun Mar 01 23:55:03 +0000 2020,Warren is a great candidate too, but hasn‚Äôt received the widespread support that Sanders has. If we want to avoid s‚Ä¶ https://t.co/uG28fA6LPt
1234264466759381000,Sun Mar 01 23:49:15 +0000 2020,Donate to @BernieSanders! It‚Äôs time to unify around a single progressive candidate. https://t.co/JYGI9kkPpD
1233795551738482700,Sat Feb 29 16:45:57 +0000 2020,@stschindler I think events need to be attached to something with semantic meaning. Table rows are semantic, so I t‚Ä¶ https://t.co/cdRPIrcNRT
1233794819723366400,Sat Feb 29 16:43:02 +0000 2020,@JosuGoi1 ... badly üòú
1233465790642430000,Fri Feb 28 18:55:35 +0000 2020,@gordonnl @v1rtl It's a preference in Safari. https://t.co/B1pGKanWKf
1233464999693058000,Fri Feb 28 18:52:27 +0000 2020,@gordonnl @v1rtl Ah yeah that is strange
1233463740164661200,Fri Feb 28 18:47:26 +0000 2020,@gordonnl @v1rtl enter works for me: https://t.co/PaEYhVdBrR
1233461283489345500,Fri Feb 28 18:37:41 +0000 2020,@v1rtl @gordonnl the space and enter keys activate a button (equivalent to click). try it on a native &lt;button&gt; element.
1233461134197436400,Fri Feb 28 18:37:05 +0000 2020,@gordonnl @v1rtl those have the attributes I mentioned right? the table shows tabIndex, and there is a list of required keyboard support.
1233459102497591300,Fri Feb 28 18:29:01 +0000 2020,@gordonnl @v1rtl not quite. you need onKeyDown not only onClick. And tabIndex=0.
1233454971204427800,Fri Feb 28 18:12:36 +0000 2020,@_developit @sebmck @addyosmani Whoa, somehow missed the release of Rome! Congrats, @sebmck.  Looks like the way Ro‚Ä¶ https://t.co/OVrUV6llhD
1233448612580905000,Fri Feb 28 17:47:20 +0000 2020,@v1rtl Yep, anything that's clickable to perform an action should be a button. Luckily, styling &lt;button&gt; is pretty easy nowadays.
1233441055837544400,Fri Feb 28 17:17:18 +0000 2020,@tranvu I think the right answer would be to have a great API for building custom elements. The only way to build s‚Ä¶ https://t.co/0V6oUup3SS
1233440560699990000,Fri Feb 28 17:15:20 +0000 2020,@CallMeBerzerker Yup, that's the flip side. API design by committee rarely works out well. But, perhaps we could go‚Ä¶ https://t.co/lIixmRQvg7
1233439813727948800,Fri Feb 28 17:12:22 +0000 2020,@gnapse That should be built into a &lt;dialog&gt; element (in fact, it is üòâ).
1233438557387182000,Fri Feb 28 17:07:22 +0000 2020,There should also be many more widgets built into the web with use case specific APIs. If these were easier to use‚Ä¶ https://t.co/tDayPSxscr
1233438556334411800,Fri Feb 28 17:07:22 +0000 2020,If instead of supporting all possible features, &lt;div&gt; had actually been a presentation only element, we‚Äôd be a lot‚Ä¶ https://t.co/lsyO1CxVj4
1233438555478749200,Fri Feb 28 17:07:22 +0000 2020,The problem with the DOM is that almost any element can become anything. It‚Äôs all one giant API.  * Most events app‚Ä¶ https://t.co/jMZux4u6SL
1233438553347985400,Fri Feb 28 17:07:21 +0000 2020,&lt;div&gt; is simultaneously the best and worst feature of the web.  Best: super flexible and easy to use. You can build‚Ä¶ https://t.co/BwSitv3yAO
1233134187726532600,Thu Feb 27 20:57:55 +0000 2020,@_developit Run it through brotli first, then tweet it. üòÜ
1232784225679466500,Wed Feb 26 21:47:18 +0000 2020,@ChaseGiunta @JakeDohm People are gonna be irresponsible or just not know better no matter what. It's the job of li‚Ä¶ https://t.co/pkSj1mm7n0
1232782262946517000,Wed Feb 26 21:39:30 +0000 2020,@ChaseGiunta @JakeDohm I disagree strongly with this. In my experience, people copy and paste everything.
1232766891975991300,Wed Feb 26 20:38:25 +0000 2020,@JakeDohm Sure, but the examples should at least try to be accessible. People will simply copy and paste and spread‚Ä¶ https://t.co/iSL9xpxVNY
1232736390149857300,Wed Feb 26 18:37:13 +0000 2020,@kingkool68 @tranvu lol. Not quite the UI most people want to build when they need a dropdown menu, but ok.
1232736009952977000,Wed Feb 26 18:35:42 +0000 2020,@ChaseGiunta I didn't get the impression that it wasn't final from the website/tweet but maybe I missed something.‚Ä¶ https://t.co/gbpKx6C5EO
1232734582241296400,Wed Feb 26 18:30:02 +0000 2020,@kingkool68 @tranvu How would that work?
1232732911364759600,Wed Feb 26 18:23:23 +0000 2020,@natedunn I'm open to suggestions! Definitely didn't mean to denigrate the work Adam has done, I think it's great.‚Ä¶ https://t.co/AfIQEboNui
1232732362502365200,Wed Feb 26 18:21:12 +0000 2020,@tranvu @kingkool68 Depends what kind of dropdown. select makes sense for selecting a value, but not really for performing an action.
1232732126316880000,Wed Feb 26 18:20:16 +0000 2020,@ChaseGiunta Apparently I missed the point of your tweet too. Could you explain?
1232712804110483500,Wed Feb 26 17:03:29 +0000 2020,@dannylindquist @adamwathan Perhaps bad phrasing on my part. I meant it‚Äôs really bad that there‚Äôs no keyboard acces‚Ä¶ https://t.co/3HCO8tsDSR
1232706023263092700,Wed Feb 26 16:36:33 +0000 2020,@kingkool68 How would you build a drop down menu with arrow key navigation support without JavaScript?
1232705350320586800,Wed Feb 26 16:33:52 +0000 2020,lol oops üò¨ https://t.co/AlasaMNwuL
1232701167831924700,Wed Feb 26 16:17:15 +0000 2020,HTML + CSS only UI libraries seem like a good idea until you consider a11y. No JS means no keyboard accessibility f‚Ä¶ https://t.co/BQMvKLutmM
1232699577557348400,Wed Feb 26 16:10:56 +0000 2020,@adamwathan I‚Äôd guess most of the elements you render will need some aria support. Noticed e.g. dropdowns and modal‚Ä¶ https://t.co/q0Pcnr2DaK
1232698461637623800,Wed Feb 26 16:06:30 +0000 2020,Evergreen tweet. Stop releasing component libraries without a11y support! ü§¶‚Äç‚ôÇÔ∏è https://t.co/8EXFFYpDk9
1232697499892142000,Wed Feb 26 16:02:41 +0000 2020,@adamwathan If you want to fix it, these are the patterns every component library must implement: https://t.co/D7i5ZqLlNu
1232697407910989800,Wed Feb 26 16:02:19 +0000 2020,@adamwathan Needs accessibility support. Can‚Äôt believe a new library would launch without even basic ARIA attribute‚Ä¶ https://t.co/ie8NB14SEZ
1232556962962800600,Wed Feb 26 06:44:14 +0000 2020,RT @jaffathecake: The server and client render should not be 1:1.  Don't render buttons on the server that require JS to work.  Don't ship‚Ä¶
1231990908662366200,Mon Feb 24 17:14:56 +0000 2020,@true_koddr @trivikram @evanwallace @golang @RollupJS @webpack @parceljs Still the same unfair benchmark
1231983394919047200,Mon Feb 24 16:45:05 +0000 2020,@trivikram @evanwallace @golang @RollupJS @webpack @parceljs Unfortunately the benchmark isn‚Äôt really fair for Parc‚Ä¶ https://t.co/4857SQ6WrZ
1231737465129427000,Mon Feb 24 00:27:50 +0000 2020,@sebmarkbage Node‚Äôs ‚Äúexports‚Äù field supports this, and will probably end up replacing ‚Äúmodule‚Äù. Bundlers are curren‚Ä¶ https://t.co/9Y88cumpBh
1231381784538992600,Sun Feb 23 00:54:30 +0000 2020,@jevakallio @yashguptaz @karanganesan @geekyants @reactjs @dan_abramov @sanketsahu Yup. Serialization/deserializati‚Ä¶ https://t.co/bjNdNZ1Nu4
1230908644398551000,Fri Feb 21 17:34:24 +0000 2020,https://t.co/mSyWBzE05X is amazing! By far the fastest drawing app I've used. Just used it to make a diagram for a‚Ä¶ https://t.co/zqcogCE43I
1230149153872728000,Wed Feb 19 15:16:28 +0000 2020,@AdamRackis @github Agreed. I was finally able to completely turn off github email notifications, which has been amazing.
1229798800719351800,Tue Feb 18 16:04:17 +0000 2020,@roman01la @sreekar339 @node_gui Yeah but at least those generally don't look like any specific platform rather tha‚Ä¶ https://t.co/Gp7jnn9ZJO
1229795328401920000,Tue Feb 18 15:50:29 +0000 2020,@sreekar339 @node_gui Yeah... Qt really isn't native though. It kinda looks like the native widgets, but it's all c‚Ä¶ https://t.co/iph40cxFMw
1229794706927710200,Tue Feb 18 15:48:01 +0000 2020,@kall JSC
1229789408548683800,Tue Feb 18 15:26:58 +0000 2020,RT @devongovett: One cool thing about building on top of React is that you get to take advantage of all the amazing stuff they've built, ev‚Ä¶
1229598941626257400,Tue Feb 18 02:50:07 +0000 2020,@itsSMontiel A small glimpse in this tweet: https://t.co/pQ67BTrc90
1229596621756747800,Tue Feb 18 02:40:54 +0000 2020,@_developit @itsSMontiel Yeah totally. That should be really easy!  I built it from scratch over the holidays. Hack‚Ä¶ https://t.co/o4lT3ZVOJO
1229595285346611200,Tue Feb 18 02:35:35 +0000 2020,One cool thing about building on top of React is that you get to take advantage of all the amazing stuff they've bu‚Ä¶ https://t.co/BjXCBTslL6
1229591795299827700,Tue Feb 18 02:21:43 +0000 2020,@_developit @itsSMontiel At the moment, each widget is a constructor exposed as a global with properties to set stu‚Ä¶ https://t.co/HM8HQXpo70
1229574376489570300,Tue Feb 18 01:12:30 +0000 2020,@timfishy Could be! The bulk of the app is written in JS - just need the UI bindings for each platform and you're set.
1229550133571833900,Mon Feb 17 23:36:10 +0000 2020,@mjackson @diegohaz @sseraphini I think this is a great technique to use internally to a component library, with hi‚Ä¶ https://t.co/nFUO9i2MPp
1229539997939691500,Mon Feb 17 22:55:53 +0000 2020,@antony Not yet at least üòâ
1229529181333024800,Mon Feb 17 22:12:55 +0000 2020,@civeljahim @itsSMontiel Most of the UI is made up of dynamically loaded plugins (it‚Äôs an IDE). Much easier to writ‚Ä¶ https://t.co/tw06KgdsaQ
1229527939869368300,Mon Feb 17 22:07:59 +0000 2020,@civeljahim @itsSMontiel Yep! This is an Appkit app. Uses the Appkit document architecture and everything. The UI i‚Ä¶ https://t.co/4Wx4T8rDyS
1229526361049419800,Mon Feb 17 22:01:42 +0000 2020,@civeljahim @itsSMontiel So... raw assembly?
1229523442648502300,Mon Feb 17 21:50:06 +0000 2020,@mediaquery Nah it‚Äôs another project I‚Äôm working on https://t.co/phzsNGQ1bB https://t.co/SXnPEeoTP5
1229522302745763800,Mon Feb 17 21:45:35 +0000 2020,@itsSMontiel It‚Äôs a thing I‚Äôm working on. Basically native macOS widgets exposed to JS. Kinda like react-native but for desktop.
1229522024327811000,Mon Feb 17 21:44:28 +0000 2020,@_0131310 The bottom thing is my whole system.
1229520176468484000,Mon Feb 17 21:37:08 +0000 2020,Electron vs. native UI. Both written in JS. üò≤ https://t.co/nR2IQt0wMR
1229470837683576800,Mon Feb 17 18:21:04 +0000 2020,@crabl I haven't spent much time on that yet, but yes it's an NSTextView. At the moment it's using highlight.js via‚Ä¶ https://t.co/9LiWRh6JP6
1229449401023643600,Mon Feb 17 16:55:53 +0000 2020,RT @devongovett: Playing around with adding context menus and multi selection to my React IDE. Allows quick access to some common actions f‚Ä¶
1229432016162050000,Mon Feb 17 15:46:49 +0000 2020,@DevShehata @brianleroux It‚Äôs a Swift app that runs a JS engine and exposes native widgets that the JS can instantiate.
1229232843710066700,Mon Feb 17 02:35:22 +0000 2020,@roonieone @brianleroux It's a thing I made.
1229170108364255200,Sun Feb 16 22:26:05 +0000 2020,@JosuGoi1 @brianleroux Maybe, but I'd probably need help with that. Most of the work would be building a native app‚Ä¶ https://t.co/WoFeM22epf
1229137590239940600,Sun Feb 16 20:16:52 +0000 2020,@tommyvedvik @brianleroux Eh maybe‚Ä¶ but then I‚Äôd need to have actual support and stuff.
1229112937987465200,Sun Feb 16 18:38:54 +0000 2020,@sophiebits @acemarke This seems far less likely than props being the same for most renders, but I could be wrong.
1229111411181142000,Sun Feb 16 18:32:50 +0000 2020,@acemarke @sophiebits Right, I‚Äôm saying it should be opt out rather than opt in. I‚Äôm not convinced of the perf issu‚Ä¶ https://t.co/pC9weTRroV
1229110514451566600,Sun Feb 16 18:29:17 +0000 2020,@sophiebits @acemarke If the props don‚Äôt change (and nothing else - state, context, etc.), then there are always no‚Ä¶ https://t.co/zZErjyLECD
1229098806936916000,Sun Feb 16 17:42:45 +0000 2020,@brianleroux I will at some point. TBH I don't really have the time/energy to maintain another open source project‚Ä¶ https://t.co/Fjvgh58FKi
1229097869954601000,Sun Feb 16 17:39:02 +0000 2020,@thekitze Haha yeah eventually. We've got a loooong way to go! üôÇ
1229097164879515600,Sun Feb 16 17:36:14 +0000 2020,@brianleroux Nope it's all native macOS UI driven by JS, react-native style. The native macOS text view is crazy powerful. üòâ
1229096097559138300,Sun Feb 16 17:31:59 +0000 2020,Playing around with adding context menus and multi selection to my React IDE. Allows quick access to some common ac‚Ä¶ https://t.co/jfKRR3DCr2
1229084978853531600,Sun Feb 16 16:47:48 +0000 2020,üòçü§©ü•≥ü§Øüò≤ https://t.co/ABzLchi214
1229084732069015600,Sun Feb 16 16:46:50 +0000 2020,RT @JasperDeMoor: Aside from the actionable errors in node_module resolution there's also suggestions for typos in both node_modules and re‚Ä¶
1229084581086650400,Sun Feb 16 16:46:14 +0000 2020,RT @JasperDeMoor: Parcel 2 will have resolver diagnostics, this will help make any error thrown by the resolver to be super clear and actio‚Ä¶
1229084236675596300,Sun Feb 16 16:44:51 +0000 2020,@acemarke @sophiebits Right, but this can be difficult if some of the components are not your own (e.g. libraries,‚Ä¶ https://t.co/kBzAMFIwvY
1229084236675596300,Sun Feb 16 16:44:51 +0000 2020,@acemarke @sophiebits Right, but this can be difficult if some of the components are not your own (e.g. libraries,‚Ä¶ https://t.co/kBzAMFIwvY
1229083298074218500,Sun Feb 16 16:41:08 +0000 2020,@AdamRackis @sophiebits https://t.co/lYItXRgNW1 https://t.co/SnnxLVWsz6
1229082284441002000,Sun Feb 16 16:37:06 +0000 2020,@AdamRackis @sophiebits "Don't do that"? Maybe a way to opt out if you're doing bad things?
1229082020644475000,Sun Feb 16 16:36:03 +0000 2020,@acemarke @sophiebits Doesn't React already do a diff, only later? Rather than diffing the input (props) it diffs t‚Ä¶ https://t.co/Wm8SQI8PhN
1229080212719059000,Sun Feb 16 16:28:52 +0000 2020,@sophiebits I honestly thought React.memo was the default for function components. Why is that not the case? Should it be?
1228343382331678700,Fri Feb 14 15:40:58 +0000 2020,@AdamRackis Even better: don't use webpack at all. üòâ
1228069277699207200,Thu Feb 13 21:31:46 +0000 2020,The Parcel team has been on fire this week! üî•üî•üî•  20 merged PRs. 7 more still in progress. 74 in the last month! üò≤üòç‚Ä¶ https://t.co/s3Zkh6VTKv
1227778042384175000,Thu Feb 13 02:14:30 +0000 2020,@jkup @kng üëÄ
1227123513154080800,Tue Feb 11 06:53:39 +0000 2020,@sarah_federman The beauty of MDX is it‚Äôs just another React component, so you can compose it like any other. You c‚Ä¶ https://t.co/sJQCicXoWQ
1227122392830378000,Tue Feb 11 06:49:11 +0000 2020,@jameslleb Yep it‚Äôll be open source soon
1227120789436059600,Tue Feb 11 06:42:49 +0000 2020,RT @devongovett: I've been working on a documentation site powered by Parcel 2. Turns out, Parcel is a pretty awesome static site generator‚Ä¶
1227024966576570400,Tue Feb 11 00:22:03 +0000 2020,@rchrdnsh Maybe but I'm not sure it's really worth the JS cost. The pages load pretty fast with normal browser rout‚Ä¶ https://t.co/mFTEjUncIm
1227024490237812700,Tue Feb 11 00:20:10 +0000 2020,@scottsilvi I haven't used it, but my understanding from reading the site was that it wouldn't be flexible enough f‚Ä¶ https://t.co/H4mqLGpZzr
1226974860372521000,Mon Feb 10 21:02:57 +0000 2020,@AYPOH Yeah I came up with a hacky way to do it. For the links that open a popover (shown in the video), they are s‚Ä¶ https://t.co/YQvpytngCh
1226954313185939500,Mon Feb 10 19:41:18 +0000 2020,Using Parcel for this means you get all of its caching, live reloading, fast builds, etc. for free! It's all made p‚Ä¶ https://t.co/qQGxjNXDaf
1226954312280047600,Mon Feb 10 19:41:18 +0000 2020,The type documentation is also extracted from the code by a Parcel transform. You can import the docs into MDX file‚Ä¶ https://t.co/I0O7YNAda9
1226954311541768200,Mon Feb 10 19:41:18 +0000 2020,The site is generated from MDX files and rendered at build time using a Parcel transform. It's React, but there's n‚Ä¶ https://t.co/bBx5KkRCuL
1226954310161821700,Mon Feb 10 19:41:17 +0000 2020,I've been working on a documentation site powered by Parcel 2. Turns out, Parcel is a pretty awesome static site ge‚Ä¶ https://t.co/2mH3fgK1FF
1226900262939267000,Mon Feb 10 16:06:32 +0000 2020,@arcanis Now make a bot that sends a PR to the project to fix it automatically. üòâ
1226670298541355000,Mon Feb 10 00:52:44 +0000 2020,@swyx Agreed. Same goes for developers and designers, and even PMs.
1226635535847813000,Sun Feb 09 22:34:36 +0000 2020,When people complain about ‚Äúmagic‚Äù, what they really mean is that the API is not obvious or flexible enough, or the‚Ä¶ https://t.co/i1LnJ5QLGw
1226635535189332000,Sun Feb 09 22:34:36 +0000 2020,Think of a C program. Seems pretty low level. But how does your program actually work? You put your code in a main(‚Ä¶ https://t.co/qfWVB0ox2U
1226632662808326100,Sun Feb 09 22:23:11 +0000 2020,There is no ‚Äúmagic‚Äù in programming, only abstraction. Choosing what to make implicit vs explicit is called API desi‚Ä¶ https://t.co/W8Ktx9t7OZ
1226539126133887000,Sun Feb 09 16:11:30 +0000 2020,@NicoloRibaudo @github Lol I did that once to the Parcel repo and destroyed everyone's PRs. Never again. üòÇ
1226536142452871200,Sun Feb 09 15:59:38 +0000 2020,@vivainio @swyx @rauchg @typescript I'm not sure that's always true... Tons of other compilers/VMs are written in C‚Ä¶ https://t.co/MjCBpbTDNX
1226535046997102600,Sun Feb 09 15:55:17 +0000 2020,@danrot90 @swyx @rauchg @typescript I don't think contributing to OCaml was as much of a problem as people think. T‚Ä¶ https://t.co/7PmJ9kM15c
1226393843047653400,Sun Feb 09 06:34:12 +0000 2020,@swyx @rauchg @typescript And yet‚Ä¶ flow is faster *and* has good inference. üò≤  Maybe writing the type checker in JS was the wrong choice. üòâ
1226329744636964900,Sun Feb 09 02:19:29 +0000 2020,@markdalgleish Lol thought it was the parcel logo at first üòÖ
1226277781723467800,Sat Feb 08 22:53:00 +0000 2020,@codervandal @cpojer I doubt you‚Äôll be convinced (TS people usually just make excuses for it), but see this thread: https://t.co/T69V3jffYG
1226271799727362000,Sat Feb 08 22:29:14 +0000 2020,@codervandal @cpojer Because Flow is better. üôà
1226226073106468900,Sat Feb 08 19:27:32 +0000 2020,@cpojer SWC has TypeScript support already. I imagine it wouldn‚Äôt be too hard to add Flow too. https://t.co/XvkvI9cMkW
1226191799510659000,Sat Feb 08 17:11:21 +0000 2020,@chrisdmacrae @DavidKPiano I'd suggest the UI be more platform agnostic, e.g. so you could render native widgets if‚Ä¶ https://t.co/Er7b8Jp8cP
1226190829842100200,Sat Feb 08 17:07:30 +0000 2020,@DavidKPiano @chrisdmacrae I'm working on something similar for JSX. Would be cool to be able to edit your UI and y‚Ä¶ https://t.co/SIfzhoGZn4
1226190451947921400,Sat Feb 08 17:05:59 +0000 2020,@DavidKPiano @chrisdmacrae IMO ideally you'd be able to edit the state machine visually too, not just visualize it.‚Ä¶ https://t.co/SncJEg2cjp
1226188103154454500,Sat Feb 08 16:56:39 +0000 2020,@DavidKPiano Build the visual state machine editor as an IDE plugin!
1226186433905344500,Sat Feb 08 16:50:01 +0000 2020,@timdorr @mjackson @DavidKPiano @mpjme @basarat Eslint can use Babel‚Äôs parser
1225978860467941400,Sat Feb 08 03:05:12 +0000 2020,@AdamRackis Nah I use vscode at the moment but I‚Äôm not happy about it. Writing my own (native) ide on the side üòâ
1225977966137528300,Sat Feb 08 03:01:39 +0000 2020,@AdamRackis This, except not VSCode or webpack üòâ
1225850709226090500,Fri Feb 07 18:35:58 +0000 2020,@phry @mjackson @DavidKPiano @mpjme @basarat Parcel 2 can handle that for you. Or you can use tsc just for that.
1225819066411040800,Fri Feb 07 16:30:14 +0000 2020,@mjackson @DavidKPiano @mpjme @basarat IMO using @babel/preset-typescript is a pretty nice way to go, and it integr‚Ä¶ https://t.co/hoRrdPN3GD
1225548685699952600,Thu Feb 06 22:35:50 +0000 2020,@ag_dubs @Nikolo_z @RReverser Right, so why are we maintaining them for CLIs instead?
1225547941487763500,Thu Feb 06 22:32:53 +0000 2020,@ag_dubs @Nikolo_z @RReverser Even HTTP would work. Cross language communication is pretty easy. Still better IMO t‚Ä¶ https://t.co/Icap65hUm7
1225547343786913800,Thu Feb 06 22:30:30 +0000 2020,@ag_dubs @Nikolo_z @RReverser https://t.co/fF7a6JdLGF
1225546113006145500,Thu Feb 06 22:25:37 +0000 2020,@Nikolo_z @RReverser @ag_dubs A real programming language is better for automation. APIs + GUIs seems like the best approach to me.
1225488067236126700,Thu Feb 06 18:34:58 +0000 2020,@filmaj @thekitze They don‚Äôt have to be. That‚Äôs what I‚Äôm saying. üòâ
1225480188365918200,Thu Feb 06 18:03:39 +0000 2020,@filmaj @thekitze CLIs are so much harder to use though! Other industries realized this 30+ years ago. üòÜ
1225478517082603500,Thu Feb 06 17:57:01 +0000 2020,@gr2m @thekitze We may have some work to get there, but IMO it should be as easy to build a GUI for a tool as a CLI‚Ä¶ https://t.co/7xoHTVboRl
1225475595057787000,Thu Feb 06 17:45:24 +0000 2020,@timdorr @threepointone @thekitze The VSCode extension API is very limited though. Commands are still basically a C‚Ä¶ https://t.co/zCvVMBh8ke
1225474703508197400,Thu Feb 06 17:41:52 +0000 2020,@gr2m @thekitze Maybe if we stopped teaching new devs to learn/build CLIs we wouldn‚Äôt have so many and could move t‚Ä¶ https://t.co/4bNhiZ79Ob
1225450800769421300,Thu Feb 06 16:06:53 +0000 2020,RT @thekitze: Please don't create another CLI.   I'm begging you. I know it will be fancy &amp; you will use *that* node package that has color‚Ä¶
1225450302972686300,Thu Feb 06 16:04:54 +0000 2020,@arcanis @threepointone @thekitze Eh. A CLI is just an interface too. Most of the logic isn‚Äôt usually specific to C‚Ä¶ https://t.co/zC1sDjbLAY
1225448426537549800,Thu Feb 06 15:57:27 +0000 2020,@threepointone @thekitze IMO it could be easier if a framework for building small tools were built into IDEs. That‚Ä¶ https://t.co/mwfTrX3Jl1
1225447731864326100,Thu Feb 06 15:54:41 +0000 2020,@thekitze Yes! Many CLIs could be built into IDE GUIs as plugins. Unify ALL the tools! üòÜ
1225304094887141400,Thu Feb 06 06:23:55 +0000 2020,@mjackson That‚Äôs called Flow. üòâ
1225129937306128400,Wed Feb 05 18:51:53 +0000 2020,RT @ReactEurope: Thrilled to announce our schedule is up with an additional discovery track on day 2! Featuring: - @devongovett  - @CompuIv‚Ä¶
1225085849827565600,Wed Feb 05 15:56:42 +0000 2020,@flyosity Yeah once you tapped on some stuff, but the default was still a single column I believe.
1225084540265173000,Wed Feb 05 15:51:30 +0000 2020,@viticci @stevieled5 App developers shouldn‚Äôt always be expected to fill the entire screen. Then you end up with tr‚Ä¶ https://t.co/F2D1g1Y0fm
1225084069727232000,Wed Feb 05 15:49:37 +0000 2020,@viticci @stevieled5 This is fundamentally why the iPad‚Äôs default of full screen apps isn‚Äôt ideal. The same Twitter‚Ä¶ https://t.co/ZqyJ8Hel25
1224584984091971600,Tue Feb 04 06:46:26 +0000 2020,@BriannaWu Uhhh lol what? This makes absolutely no sense.  1. Who cares what technology the app uses. 2. If it were‚Ä¶ https://t.co/3rROMOHgrK
1224516795819626500,Tue Feb 04 02:15:29 +0000 2020,RT @hswolff: Today I'm talking about @parceljs 2! I know it's not final but I couldn't help myself and play around with it...  ...and I fou‚Ä¶
1224494163015553000,Tue Feb 04 00:45:33 +0000 2020,@mjackson Sounds slow
1224476179383500800,Mon Feb 03 23:34:05 +0000 2020,@swyx @rustlang @aweary been thinking of writing parts of Parcel in a compiled language at some point... unless Nod‚Ä¶ https://t.co/ck7QOMkbZd
1224443068234924000,Mon Feb 03 21:22:31 +0000 2020,@DavidKPiano @webflow That‚Äôs why I‚Äôm focusing on code as the source of truth in the visual IDE I‚Äôm building. Defini‚Ä¶ https://t.co/k6FAsMDFfn
1224384089395908600,Mon Feb 03 17:28:09 +0000 2020,Parcel 2 now has automated nightly releases! If you wanted to try out the bleeding edge without building from git y‚Ä¶ https://t.co/4YS3asOoC4
1224369638361841700,Mon Feb 03 16:30:44 +0000 2020,@mxstbr @gatsbyjs @jxnblk @4lpine @blocks_ui Congrats! What a team being assembled over there. üòÆ
1223709895125434400,Sat Feb 01 20:49:09 +0000 2020,@swyx Whoa. TIL a new css unit! üò≤
1223430168577900500,Sat Feb 01 02:17:37 +0000 2020,@Dave_Stein lol thanks for the notification!
1223350096277819400,Fri Jan 31 20:59:26 +0000 2020,RIP my twitter notifications üòÇ
1223280065615523800,Fri Jan 31 16:21:09 +0000 2020,@jeresig I think builds should not necessarily reflect how the code/teams are organized. Build tools can do a lot o‚Ä¶ https://t.co/cpJrlWEwm7
1223270993331773400,Fri Jan 31 15:45:06 +0000 2020,@baddox @kylemathews @freiksenet Hmm, it‚Äôs pretty much instant for me... where are you located?
1223057914480361500,Fri Jan 31 01:38:24 +0000 2020,@youyuxi Subscribe.
1223029915219447800,Thu Jan 30 23:47:09 +0000 2020,@Shane09843 That has the same problems. You still hydrate. SSG is the same as SSR but done at build time.
1223023081179844600,Thu Jan 30 23:19:59 +0000 2020,@rickhanlonii @dan_abramov @arcanis @cpojer But it isn't a drop in replacement, and it can never be. It requires br‚Ä¶ https://t.co/fHF1Wufwdl
1223021827968008200,Thu Jan 30 23:15:01 +0000 2020,@kylemathews @_developit @danbucholtz @kgoedecke @gatsbyjs Yeah definitely think it depends what you're building.
1223021111727685600,Thu Jan 30 23:12:10 +0000 2020,@rickhanlonii @dan_abramov @arcanis @cpojer Yeah I get it, but I'm struggling to come up with another option that d‚Ä¶ https://t.co/r9njAVgDZ8
1223020158295388200,Thu Jan 30 23:08:23 +0000 2020,@rickhanlonii @dan_abramov @arcanis @cpojer Totally. But how do we get those modules to update and fix the issues i‚Ä¶ https://t.co/yFne4ZSSI2
1223018717535035400,Thu Jan 30 23:02:39 +0000 2020,@_developit @kylemathews @danbucholtz @kgoedecke @gatsbyjs Also, for many sites, the average number of pages viewed‚Ä¶ https://t.co/GqwAyx8Fnf
1223017940208849000,Thu Jan 30 22:59:34 +0000 2020,@_developit Yeah seems like something like Svelte is probably in the best position to do this.
1223017572582359000,Thu Jan 30 22:58:06 +0000 2020,@AdamRackis I know the chrome team was looking into supporting an official syntax in the browser to do differential‚Ä¶ https://t.co/ZLWQx0MH39
1223015015285809200,Thu Jan 30 22:47:56 +0000 2020,@AdamRackis Yeah I guess ua string checking is probably a bad idea though, esp now that browsers are going to be up‚Ä¶ https://t.co/aW93F2NzKv
1223013070152224800,Thu Jan 30 22:40:13 +0000 2020,@AdamRackis If you have a proposal for how to do it, we're all ears!
1223012997703929900,Thu Jan 30 22:39:55 +0000 2020,@AdamRackis It's pretty useful for libraries too. i.e. you want to ship module + commonjs.   Not saying we won't ha‚Ä¶ https://t.co/q6P8xIHQZI
1223009840676556800,Thu Jan 30 22:27:23 +0000 2020,@AdamRackis We don't have the bundle selection part (yet?). So far we have module/nomodule. But it should be possib‚Ä¶ https://t.co/9arPQydVHw
1223008855677792300,Thu Jan 30 22:23:28 +0000 2020,@AdamRackis Yeah. Each target defines the browserslist to support. Parcel compiles each bundle for each target. You‚Ä¶ https://t.co/l8RZhhXgdl
1223007827855212500,Thu Jan 30 22:19:23 +0000 2020,@AdamRackis Yep!
1223007389550403600,Thu Jan 30 22:17:38 +0000 2020,@rickhanlonii @dan_abramov @arcanis @cpojer This is exactly what they already did. Yarn 1 has shipped PnP for over‚Ä¶ https://t.co/C7icZAOtk1
1223007090920181800,Thu Jan 30 22:16:27 +0000 2020,@rickhanlonii @dan_abramov @arcanis @cpojer Many of the features/improvements in Yarn 2 depend on PnP, so I'm not sure how this could work.
1223004457547395000,Thu Jan 30 22:05:59 +0000 2020,@rickhanlonii @dan_abramov @arcanis @cpojer You keep saying "it didn't work" but not explaining what didn't work.
1222993669352935400,Thu Jan 30 21:23:07 +0000 2020,@rickhanlonii @dan_abramov @arcanis @cpojer We only get there by fixing the problems, which are mostly in other too‚Ä¶ https://t.co/9lbv4HebhL
1222993168523657200,Thu Jan 30 21:21:08 +0000 2020,@rickhanlonii @dan_abramov @arcanis @cpojer You do you suggest PnP gain adoption then? They already tried shipping‚Ä¶ https://t.co/pkY8Re5pV2
1222992619304702000,Thu Jan 30 21:18:57 +0000 2020,@kmsaldana1 @rickhanlonii @dan_abramov @arcanis @cpojer PnP is a massive improvement to both install and build performance.
1222981751619776500,Thu Jan 30 20:35:46 +0000 2020,@rickhanlonii @dan_abramov @arcanis @cpojer Yarn 1 maybe. Yarn 2 is a huge improvement over npm.
1222981593976885200,Thu Jan 30 20:35:08 +0000 2020,@rickhanlonii @dan_abramov @arcanis @cpojer Why would you say that?
1222981299834458000,Thu Jan 30 20:33:58 +0000 2020,@jeethrill @aleyda Some kind of static site generator that doesn‚Äôt require JS.
1222978797529485300,Thu Jan 30 20:24:01 +0000 2020,@probablyup I believe Svelte would still have the same issue with SSR + hydration though.
1222974674499326000,Thu Jan 30 20:07:38 +0000 2020,@givanse @kylemathews @freiksenet Browsers actually do this natively in many cases as well!
1222974044519059500,Thu Jan 30 20:05:08 +0000 2020,@samselikoff @kylemathews @freiksenet Yeah totally. I think there are some interesting solutions using service work‚Ä¶ https://t.co/1LPBXYKWsq
1222970878603841500,Thu Jan 30 19:52:33 +0000 2020,@kylemathews @freiksenet That argument also prioritizes page transitions within a site over external traffic. For m‚Ä¶ https://t.co/NdcgCT16lD
1222970601591066600,Thu Jan 30 19:51:27 +0000 2020,@kylemathews @freiksenet Client side routing is often cited as a benefit but I haven't seen actual performance data‚Ä¶ https://t.co/NuqvthEzrf
1222964836083982300,Thu Jan 30 19:28:33 +0000 2020,@kgoedecke @gatsbyjs Read the whole thread.
1222958565045915600,Thu Jan 30 19:03:38 +0000 2020,@AdamRackis Nothing first class, but I suppose you could write a custom transformer plugin to compile the original‚Ä¶ https://t.co/vsPvzm4bI5
1222955448438931500,Thu Jan 30 18:51:14 +0000 2020,@sitnikcode Yeah the Parcel website is just markdown too with a tiny amount of hand-rolled JS.
1222954056840122400,Thu Jan 30 18:45:43 +0000 2020,@AdamRackis Sure! We have support for custom targets. Would be up to you to figure out how to load the right one th‚Ä¶ https://t.co/U2ycvL3cnl
1222953658049974300,Thu Jan 30 18:44:08 +0000 2020,What I really want is a way to render static content with interactive islands built with React. A documentation sit‚Ä¶ https://t.co/lIfRAKYSxn
1222953657378828300,Thu Jan 30 18:44:07 +0000 2020,I just found a Gatsby page downloading an 11MB JS bundle containing all of the data for the entire site, because it‚Ä¶ https://t.co/yZpVW8jdFZ
1222953656628105200,Thu Jan 30 18:44:07 +0000 2020,The worst part is how easy it is to create giant bundles without realizing. You don't just download the code to ren‚Ä¶ https://t.co/Gr2HtLl80U
1222953655722111000,Thu Jan 30 18:44:07 +0000 2020,Unpopular opinion: React is the wrong tool for building content websites (blogs, marketing sites, documentation, et‚Ä¶ https://t.co/TnqEpFXery
1222944813852455000,Thu Jan 30 18:08:59 +0000 2020,@AdamRackis Yeah we have multi-target support already. You can even just use module/nomodule pointing to the same J‚Ä¶ https://t.co/TwWr5aG8TW
1222942679916478500,Thu Jan 30 18:00:30 +0000 2020,@AdamRackis Try Parcel
1222916510538010600,Thu Jan 30 16:16:31 +0000 2020,I, for one, welcome our Yarn 2 overlords. Turning on PnP by default, however painful in the short term, is the only‚Ä¶ https://t.co/EScNnw4gwp
1222912969165561900,Thu Jan 30 16:02:27 +0000 2020,@_pi0_ @dan_abramov @arcanis @cpojer You can always install 1.x yourself. It‚Äôs not hard. And the issues that result‚Ä¶ https://t.co/W1IFm1V9MJ
1222910992264204300,Thu Jan 30 15:54:35 +0000 2020,@dan_abramov @arcanis @cpojer Also, it‚Äôs a major version bump already so you have to manually upgrade! Things aren‚Äô‚Ä¶ https://t.co/u2bRpMm0zJ
1222910913256116200,Thu Jan 30 15:54:16 +0000 2020,@dan_abramov @arcanis @cpojer I disagree. Shipping with PnP off by default will result in PnP never gaining adoptio‚Ä¶ https://t.co/ooEg0V4yoJ
1222779931274309600,Thu Jan 30 07:13:48 +0000 2020,@sandofsky Haters gonna hate.
1222550480099758000,Wed Jan 29 16:02:03 +0000 2020,@DavidKPiano @sketch Lol exactly.
1222547061800747000,Wed Jan 29 15:48:28 +0000 2020,@a7sc11u I think it does in some places but probably not as common as it should be. I personally work with designers all the time.
1222544586427523000,Wed Jan 29 15:38:37 +0000 2020,‚ÄúHandoff‚Äù is perhaps the worst term in our industry at the moment. It implies that design and development are compl‚Ä¶ https://t.co/3O3JUlFju2
1222230999364292600,Tue Jan 28 18:52:32 +0000 2020,The goal for any documentation should be to be make it possible to use a library without reading the source. Otherw‚Ä¶ https://t.co/jyWoPlUX80
1222230998697443300,Tue Jan 28 18:52:32 +0000 2020,Instead, documentation should reflect the public API that a user would actually use. Rather than exposing all the a‚Ä¶ https://t.co/TL2phnB77u
1222230998059847700,Tue Jan 28 18:52:32 +0000 2020,Many documentation generators simply take in code, and output HTML pages based on the exact types in that code. Thi‚Ä¶ https://t.co/OhhLRF9SoQ
1222230997011296300,Tue Jan 28 18:52:32 +0000 2020,Let's talk about documentation. I'm starting to think that docs should NOT directly reflect the structure of the so‚Ä¶ https://t.co/02FpXGDMKf
1222181217224683500,Tue Jan 28 15:34:43 +0000 2020,@SukantGujar @sseraphini You can edit the code just like normal. When a prop is set to a variable, the var shows up‚Ä¶ https://t.co/8kwnSAx6yQ
1222022220295262200,Tue Jan 28 05:02:56 +0000 2020,RT @devongovett: So far, I've been demoing my visual React editor with Spectrum, the design system I work on, but the neat thing about it i‚Ä¶
1221854834833252400,Mon Jan 27 17:57:48 +0000 2020,@_grsoares Yes, I hope soon! üòä
1221829524356092000,Mon Jan 27 16:17:13 +0000 2020,The only requirement at the moment is TypeScript definitions for the props, but theoretically it could support Flow‚Ä¶ https://t.co/rVlJgLj0mJ
1221829522166730800,Mon Jan 27 16:17:13 +0000 2020,So far, I've been demoing my visual React editor with Spectrum, the design system I work on, but the neat thing abo‚Ä¶ https://t.co/2od7gJ70SW
1221817150337273900,Mon Jan 27 15:28:03 +0000 2020,I want this, but for TypeScript. üò≤ https://t.co/XQ4t4PDUsD
1221536855352463400,Sun Jan 26 20:54:16 +0000 2020,@can @amyhoy @tolmasky This is still amazing. I remember seeing this demo at the time and being blown away. So far‚Ä¶ https://t.co/iTEHMz3OmT
1221497876192227300,Sun Jan 26 18:19:22 +0000 2020,@AdamRackis I‚Äôm not convinced it would be less ‚Äúcomplexity‚Äù if it were written in JS instead of Prolog.
1221496305500872700,Sun Jan 26 18:13:08 +0000 2020,@AdamRackis npm is a valid choice. Your original tweet is still spreading unnecessary FUD about Yarn 2.
1221495032122728400,Sun Jan 26 18:08:04 +0000 2020,@AdamRackis I‚Äôm tired of this take. You don‚Äôt have to use Prolog to use Yarn 2 except if you want constraints. And‚Ä¶ https://t.co/LKqqxjsfLI
1221489275012673500,Sun Jan 26 17:45:11 +0000 2020,@klegsy Prolog in yarn 2 is the most recent example
1221483835872829400,Sun Jan 26 17:23:35 +0000 2020,I highly recommend that JS developers be open to learning other languages. It‚Äôs useful to have alternative perspect‚Ä¶ https://t.co/hpIE0cs4sD
1221481164109566000,Sun Jan 26 17:12:58 +0000 2020,@seldo @acemarke You don‚Äôt have to learn the entire language to use that feature. The docs have examples of common‚Ä¶ https://t.co/5ZrScSEO4b
1221477329303531500,Sun Jan 26 16:57:43 +0000 2020,@seldo @acemarke Use the right tool for the job? Prolog is literally designed for this exact thing. Why reinvent th‚Ä¶ https://t.co/ZWx8mAuc8X
1221469191795925000,Sun Jan 26 16:25:23 +0000 2020,@acemarke @seldo Because in JS land, everything must be implemented in JS. üòÇ
1221468042258858000,Sun Jan 26 16:20:49 +0000 2020,@jaredpalmer Best feature ever.
1221466674676658200,Sun Jan 26 16:15:23 +0000 2020,RT @mathias: Incredible overview of non-standard web platform features that debuted in Trident, the engine behind good ol‚Äô Internet Explore‚Ä¶
1221253492892782600,Sun Jan 26 02:08:17 +0000 2020,RT @devongovett: Playing around with the inspector panel. Props are now grouped into categories with smarter editing controls for certain v‚Ä¶
1221250302579359700,Sun Jan 26 01:55:36 +0000 2020,@brian_d_vaughn Awesome work! Sounds great.
1221133043244523500,Sat Jan 25 18:09:39 +0000 2020,@rauchg @suchipi @jaredpalmer @acemarke @dan_abramov It improves build performance significantly as well. The tradi‚Ä¶ https://t.co/46b6l40Mn8
1221103093015703600,Sat Jan 25 16:10:39 +0000 2020,@gordonnl Anyway, the beauty of this approach is that it combines the visual editor (which you could also just use‚Ä¶ https://t.co/gutuK5ZfJZ
1221102856490504200,Sat Jan 25 16:09:42 +0000 2020,@gordonnl It‚Äôs for me... ü§™  I personally find e.g. TypeScript‚Äôs autocomplete pretty useless when I‚Äôm working with a‚Ä¶ https://t.co/tqXP69tjpC
1221101895554519000,Sat Jan 25 16:05:53 +0000 2020,@sebmarkbage @ryanflorence Lol in my FocusScope implementation I wrapped the children between two &lt;span hidden&gt; wit‚Ä¶ https://t.co/GfEhXtpa4t
1221100303426044000,Sat Jan 25 15:59:33 +0000 2020,@mxstbr @rickhanlonii @AgentConf So jealous. I need to go to this conference next year. It has my two favorite things: JS and skiing! üò≤
1221097086050914300,Sat Jan 25 15:46:46 +0000 2020,@gordonnl To me, autocomplete is only faster if you already know what you want to write. A UI like this is faster i‚Ä¶ https://t.co/c9Ltpwq14c
1220944505450324000,Sat Jan 25 05:40:28 +0000 2020,@Kosai106 Yeah definitely. I struggled with the UI for that... still thinking about it.
1220831097195380700,Fri Jan 24 22:09:50 +0000 2020,@sebmck Yeah, all I really want is the data. Doc generators usually try to do too much and actually render everythi‚Ä¶ https://t.co/m1yfaNVlMO
1220828548354605000,Fri Jan 24 21:59:42 +0000 2020,Ah, again battling the many separate JS tools that should be one that work subtly different from one another. This‚Ä¶ https://t.co/D0X7oYITxZ
1220823254811594800,Fri Jan 24 21:38:40 +0000 2020,@jkup @RReverser @left_pad @_developit I'm in!
1220816531656859600,Fri Jan 24 21:11:57 +0000 2020,@arcanis Congrats!!
1220816487901851600,Fri Jan 24 21:11:47 +0000 2020,RT @arcanis: Introducing Yarn 2! üß∂üåü https://t.co/PZMf0IChFu
1220798285952077800,Fri Jan 24 19:59:27 +0000 2020,@henry_daggett A thing I'm building :)
1220748308223647700,Fri Jan 24 16:40:51 +0000 2020,Playing around with the inspector panel. Props are now grouped into categories with smarter editing controls for ce‚Ä¶ https://t.co/FAQJAAbSZE
1220732526647369700,Fri Jan 24 15:38:09 +0000 2020,@chriseppstein I feel personally attacked. üòÜ
1220728326559453200,Fri Jan 24 15:21:27 +0000 2020,@void_0 @cpojer Yeah Parcel has had caching since day 1.
1220551043878023200,Fri Jan 24 03:37:00 +0000 2020,@slightlylate I don‚Äôt think KPIs for browser vendors should include # of new APIs shipped, which seems to be how th‚Ä¶ https://t.co/fBeAXY8n4c
1220492191350476800,Thu Jan 23 23:43:08 +0000 2020,@swyx @sveltejs @AWSAmplify haha pretty much
1220491678613557200,Thu Jan 23 23:41:06 +0000 2020,@swyx @sveltejs @AWSAmplify Nice! This is definitely the future. Web app UX can be so much better, but it's so so h‚Ä¶ https://t.co/KpLCQ0hPyc
1220415766287331300,Thu Jan 23 18:39:27 +0000 2020,@AdamRackis @Rich_Harris @stubbornella For sure. Seems like there are some pretty strong voices on the other side as well though.
1220414839396470800,Thu Jan 23 18:35:46 +0000 2020,@Rich_Harris And that's why Chrome's cowboy attitude to shipping features before they are are ready and then compla‚Ä¶ https://t.co/llL3VLmHaZ
1220183657102504000,Thu Jan 23 03:17:08 +0000 2020,@albertgao You're explicitly allowing `any` as the parameter type in both of those functions though via the runtime‚Ä¶ https://t.co/DcH1d29CKx
1220159233993236500,Thu Jan 23 01:40:05 +0000 2020,@swyx @kylemathews @orta @gatsbyjs @typescript eh, tbh I'm still not really convinced myself. üòÖ
1220155818131091500,Thu Jan 23 01:26:31 +0000 2020,@kylemathews @swyx @orta @gatsbyjs @typescript Oh heh. Those must have been the files I touched the one time I sent a PR. üòâ
1220151455278981000,Thu Jan 23 01:09:10 +0000 2020,@orta @swyx @gatsbyjs @typescript @kylemathews That's true, though I think only a small portion of it is actually typed at all.
1220150562043220000,Thu Jan 23 01:05:37 +0000 2020,@swyx @orta @gatsbyjs @typescript @kylemathews üò• Honestly kinda sad to see that. Will Parcel 2 end up being the las‚Ä¶ https://t.co/ftZXHXSpAH
1220075878824071200,Wed Jan 22 20:08:52 +0000 2020,@shinework @kylemathews @thesegunadebayo Neat! Is it specific to Chakra or more general? I‚Äôm working on something s‚Ä¶ https://t.co/bpyNvYzqbi
1220031551016030200,Wed Jan 22 17:12:43 +0000 2020,@estejs Uhh what? This is incorrect. I use it every day.
1220022426689396700,Wed Jan 22 16:36:28 +0000 2020,@albertgao It‚Äôs not dangerous if the function is only used in a single place, which is the case for most event hand‚Ä¶ https://t.co/YAB1xPGW41
1219743167081148400,Tue Jan 21 22:06:47 +0000 2020,@_developit Probably missing something, but doesn't React also do that?
1219739791618478000,Tue Jan 21 21:53:22 +0000 2020,@tomasz_ducin @spion Of course, but "fast enough" is also a thing. Faster isn't always better.
1219737421815804000,Tue Jan 21 21:43:57 +0000 2020,@tomasz_ducin @spion I'd argue that Flow/Reason disproves that. All of FB uses Flow. I'd say that's a large program.
1219736179815276500,Tue Jan 21 21:39:01 +0000 2020,@tomasz_ducin @spion We use Flow for the whole Parcel 2 codebase, which is quite large. ü§∑‚Äç‚ôÇÔ∏è
1219735695066988500,Tue Jan 21 21:37:05 +0000 2020,@lukeed05 Neat. Only for north american calendars (gregorian, week starts on sunday) though? Once you add more i18n‚Ä¶ https://t.co/bYUM5Es2LF
1219733541484822500,Tue Jan 21 21:28:32 +0000 2020,@codervandal There are a bunch of tools! Axe is a good automated one. But generally, you should follow the ARIA pra‚Ä¶ https://t.co/iiN49XgO1f
1219733286303305700,Tue Jan 21 21:27:31 +0000 2020,@hernansartorio @reactjs Keyboard support, following aria grid spec for calendar, following the combobox spec for t‚Ä¶ https://t.co/KcIw2o6c9z
1219731696418865200,Tue Jan 21 21:21:12 +0000 2020,Releasing a new UI component without accessibility support is irresponsible. Seeing these libraries shared widely b‚Ä¶ https://t.co/nYQPmubPLI
1219729797800063000,Tue Jan 21 21:13:39 +0000 2020,@hernansartorio @reactjs Nice, but needs accessibility support. üò¢
1219715934794858500,Tue Jan 21 20:18:34 +0000 2020,@tomasz_ducin @spion Flow does it and the perf isn‚Äôt bad ü§∑üèª‚Äç‚ôÇÔ∏è
1219690708480606200,Tue Jan 21 18:38:20 +0000 2020,Me: I think TypeScript could be improved in this one small way.  TypeScript fanboys: https://t.co/nUoMvFIUcb
1219688962505134000,Tue Jan 21 18:31:24 +0000 2020,@gaelduplessix Yeah, it‚Äôs just so much extra code though! üòÇ
1219685578226061300,Tue Jan 21 18:17:57 +0000 2020,@spion I think it should work exactly as if the function were inline. Not sure if that‚Äôs how Flow works or not (probably not).
1219683985334210600,Tue Jan 21 18:11:37 +0000 2020,@spion Yeah, I suggested in another reply to maybe limit it to only work if the function is only referenced in one‚Ä¶ https://t.co/3yeXZKnbmw
1219683619423191000,Tue Jan 21 18:10:10 +0000 2020,@ForceTheIssue That‚Äôs an interesting approach. Hadn‚Äôt seen that one before.
1219678823798542300,Tue Jan 21 17:51:06 +0000 2020,@filearts I think if the function is only referenced in one place it should work the same was as inline. Maybe if r‚Ä¶ https://t.co/2sUknrqHNo
1219678215637061600,Tue Jan 21 17:48:41 +0000 2020,@mohsen____ @fabiomiranda @PoliCodes I haven‚Äôt noticed too many issues with Flow. But you could put some limitation‚Ä¶ https://t.co/cEbk87MkBD
1219668576874877000,Tue Jan 21 17:10:23 +0000 2020,@krzKaczor Maybe a while ago, but I haven‚Äôt had any perf issues with flow recently.
1219668459086180400,Tue Jan 21 17:09:55 +0000 2020,@openmike503 Sure it makes sense why it works that way today, but seems like it could be better.
1219663924989051000,Tue Jan 21 16:51:54 +0000 2020,I really wish TypeScript had better inference. It's pretty annoying that inline event handlers have their types inf‚Ä¶ https://t.co/hn9bsP6xv5
1219490453650673700,Tue Jan 21 05:22:35 +0000 2020,@DavidKPiano @kentcdodds I built something similar in JS for a while back too: https://t.co/yC65WKOpDo It‚Äôs used by‚Ä¶ https://t.co/moAuHlPw5y
1219489795816054800,Tue Jan 21 05:19:59 +0000 2020,@DavidKPiano @kentcdodds I kinda think an actual language for expressing state machines would be better than doing‚Ä¶ https://t.co/DKacZpcdy1
1219376242610167800,Mon Jan 20 21:48:45 +0000 2020,@kylemathews I remember using https://t.co/BxLhJH1Stq around 2014-2015 I think
1218982242212438000,Sun Jan 19 19:43:08 +0000 2020,@cramforce Unfortunately not. üòû
1218657074101403600,Sat Jan 18 22:11:02 +0000 2020,@AltinSelimi Symbols don‚Äôt offer much in the way of customizability. They‚Äôre still just pictures of UI with no sema‚Ä¶ https://t.co/9SuhHl8jiD
1218568098107625500,Sat Jan 18 16:17:29 +0000 2020,@KyleKochanek What products don‚Äôt have a visual language? I think shared tooling would encourage more collaboration‚Ä¶ https://t.co/lfoTYDweZ6
1218567078191386600,Sat Jan 18 16:13:25 +0000 2020,@leads @jim_savage You write in JavaScript but it eventually is compiled to machine code. But you don‚Äôt think about‚Ä¶ https://t.co/HrSucCatyH
1218558891606196200,Sat Jan 18 15:40:54 +0000 2020,@leads @JorisGriffioen @tommyvedvik @stevensacks I‚Äôm saying that design tooling should also allow you to design wit‚Ä¶ https://t.co/xDzFgCsvT0
1218558269603451000,Sat Jan 18 15:38:25 +0000 2020,@leads @JorisGriffioen @tommyvedvik @stevensacks Nothing stops you from using div and span too, but when you need a‚Ä¶ https://t.co/xfNoyoY8YJ
1218557465526038500,Sat Jan 18 15:35:14 +0000 2020,@jakobyjonsson See next tweet üòâ
1218557009580048400,Sat Jan 18 15:33:25 +0000 2020,@KyleKochanek I think a system that allows you to edit the real code visually is the way to go. Allows designers to‚Ä¶ https://t.co/gj4E6tYAnj
1218557009580048400,Sat Jan 18 15:33:25 +0000 2020,@KyleKochanek I think a system that allows you to edit the real code visually is the way to go. Allows designers to‚Ä¶ https://t.co/gj4E6tYAnj
1218556468821053400,Sat Jan 18 15:31:16 +0000 2020,@jim_savage The browser shows the internals, but most of the time I‚Äôm not writing them directly, I‚Äôm using a component library.
1218383726100402200,Sat Jan 18 04:04:51 +0000 2020,@stevensacks @tommyvedvik I just mean someone building an actual app rather than a component library
1218383229494808600,Sat Jan 18 04:02:53 +0000 2020,@tommyvedvik @stevensacks Within the design system components sure, but product devs just use higher level components most of the time.
1218318493008875500,Fri Jan 17 23:45:38 +0000 2020,@jaredpalmer B for sure. See building a smart folder in Finder.
1218294231678144500,Fri Jan 17 22:09:14 +0000 2020,@randomtechdude @framer @figmadesign @sketch Definitely a start, but I think there is a long way to go. https://t.co/WD4SlI9oPn
1218257542066737200,Fri Jan 17 19:43:26 +0000 2020,@cH40zLord @framer Yeah I'm aware of framer. It seems like a good start, but not quite all the way there yet. The d‚Ä¶ https://t.co/3w1kOTrHuw
1218244030850457600,Fri Jan 17 18:49:45 +0000 2020,Designers should be using the same component APIs as developers. Even when creating the design system itself, the p‚Ä¶ https://t.co/ldfWzdkWn0
1218241393635651600,Fri Jan 17 18:39:16 +0000 2020,Most UI design tools are far too low level. With components, developers are no longer writing raw divs and spans, b‚Ä¶ https://t.co/3Xlwhe66G3
1218192736802599000,Fri Jan 17 15:25:56 +0000 2020,@XCSme @parceljs parcel@next
1218192470791442400,Fri Jan 17 15:24:52 +0000 2020,@HenrikJoreteg @danbucholtz @parceljs Yep, it‚Äôs in Parcel 2!
1217930272894668800,Thu Jan 16 22:02:59 +0000 2020,@Dave_Stein @JosuGoi1 That‚Äôs true
1217911078547415000,Thu Jan 16 20:46:43 +0000 2020,RT @jeresig: Did a mini-interview with @HenriHelvetica on the 14th anniversary of the release of jQuery! A great thread with lots of factoi‚Ä¶
1217911037195776000,Thu Jan 16 20:46:33 +0000 2020,@jeresig @HenriHelvetica Oh man. I remember using jQuery for the first time, probably around 2007. It was truly inc‚Ä¶ https://t.co/BRhV6wOhd7
1217908809894547500,Thu Jan 16 20:37:42 +0000 2020,@Dave_Stein @JosuGoi1 Huh I kinda like it! No more null pointer errors or undefined is not an object. I think JS is‚Ä¶ https://t.co/IwnHB9JDdd
1217902452348874800,Thu Jan 16 20:12:26 +0000 2020,@JosuGoi1 Definitely. But really great autocompletion and automatic code fixes help too.
1217897161469264000,Thu Jan 16 19:51:25 +0000 2020,@JosuGoi1 Hmm, not sure yet. The tooling is really good though. And the type system is much stronger than even TypeScript.
1217896926382702600,Thu Jan 16 19:50:29 +0000 2020,@brianleroux Nice!
1217893403288932400,Thu Jan 16 19:36:29 +0000 2020,@jody_lecompte Looks interesting!
1217891423451672600,Thu Jan 16 19:28:37 +0000 2020,@JosuGoi1 Yeah, plenty of takes in this space. XCode/Visual Studio too. I'd like to see someone do this for web dev‚Ä¶ https://t.co/uLJ5ME1AzC
1217891206169944000,Thu Jan 16 19:27:45 +0000 2020,Swift is actually a pretty fun programming language! Wonder if it will ever take off outside Apple platforms... ü§î
1217889454485995500,Thu Jan 16 19:20:47 +0000 2020,@enjalot Yep! I'm experimenting with something in this space. Each panel in the UI is a plugin, rendering native UI‚Ä¶ https://t.co/acIjdhYCH5
1217885521285763000,Thu Jan 16 19:05:10 +0000 2020,@enjalot Yeah, I'm aware. Some existing tools (e.g. Xcode, Visual Studio) get part of the way there, but I'm imagin‚Ä¶ https://t.co/JjDnFFPOw7
1217818680320352300,Thu Jan 16 14:39:34 +0000 2020,@grahamcox82 @intellijidea @code @AtomEditor I think especially for UI development, this makes a ton of sense. I‚Äôve‚Ä¶ https://t.co/WkgBTdEkCy
1217818425633865700,Thu Jan 16 14:38:33 +0000 2020,@grahamcox82 @intellijidea @code @AtomEditor Yeah, you can do those things, but the UI for doing so is essentially‚Ä¶ https://t.co/kfvll4WILL
1217814639464964000,Thu Jan 16 14:23:30 +0000 2020,@grahamcox82 @intellijidea @code @AtomEditor I think the level of integration offered by existing IDEs (esp for web‚Ä¶ https://t.co/KCihm7Ijvw
1217813994498486300,Thu Jan 16 14:20:56 +0000 2020,@themuzzotheory You don‚Äôt think similar tools could be made in open source? What about e.g. Blender?
1217629807933980700,Thu Jan 16 02:09:03 +0000 2020,@Andrew_Taylor I think it will be somewhere in between. Perhaps it will look similar to code today, but rather than‚Ä¶ https://t.co/7N3XaJsog9
1217604065632194600,Thu Jan 16 00:26:45 +0000 2020,@eclecticjohny I've been working on it myself a bit üòâ https://t.co/l67Je6kWgg
1217601467516956700,Thu Jan 16 00:16:26 +0000 2020,@eclecticjohny I don't think that's necessarily true. The individual pieces could be developed as plugins to the UI for example.
1217586802657095700,Wed Jan 15 23:18:10 +0000 2020,@tckscz Totally! I think the UI should morph depending on what you're editing. E.g. if building a UI, then you get‚Ä¶ https://t.co/cWT61mKnFW
1217586078581813200,Wed Jan 15 23:15:17 +0000 2020,@civeljahim Visual basic! But yes I agree, component based UI development will eventually spread to all platforms.
1217585650301456400,Wed Jan 15 23:13:35 +0000 2020,@_0131310 Yup! I think current software design tools (and CSS itself) are far too low level for designing applicati‚Ä¶ https://t.co/gW1n9MRb8y
1217584260304912400,Wed Jan 15 23:08:03 +0000 2020,@civeljahim What's impossible? XCode does a lot of this already for desktop apps.
1217582881096093700,Wed Jan 15 23:02:35 +0000 2020,@tckscz I think the term unified may have been confusing. I mean combine together multiple tools like code editing,‚Ä¶ https://t.co/Wk0TMEbmkp
1217582474219311000,Wed Jan 15 23:00:58 +0000 2020,@evanplaice Integrating design tools is a big one. Test framework integration could be a ton better. Debugging coul‚Ä¶ https://t.co/vX6ILFpVhb
1217580819100754000,Wed Jan 15 22:54:23 +0000 2020,@tckscz No reason there can't be multiple unified UIs ü§∑‚Äç‚ôÇÔ∏è
1217580600984391700,Wed Jan 15 22:53:31 +0000 2020,@evanplaice Yeah, I think a lot is missing from current IDEs, especially for the web. Going further, editing code a‚Ä¶ https://t.co/MsaaoMzhxc
1217579637154336800,Wed Jan 15 22:49:41 +0000 2020,@tckscz What makes you think it would be bad?
1217577617726926800,Wed Jan 15 22:41:40 +0000 2020,@a7sc11u Interesting! I think the UI for writing code is definitely strange as plain text - too much room for error‚Ä¶ https://t.co/7hpsJgccmz
1217576591804338200,Wed Jan 15 22:37:35 +0000 2020,@ralex1993 heh, nice. I can imagine it! üòâ
1217575750745784300,Wed Jan 15 22:34:15 +0000 2020,Design tools, code editors, dev tools, debuggers, testing tools, etc. should merge into a unified UI for building a‚Ä¶ https://t.co/tvuiekHCuI
1217473326810984400,Wed Jan 15 15:47:15 +0000 2020,Had a pretty awesome time skiing at Jackson Hole and Big Sky this past week! ‚õ∑  Now back to work. Excited for 2020!‚Ä¶ https://t.co/JxR0pa6AQk
1217264215649505300,Wed Jan 15 01:56:19 +0000 2020,@cramforce Possibly!
1217225800816050200,Tue Jan 14 23:23:40 +0000 2020,@michaelvillar This is awesome. Great work!
1217077696330530800,Tue Jan 14 13:35:09 +0000 2020,@thekitze ‚Ä¶ if your code doesn‚Äôt do anything
1216834246536351700,Mon Jan 13 21:27:46 +0000 2020,@brianleroux @serapath @mikesherov @matthewcp @rauschma Highly depends on the overall skill level of the team IMO.‚Ä¶ https://t.co/v7kVD8xjhv
1216833909301764000,Mon Jan 13 21:26:26 +0000 2020,@brianleroux @serapath @mikesherov @matthewcp @rauschma Didn‚Äôt say it couldn‚Äôt be done. Obviously it can. But seems‚Ä¶ https://t.co/AvntM3G38W
1216830044040917000,Mon Jan 13 21:11:04 +0000 2020,@mikesherov @serapath @brianleroux @matthewcp @rauschma Culturally that‚Äôs really unlikely to happen now. But I thin‚Ä¶ https://t.co/kb0PYBhHsC
1216825079528427500,Mon Jan 13 20:51:21 +0000 2020,@serapath @brianleroux @mikesherov @matthewcp @rauschma This mentality that many web devs have of building everythi‚Ä¶ https://t.co/z6Wtmsfvi9
1216819840230363100,Mon Jan 13 20:30:31 +0000 2020,@serapath @brianleroux @mikesherov @matthewcp @rauschma That‚Äôs called a framework.
1216818311536599000,Mon Jan 13 20:24:27 +0000 2020,@justinfagnani @eaf4 @mikesherov @rauschma There are many obvious benefits to using tools. I don‚Äôt think I need to‚Ä¶ https://t.co/LVynQPF0FR
1216815884678783000,Mon Jan 13 20:14:48 +0000 2020,@serapath @brianleroux @mikesherov @matthewcp @rauschma I‚Äôve worked in places where each team had their own tech st‚Ä¶ https://t.co/MwllUO4w1B
1216815167490543600,Mon Jan 13 20:11:57 +0000 2020,@mikesherov @serapath @brianleroux @matthewcp @rauschma It‚Äôs also what lead to product teams not working together a‚Ä¶ https://t.co/Om5zWnPuVD
1216814261369856000,Mon Jan 13 20:08:21 +0000 2020,@justinfagnani @mikesherov @rauschma Configuring all of that is already out of the realm of possibility for many beginners.
1216790191123226600,Mon Jan 13 18:32:43 +0000 2020,@justinfagnani @mikesherov @rauschma That will all happen with time. Recommending devs completely eschew tooling in‚Ä¶ https://t.co/UcBlyFfwqB
1216789721554112500,Mon Jan 13 18:30:51 +0000 2020,@justinfagnani @eaf4 @mikesherov @rauschma But why tho?
1216789607225819100,Mon Jan 13 18:30:23 +0000 2020,@brianleroux @serapath @mikesherov @matthewcp @rauschma I think it might get harder as you scale to a bigger team,‚Ä¶ https://t.co/tFvhmmztMv
1216789379387019300,Mon Jan 13 18:29:29 +0000 2020,@serapath @brianleroux @mikesherov @matthewcp @rauschma Micro frontends are a horrible idea. They are a recipe for‚Ä¶ https://t.co/wnzohaRZDQ
1216787273049493500,Mon Jan 13 18:21:07 +0000 2020,@brianleroux @serapath @mikesherov @matthewcp @rauschma Honestly I have no idea how you could really believe that.
1216786985471209500,Mon Jan 13 18:19:58 +0000 2020,@justinfagnani @mikesherov @rauschma Tools can and should evolve with ‚Äúthe platform‚Äù.
1216786635523670000,Mon Jan 13 18:18:35 +0000 2020,@justinfagnani @mikesherov @rauschma They don‚Äôt have to be learn to use or configure, and shouldn‚Äôt lead to lock in‚Ä¶ https://t.co/PEZtKb9sOH
1216785902585802800,Mon Jan 13 18:15:40 +0000 2020,@serapath @brianleroux @mikesherov @matthewcp @rauschma Maybe if you‚Äôre an expert and building an app by yourself y‚Ä¶ https://t.co/QI9wxN3Mo1
1216785173590601700,Mon Jan 13 18:12:46 +0000 2020,@brianleroux @mikesherov @matthewcp @rauschma I will never understand the ‚Äúmy node_modules folder is big therefore‚Ä¶ https://t.co/qaqlaFX7Eg
1216784018424746000,Mon Jan 13 18:08:11 +0000 2020,@justinfagnani @mikesherov @rauschma I don‚Äôt understand this ‚Äútooling is bad‚Äù mentality.
1216783745216172000,Mon Jan 13 18:07:06 +0000 2020,@brianleroux @mikesherov @matthewcp @rauschma I disagree with that. Tools are for everyone. Unless you have some st‚Ä¶ https://t.co/0WI9TIc1bc
1216781988373229600,Mon Jan 13 18:00:07 +0000 2020,@brianleroux @lukejacksonn @vivainio @rauschma @mikesherov Do you minify? Then you‚Äôre not shipping exactly what you‚Ä¶ https://t.co/tiFzU3AXRf
1216781781082337300,Mon Jan 13 17:59:17 +0000 2020,@justinfagnani @mikesherov @rauschma lol
1216781693182337000,Mon Jan 13 17:58:57 +0000 2020,@brianleroux @mikesherov @matthewcp @rauschma I don‚Äôt believe tooling necessarily means complexity. In the end, too‚Ä¶ https://t.co/dH3s5bS9Ds
1216778974962913300,Mon Jan 13 17:48:08 +0000 2020,@lukejacksonn @vivainio @rauschma @mikesherov No one is saying not to use ESM. We‚Äôre saying maybe some tooling arou‚Ä¶ https://t.co/MLuGRtHBll
1216748251887456300,Mon Jan 13 15:46:03 +0000 2020,@mikesherov @matthewcp @rauschma I agree with that, but I do worry that it will be pitched as an easy way to get st‚Ä¶ https://t.co/mzOvIv9Upv
1216747679847305200,Mon Jan 13 15:43:47 +0000 2020,@matthewcp @mikesherov @rauschma Are you sure? https://t.co/y57KR5RTIa
1216746413683404800,Mon Jan 13 15:38:45 +0000 2020,@mikesherov @matthewcp @rauschma I don‚Äôt see how that scales beyond the simplest demo apps.
1216746218522431500,Mon Jan 13 15:37:59 +0000 2020,@mikesherov @matthewcp @rauschma If it‚Äôs an object. It doesn‚Äôt have to be. That‚Äôs why it‚Äôs not possible. Build tool‚Ä¶ https://t.co/McAQqFBZHG
1216745793551401000,Mon Jan 13 15:36:17 +0000 2020,@matthewcp @mikesherov @rauschma Parcel rebuilds only the files you change too. We see 100-300ms rebuild times for‚Ä¶ https://t.co/7PsPN5bqtg
1216745005273862100,Mon Jan 13 15:33:09 +0000 2020,@mikesherov @matthewcp @rauschma Ok you‚Äôve said that, but I still haven‚Äôt figured out why. Tools like Parcel get you further for less cost.
1216744667053604900,Mon Jan 13 15:31:49 +0000 2020,@mikesherov @matthewcp @rauschma It‚Äôs not fully possible. Default exports are not live binding but you can change t‚Ä¶ https://t.co/DOXW1E8oqg
1216743859650064400,Mon Jan 13 15:28:36 +0000 2020,@matthewcp @mikesherov @rauschma Making tooling easy to use is exactly why Parcel, CRA, etc. are successful. They m‚Ä¶ https://t.co/MAowrCJkQe
1216743218957602800,Mon Jan 13 15:26:04 +0000 2020,@mikesherov @matthewcp @rauschma That‚Äôs bundling. Takes multiple files in, outputs a single file.  Does it actually‚Ä¶ https://t.co/Mws6UAB3Al
1216740081710461000,Mon Jan 13 15:13:36 +0000 2020,@mikesherov @matthewcp @rauschma How is it dist-&gt;src? Isn‚Äôt it really just a bundler, but only for node_modules to‚Ä¶ https://t.co/hxg7Z1Chof
1216738330882084900,Mon Jan 13 15:06:38 +0000 2020,@vivainio @rauschma @mikesherov Yep!
1216738210132316200,Mon Jan 13 15:06:09 +0000 2020,@matthewcp @mikesherov @rauschma Minification is tooling. TS is tooling. I‚Äôm not sure I follow what you‚Äôre saying here.
1216737470659739600,Mon Jan 13 15:03:13 +0000 2020,@mikesherov @rauschma So then what‚Äôs the benefit of using it over a bundler in your view?
1216737353017909200,Mon Jan 13 15:02:45 +0000 2020,@rauschma @mikesherov I‚Äôm just not sure eschewing tooling now after we‚Äôve worked so hard to get web devs to accept‚Ä¶ https://t.co/pV6hXWUaf1
1216737056807886800,Mon Jan 13 15:01:34 +0000 2020,@rauschma @mikesherov Yeah there are always alternatives. Even React doesn‚Äôt require JSX. But if you‚Äôre learning, y‚Ä¶ https://t.co/PoHM5qDPyC
1216733387395743700,Mon Jan 13 14:47:00 +0000 2020,@mikesherov @rauschma You cannot tool at install time your app.
1216732746422206500,Mon Jan 13 14:44:27 +0000 2020,@mikesherov @rauschma And yet, as soon as they want to do something with eg JSX they need tooling. IMO it‚Äôs better‚Ä¶ https://t.co/QspgANsqXE
1216496872962977800,Sun Jan 12 23:07:10 +0000 2020,@tolmasky Yep, I always turn them off. I find it easier to debug the compiled code tbh. Source maps are an uncanny valley.
1216165912169959400,Sun Jan 12 01:12:03 +0000 2020,@vincentriemer @sophiebits We tree shake bundles independently. So the module is actually duplicated, but only the‚Ä¶ https://t.co/xe3S0eZSAJ
1216109182555840500,Sat Jan 11 21:26:37 +0000 2020,@jkup @kng Congrats!!
1216004710039085000,Sat Jan 11 14:31:29 +0000 2020,@adamwathan @marcelpociot Looks like @mischnic did it but it didn‚Äôt get to master? https://t.co/b24LkzbUHy
1215991834356277200,Sat Jan 11 13:40:20 +0000 2020,@adamwathan @marcelpociot The solution to that problem is tiny. TBH I‚Äôm really surprised no one has made a PR yet. https://t.co/qVqhmM9ils
1215635153956958200,Fri Jan 10 14:03:00 +0000 2020,@SubDeveloper @danielrbradley @parceljs I usually just use vscode to do the typechecking rather than my build tool.‚Ä¶ https://t.co/9Ong2PgvtU
1214746431161913300,Wed Jan 08 03:11:32 +0000 2020,@FredKSchott @pikapkg Yeah, hope I didn‚Äôt come across too negative. Really appreciate fresh perspectives in this sp‚Ä¶ https://t.co/u1oC0H4JM2
1214746236563017700,Wed Jan 08 03:10:46 +0000 2020,@FredKSchott @pikapkg Yeah! We have a pretty big demo app we‚Äôre benchmarking Parcel 2 against. Also has a webpack v‚Ä¶ https://t.co/BRruy3DnJr
1214731012095139800,Wed Jan 08 02:10:16 +0000 2020,@FredKSchott @pikapkg We don‚Äôt rebuild entire bundles on file change, we only rebuild the file you modified and reu‚Ä¶ https://t.co/xHfKzFFwxz
1214720107789684700,Wed Jan 08 01:26:56 +0000 2020,@FredKSchott @matthewcp @pikapkg We‚Äôd do it in a major version release, but yeah. Likely would need some opt-in mec‚Ä¶ https://t.co/gWmaPQJ18M
1214719735352328200,Wed Jan 08 01:25:27 +0000 2020,@FredKSchott @seanlinsley @pikapkg It might have a dependency of A cached but not A itself, eg if A changes but not‚Ä¶ https://t.co/AyAZRqMChO
1214719364475129900,Wed Jan 08 01:23:59 +0000 2020,@matthewcp @FredKSchott @pikapkg Yep! We‚Äôre watching that closely and will likely follow once a standard is develop‚Ä¶ https://t.co/Q9JuAGxIQb
1214718340947566600,Wed Jan 08 01:19:55 +0000 2020,@seanlinsley @FredKSchott @pikapkg Http2 push is kind of a non starter without some sort of way to know what‚Äôs alre‚Ä¶ https://t.co/wffLCv7LNc
1214705642667204600,Wed Jan 08 00:29:28 +0000 2020,@FredKSchott @pikapkg The spec doesn‚Äôt say you can only import JS. Even browsers are starting to have non-JS support (JSON, CSS, etc.)
1214704036626100200,Wed Jan 08 00:23:05 +0000 2020,@FredKSchott @pikapkg That‚Äôs great. I have the same goal for Parcel. üòä
1214703915150659600,Wed Jan 08 00:22:36 +0000 2020,@FredKSchott @pikapkg What iteration speed improvements are you citing? Parcel usually has sub 300ms rebuild times on file save.
1214703578025205800,Wed Jan 08 00:21:15 +0000 2020,@FredKSchott @pikapkg Sure, to a point. There is still network latency on those requests though. Last I read, perf‚Ä¶ https://t.co/K4Rnkq04W0
1214699829479145500,Wed Jan 08 00:06:22 +0000 2020,@pikapkg @FredKSchott Right. These are all things that a smart build tool can optimize for you automatically. But i‚Ä¶ https://t.co/WIDUDwVUQk
1214698612178841600,Wed Jan 08 00:01:31 +0000 2020,@osdevisnot @pikapkg @FredKSchott That‚Äôs not the same thing. That‚Äôs a build performance optimization - it doesn‚Äôt a‚Ä¶ https://t.co/NDFLo3uBIA
1214697774718996500,Tue Jan 07 23:58:12 +0000 2020,@pikapkg @FredKSchott Yeah I read that, but you would still end up with an HTTP request per dependencies. In the ap‚Ä¶ https://t.co/I6gXbnsjsn
1214696953713266700,Tue Jan 07 23:54:56 +0000 2020,@pikapkg This is not doing the same thing as a bundler at all so I‚Äôm not sure I‚Äôd make that comparison. Also if you‚Ä¶ https://t.co/9ErrNCNsLJ
1214696387297730600,Tue Jan 07 23:52:41 +0000 2020,@pikapkg @FredKSchott Am I missing something or is this not really a replacement for bundling? Love the idea of pre‚Ä¶ https://t.co/1RTAhOs8Ap
1214385332411498500,Tue Jan 07 03:16:40 +0000 2020,@sarah_federman Oh haha wow
1214385273267638300,Tue Jan 07 03:16:25 +0000 2020,@sarah_federman I‚Äôll DM you next week when I‚Äôm back from vacation. üòä
1214374500206203000,Tue Jan 07 02:33:37 +0000 2020,@patcito @jaredpalmer @kylemathews @jhooks DMed Kyle already üòä
1214357910089687000,Tue Jan 07 01:27:42 +0000 2020,@sarah_federman I sure hope so! We need to stop reinventing the wheel. Will have an announcement in May related to this. üòâ
1213199829775589400,Fri Jan 03 20:45:54 +0000 2020,@ericclemmons Using the typescript compiler api. Looking for functions that return react elements etc.
1213089946095030300,Fri Jan 03 13:29:15 +0000 2020,@AfricanSinatra @markdalgleish Heh, we‚Äôll see! Just a holiday side project so far. üòä
1213084978969485300,Fri Jan 03 13:09:31 +0000 2020,@rbessuges Not yet, hopefully soon!
1212897784753471500,Fri Jan 03 00:45:41 +0000 2020,@t_chybzinski @dan_abramov The beauty of this approach is you can have both! If you want to edit the code directly‚Ä¶ https://t.co/dIO20M83dl
1212863466048049200,Thu Jan 02 22:29:18 +0000 2020,@sebmck Just a holiday side project so far
1212858756406632400,Thu Jan 02 22:10:36 +0000 2020,@hrmny_ @luke_schmuke It‚Äôs using native controls driven by JS, similar to react-native. At the moment it‚Äôs using ma‚Ä¶ https://t.co/YYq6uHyzkO
1212845100780396500,Thu Jan 02 21:16:20 +0000 2020,@jonmajorc Not yet, hopefully soon. üòä
1212842784983584800,Thu Jan 02 21:07:08 +0000 2020,@luke_schmuke Not yet, only started on it a couple weeks ago! üòâ
1212831270188855300,Thu Jan 02 20:21:22 +0000 2020,@nicoespeon @AlicanC Yeah. But those still show up like a normal editor tab I think, not really like a contextual i‚Ä¶ https://t.co/zIfAXL2vyL
1212829159766007800,Thu Jan 02 20:12:59 +0000 2020,@AlicanC Pretty low I think. VSCode does not allow much UI customization to extensions. You can pretty much add com‚Ä¶ https://t.co/wSyIyM7Yuw
1212827141307547600,Thu Jan 02 20:04:58 +0000 2020,@dan_abramov Agreed! Editing code as plain text is kinda strange when you think about it. Should be more like direc‚Ä¶ https://t.co/VHOkfYRA5d
1212809649063440400,Thu Jan 02 18:55:27 +0000 2020,Added drag and drop to rearrange components in the preview, and insert new components from your project or third pa‚Ä¶ https://t.co/RSjXIU99gf
1212798565304721400,Thu Jan 02 18:11:25 +0000 2020,@joshuarudd Not yet unfortunately. Probably by May I think. Corporate oss takes time...
1212224049805430800,Wed Jan 01 04:08:30 +0000 2020,Happy New Year everyone! üéä   2020 is going to be a huge year. Lots of plans already in the works. Can‚Äôt wait! ü§©
1211290573937750000,Sun Dec 29 14:19:12 +0000 2019,@satya164 @ericclemmons Yep! Using the TS compiler API. The type info it returns can be fairly complex so I wrote s‚Ä¶ https://t.co/ewqlqsCWSh
1211012371168276500,Sat Dec 28 19:53:43 +0000 2019,@dev__adi Of course!
1210963612497567700,Sat Dec 28 16:39:58 +0000 2019,@sstur_ Yep!
1210914181047881700,Sat Dec 28 13:23:33 +0000 2019,@cztomsik @capajj Yep! Parcel 2 can do it as of alpha 3.
1210762124709884000,Sat Dec 28 03:19:20 +0000 2019,@GeneCrucean Definitely a bit!
1210762032212893700,Sat Dec 28 03:18:58 +0000 2019,@daveturissini Nope! Works with any React component. At the moment requires TypeScript definitions for the props, b‚Ä¶ https://t.co/jj0GMkcqpf
1210685924499218400,Fri Dec 27 22:16:32 +0000 2019,@thekitze @jsui_app @sizzyapp Yeah definitely think combining this with something like JSUI for managing app config‚Ä¶ https://t.co/P4IQAltulY
1210666830681059300,Fri Dec 27 21:00:40 +0000 2019,@haikyuu_js I've focused on the actual code editor the least so far, but I think the goal is to make all of the pieces of the UI swappable.
1210662492537577500,Fri Dec 27 20:43:25 +0000 2019,@colebemis Will probably be open source at some point üòâ
1210657674737700900,Fri Dec 27 20:24:17 +0000 2019,@gauiis @code It's a tiny custom React renderer using some native macOS controls bridged to JS. Kinda like react-native.
1210656538311975000,Fri Dec 27 20:19:46 +0000 2019,@gauiis @code Mostly because I wanted to experiment with non-electron based native UI. VSCode consumes a tremendous‚Ä¶ https://t.co/8jgSnOsaB7
1210648822386495500,Fri Dec 27 19:49:06 +0000 2019,@phil_lgr Documented here for React Native but it also works on web through bundlers that support it (eg Parcel). https://t.co/frMqITlJEw
1210648515262713900,Fri Dec 27 19:47:53 +0000 2019,@destro_mas Yeah I‚Äôll probably release it at some point üòâ
1210644492782620700,Fri Dec 27 19:31:54 +0000 2019,@capajj Haha! üòÇ  It's native UI, driven by JS. Kinda like react-native.
1210630677772849200,Fri Dec 27 18:37:00 +0000 2019,@sanketsahu Definitely took some inspiration from SwiftUI.
1210630247252742100,Fri Dec 27 18:35:18 +0000 2019,@serapath Not yet, but I‚Äôll hopefully release it sometime soon. üòâ
1210629380189413400,Fri Dec 27 18:31:51 +0000 2019,Added a live preview that updates as you type, powered by Parcel 2 and React Fast Refresh! ü§©  You can click on comp‚Ä¶ https://t.co/teWKXoRnxv
1210193988529066000,Thu Dec 26 13:41:45 +0000 2019,@souporserious Yup! At the moment it relies on TypeScript to get the prop definitions though.
1209948857158787000,Wed Dec 25 21:27:41 +0000 2019,@RubenSndwch Yep! Editing the code is also reflected in the inspector.
1209867793543422000,Wed Dec 25 16:05:34 +0000 2019,@batmansmk What did you find was slow? We‚Äôd like to fix that - one of the main goals of Parcel is performance. üòâ
1209867591625384000,Wed Dec 25 16:04:46 +0000 2019,@bsansouci @jaredforsyth @parceljs In what way did you find it slow? We‚Äôd love to fix! üòâ
1209824371679871000,Wed Dec 25 13:13:02 +0000 2019,@DennisKortsch Could still do that but preferred to fully understand the whole system for this POC and wasn‚Äôt famil‚Ä¶ https://t.co/4DRg6OZMPa
1209552810871787500,Tue Dec 24 19:13:57 +0000 2019,@satvikpendem @framer Kinda? Framer is still more of a prototyping/design tool. This is for editing your production code.
1209540148486127600,Tue Dec 24 18:23:38 +0000 2019,@RobertCooper_RC At the moment yes. It uses the TypeScript compiler to extract prop types and documentation.
1209532389153751000,Tue Dec 24 17:52:48 +0000 2019,@richardiii üòÇnaming things is hard
1209532282282954800,Tue Dec 24 17:52:22 +0000 2019,@Etienne_dot_js Nice!
1209530477306093600,Tue Dec 24 17:45:12 +0000 2019,@overra Neither! Closer to react native I guess. Native controls but driven by JS.
1209524438473101300,Tue Dec 24 17:21:12 +0000 2019,Playing around with building a visual editor for React üòú https://t.co/0plfZJhcSg
1208491214334500900,Sat Dec 21 20:55:32 +0000 2019,@DavidKPiano SwiftUI is going in the right direction in this space. Still a long way to go though.
1208413714048790500,Sat Dec 21 15:47:35 +0000 2019,@mikesherov @ken_wheeler @AdamRackis @dan_abramov Ok man, I can see we aren‚Äôt going to convince you.
1208413164775366700,Sat Dec 21 15:45:24 +0000 2019,@mikesherov @AdamRackis @ken_wheeler @dan_abramov No one is saying ‚Äúnever use const‚Äù. We‚Äôre saying ‚Äúdon‚Äôt always use const‚Äù.
1208412580332679200,Sat Dec 21 15:43:05 +0000 2019,@mikesherov @ken_wheeler @AdamRackis @dan_abramov See point 5, last 4 paragraphs.
1208406731283423200,Sat Dec 21 15:19:50 +0000 2019,@mikesherov @ken_wheeler @AdamRackis @dan_abramov I recommend reading the article I linked. It addresses all of these points.
1208386534107500500,Sat Dec 21 13:59:35 +0000 2019,@dan_abramov https://t.co/2NhMAefC1Q
1208033561510584300,Fri Dec 20 14:36:59 +0000 2019,@rauchg A language outside JS.
1208030947075149800,Fri Dec 20 14:26:36 +0000 2019,@trueadm @sebmarkbage @necolas @dan_abramov Ah. I assume mergeRefs would return a function there? Always felt weird‚Ä¶ https://t.co/AfWxX8Ppzg
1208030368202449000,Fri Dec 20 14:24:18 +0000 2019,@trueadm @sebmarkbage @necolas @dan_abramov Ah right! It looks so similar to addEventListener I almost forgot about‚Ä¶ https://t.co/ikJl7Zqw5t
1208030009983668200,Fri Dec 20 14:22:53 +0000 2019,@trueadm @sebmarkbage @necolas @dan_abramov Yup, just thinking out loud here. It looks great overall! üòâ
1208029713505149000,Fri Dec 20 14:21:42 +0000 2019,@trueadm @sebmarkbage @necolas @dan_abramov Might be interesting if a component node could take multiple refs. Woul‚Ä¶ https://t.co/vsQGGFclN3
1208029243348787200,Fri Dec 20 14:19:50 +0000 2019,@trueadm @sebmarkbage @necolas @dan_abramov I think the use of refs here will be interesting for people. Historical‚Ä¶ https://t.co/AcwhtUUSC0
1208027974248915000,Fri Dec 20 14:14:47 +0000 2019,@trueadm @sebmarkbage @necolas @dan_abramov Nice! Looks very similar to native addEventListener. Is the main benefi‚Ä¶ https://t.co/uoHoD2keLb
1207807911562530800,Thu Dec 19 23:40:20 +0000 2019,@antony @parceljs Probably mostly eg create react app, next.js, gatsby, etc...
1207675250328166400,Thu Dec 19 14:53:11 +0000 2019,Whoa! Parcel was the third most popular build tool in the State of JS survey this year! Second most popular bundler‚Ä¶ https://t.co/zXavTxrmnW
1207321767502594000,Wed Dec 18 15:28:34 +0000 2019,@danielrbradley @parceljs Parcel 2 will do that with the @parcel/validation-typescript plugin!
1205898713534619600,Sat Dec 14 17:13:52 +0000 2019,Now I kinda want to build my own IDE. üòÇ
1205895063634448400,Sat Dec 14 16:59:22 +0000 2019,@fasterthanlime Idk how they do it, but in Parcel we try to throttle FS events so we‚Äôre not recompiling during an n‚Ä¶ https://t.co/PXKaz1PDAE
1205892711305232400,Sat Dec 14 16:50:01 +0000 2019,@fasterthanlime @code It‚Äôs chromium in general that uses a lot of memory. I can compare running the same sites in C‚Ä¶ https://t.co/NB3HkdSA37
1205892042540208000,Sat Dec 14 16:47:21 +0000 2019,@brianleroux Hehe I‚Äôd love to opt out of TS completely but that would involve changing jobs. üòâ
1205891811048165400,Sat Dec 14 16:46:26 +0000 2019,@fasterthanlime Yep, but code makes requests to that language server when files change. It could do better after la‚Ä¶ https://t.co/kHIiaI6RGd
1205881665794347000,Sat Dec 14 16:06:07 +0000 2019,@fasterthanlime VScode decides when and how to run the language servers over which files. It could be smarter about‚Ä¶ https://t.co/KFDyg1laPG
1205881223949648000,Sat Dec 14 16:04:22 +0000 2019,@fasterthanlime True, though they are all kinda one and the same in vscode (as a user). I just see multiple Code He‚Ä¶ https://t.co/IggY926mhO
1205880410141388800,Sat Dec 14 16:01:08 +0000 2019,@njukidreborn Memory wise, it‚Äôs also a combination of things. I usually see a few Code Helper (Renderer) processes‚Ä¶ https://t.co/AXcyVivQWH
1205879948805722000,Sat Dec 14 15:59:18 +0000 2019,@njukidreborn I‚Äôm not sure its vscode‚Äôs fault necessarily but kind of a combination of things it uses. CPU wise it‚Ä¶ https://t.co/GxoZwpukuE
1205879180883198000,Sat Dec 14 15:56:15 +0000 2019,@drbreak @panic That‚Äôs true, but they are kinda one and the same in vscode. TS runs even for JS. Not unusual to see‚Ä¶ https://t.co/r15MvBRLex
1205878365120413700,Sat Dec 14 15:53:01 +0000 2019,@oneillci Iiiinteresting. Had no idea that was cross platform. Why does Microsoft have multiple cross platform IDEs‚Ä¶ https://t.co/6mm5ttAMm1
1205656725270847500,Sat Dec 14 01:12:17 +0000 2019,When you find out about an app that uses your own open source projects under the hood... üòçüò≤ü§ó https://t.co/q3lW81tSvm
1205656359141666800,Sat Dec 14 01:10:50 +0000 2019,RT @oni_vim: @devongovett We're working on one! https://t.co/7u4Gl0zPgd  Native @reasonml front-end, with node back-end (to support @code e‚Ä¶
1205655845574299600,Sat Dec 14 01:08:48 +0000 2019,@oni_vim @reasonml @code @reveryui Oh haha that‚Äôs amazing! Had no idea. üòç
1205546788712640500,Fri Dec 13 17:55:27 +0000 2019,@zacharyjohnson Maybe! Haven't used it in a while. Not sure how the TS support is.
1205539558231687200,Fri Dec 13 17:26:43 +0000 2019,@mohsen____ @code Only solution is the 1.5TB RAM option for sure. üòâ
1205535619721486300,Fri Dec 13 17:11:04 +0000 2019,Nova from @panic looks like it might be interesting when it comes out. https://t.co/Skif1rsi6k
1205534096903925800,Fri Dec 13 17:05:01 +0000 2019,@huytd189 Nova looks interesting. Wonder when it'll be released...
1205533606615011300,Fri Dec 13 17:03:04 +0000 2019,@huytd189 Java could be ok, but I've had bad experiences in the past with Java apps hogging memory just like Electr‚Ä¶ https://t.co/PbL9DNR9T6
1205533385839374300,Fri Dec 13 17:02:11 +0000 2019,@tom_swift Interesting.
1205533280369397800,Fri Dec 13 17:01:46 +0000 2019,@edm00se @WebStormIDE Is webstorm native? I thought it was a Java app.
1205532512262312000,Fri Dec 13 16:58:43 +0000 2019,I really liked TextMate back in the day. I'd go back to that, but it doesn't seem like it has good TS support... üò†
1205531531042676700,Fri Dec 13 16:54:49 +0000 2019,Are there any native macOS based IDEs/code editors that have good TypeScript support? No Electron, no Java... just‚Ä¶ https://t.co/rjWyqtEphD
1205154025164832800,Thu Dec 12 15:54:44 +0000 2019,@olivtassinari @withspectrum @github Chat is nice sometimes‚Ä¶ and a little separation between communities so it isn‚Äô‚Ä¶ https://t.co/UtfxD3Obfs
1205153504802701300,Thu Dec 12 15:52:40 +0000 2019,@TensorNo @mjackson That doesn‚Äôt work anymore. Due to privacy, browsers are starting to have a separate HTTP cache‚Ä¶ https://t.co/rP7ppO2o7W
1204971242291253200,Thu Dec 12 03:48:26 +0000 2019,@mikeal @mjackson It‚Äôs the same, just more or less granular right?
1204963040686264300,Thu Dec 12 03:15:50 +0000 2019,@mikeal @mjackson For example, if two bundles depend on a common dep like react, it is split into a separate bundle‚Ä¶ https://t.co/4U37AG3e2L
1204962966208045000,Thu Dec 12 03:15:32 +0000 2019,@mikeal @mjackson In Parcel 2, we support generating native ESM as output of the bundler. We use normal (non dynami‚Ä¶ https://t.co/DovK7quLKl
1204921724426322000,Thu Dec 12 00:31:40 +0000 2019,@mikeal @ryanflorence @mjackson Feels like there is probably a middle ground between bundling, and loading files in‚Ä¶ https://t.co/ufvNJd85w1
1204921724426322000,Thu Dec 12 00:31:40 +0000 2019,@mikeal @ryanflorence @mjackson Feels like there is probably a middle ground between bundling, and loading files in‚Ä¶ https://t.co/ufvNJd85w1
1204898366313779200,Wed Dec 11 22:58:51 +0000 2019,RT @TschinderDaniel: Released 5.0.0 of react-docgen. üí• üéâ @typescript  support added via @babeljs, big thanks to  @devongovett and contribut‚Ä¶
1204866659489476600,Wed Dec 11 20:52:51 +0000 2019,@mjackson Did you see @mikeal‚Äôs https://t.co/PqtQllrhj2? Looks pretty promising.
1204834433213161500,Wed Dec 11 18:44:48 +0000 2019,@mjackson Yep! This should be possible to build with our plugin APIs pretty easily.
1204833364022182000,Wed Dec 11 18:40:33 +0000 2019,@mjackson You could build this with a custom resolver plugin in Parcel 2 to replace the default one. Excited to see‚Ä¶ https://t.co/Hku5Y7TpV2
1204832409222430700,Wed Dec 11 18:36:45 +0000 2019,@antony @withspectrum @github That's a very strong reaction. What would you prefer communities use instead?
1204824680349106200,Wed Dec 11 18:06:03 +0000 2019,@mattiatoso Not sure I follow completely. Could you open an issue on Github with some more details and we can help you out?
1204823431369199600,Wed Dec 11 18:01:05 +0000 2019,Is @withspectrum dead? I was hoping it would get integrated into @github itself but it's been a year since the acqu‚Ä¶ https://t.co/BBn1sOhrG1
1204801203051217000,Wed Dec 11 16:32:45 +0000 2019,üé• The video of my talk from Destination:Web last month is up! If you want to learn about how the Parcel 2 plugin sy‚Ä¶ https://t.co/r9sKW6SUtk
1204613366934732800,Wed Dec 11 04:06:21 +0000 2019,ü§î https://t.co/u0zgdFmLel
1204612212347695000,Wed Dec 11 04:01:46 +0000 2019,@mjackson @parceljs Nope! We have our own tree shaking implementation. Even works on CommonJS modules. üòÄ
1204603542746493000,Wed Dec 11 03:27:19 +0000 2019,@mjackson Or, use @parceljs. It is happening. üòâ
1204423634556575700,Tue Dec 10 15:32:26 +0000 2019,@kyleshevlin @parceljs üòç 1 sec, gonna put this on the website
1204276577304891400,Tue Dec 10 05:48:05 +0000 2019,@sebmck @Anagobarreto Congrats! üéâ
1204194852876865500,Tue Dec 10 00:23:20 +0000 2019,https://t.co/N1cR40tXAQ is a web app for generating accessible color palettes using WCAG compliant contrast ratios.‚Ä¶ https://t.co/4SAv5uFDrE
1204194621993078800,Tue Dec 10 00:22:25 +0000 2019,RT @NateBaldwinArt: Today I‚Äôm thrilled to announce the launch of Leonardo. After years creating and maintaining accessible color systems, I‚Ä¶
1204133438971728000,Mon Dec 09 20:19:18 +0000 2019,RT @stefanboeckname: The unseen performance costs of CSS-in-JS in React apps https://t.co/73nlpd1dUM #webperf #perfmatters
1203490104209072000,Sun Dec 08 01:42:55 +0000 2019,@cseckenrode Noo, stop it! ü§£
1203487051393355800,Sun Dec 08 01:30:47 +0000 2019,San Francisco has turned into a lake. ‚òîÔ∏èüòÇ https://t.co/pexgIJtvvh
1202772567754334200,Fri Dec 06 02:11:41 +0000 2019,@matthewcp @mjackson @_developit @MylesBorins @guybedford Sounds nice but has problems too. Some code really is env‚Ä¶ https://t.co/MlIdYOgvKm
1202659179225178000,Thu Dec 05 18:41:07 +0000 2019,@guybedford @mjackson @MylesBorins @_developit Ah, I like commonjs/module much better than require/default. üëç
1202658911007850500,Thu Dec 05 18:40:03 +0000 2019,@_developit @mjackson @MylesBorins @guybedford I've started the implementation in Parcel already. I'm writing it as‚Ä¶ https://t.co/XZhqMIarh9
1202657208497885200,Thu Dec 05 18:33:17 +0000 2019,@jordanstaniscia congrats on shipping!
1202656480328994800,Thu Dec 05 18:30:23 +0000 2019,@mjackson @MylesBorins @_developit @guybedford With that, old tools will get es5, and tools supporting the new expo‚Ä¶ https://t.co/IZTQXbfBoy
1202656204478005200,Thu Dec 05 18:29:18 +0000 2019,@mjackson @MylesBorins @_developit @guybedford Problem with the first one is `module` has historically meant only E‚Ä¶ https://t.co/OVS54cKKKP
1202640217380806700,Thu Dec 05 17:25:46 +0000 2019,This looks neat! https://t.co/c1YEL5BqbH
1202591080975257600,Thu Dec 05 14:10:31 +0000 2019,@trueadm Interesting. Do you think the Flare gesture system would remain public and build on top of it as a separat‚Ä¶ https://t.co/tnA2ElOmk5
1202471518569037800,Thu Dec 05 06:15:25 +0000 2019,@trueadm This is interesting. How does this event system relate to Flare?
1202289107864453000,Wed Dec 04 18:10:35 +0000 2019,@stubbornella @kylemathews I'm worried that it might end up being too granular though. Ideally you do want to bundl‚Ä¶ https://t.co/8VYbBk8pdt
1202166726508478500,Wed Dec 04 10:04:17 +0000 2019,@stubbornella @kylemathews Close. You‚Äôd need really granular code splitting though, or clicking on something deep i‚Ä¶ https://t.co/D2F8QvuDIZ
1202019229622505500,Wed Dec 04 00:18:11 +0000 2019,@slightlylate Yeah it‚Äôs pretty crazy how much unnecessary rendering is being done client side. https://t.co/hJ0FwrQ7Z7
1202013370729345000,Tue Dec 03 23:54:54 +0000 2019,RT @JavaScriptDaily: Outside the Web: Emscripten Now Generating Standalone WebAssembly Binaries - https://t.co/sN8LYAoC8q
1201897772254781400,Tue Dec 03 16:15:33 +0000 2019,@stubbornella @kylemathews I think it's *also* that for the interactive parts. But removing unnecessary duplicate r‚Ä¶ https://t.co/aU8RwfsQrC
1201897322675765200,Tue Dec 03 16:13:46 +0000 2019,Interesting article. Accessibility for atomic web components with shadow DOM will be problematic until AOM is imple‚Ä¶ https://t.co/2DISSLDCTy
1201889776409837600,Tue Dec 03 15:43:47 +0000 2019,RT @devongovett: The way static site generators based on most of the popular client side JS frameworks (e.g. Gatsby) work is pretty crazy.‚Ä¶
1201874860638687200,Tue Dec 03 14:44:31 +0000 2019,@code_punkt @dan_abramov Regardless, don't you think 370KB of JS basically for a theme selector is kinda excessive?
1201874726194430000,Tue Dec 03 14:43:59 +0000 2019,@code_punkt @dan_abramov Ah, good point. I get 370KB of JS with that filter (after brotli decompression). https://t.co/pnXT4lYY7R
1201863314239819800,Tue Dec 03 13:58:38 +0000 2019,@chantastic But be careful, this can be dangerous and hard to support over time, especially for reusable libraries‚Ä¶ https://t.co/HdOhlBAnbT
1201858934308573200,Tue Dec 03 13:41:14 +0000 2019,@matthewcp @trueadm Yeah, there are alternatives to client side routing now. Service workers can make normal naviga‚Ä¶ https://t.co/6loYG8K30v
1201855131060506600,Tue Dec 03 13:26:07 +0000 2019,@trueadm I think those still produce JS or some IR that needs JS to run though right? That‚Äôs great, but feels like‚Ä¶ https://t.co/asRxELglv8
1201713225756291000,Tue Dec 03 04:02:14 +0000 2019,@LucasHugdahl @parceljs @sveltejs Eh, that‚Äôs how basically all tools work. Webpack and browserify too. But yes, I a‚Ä¶ https://t.co/L9mxTAjIui
1201711590057353200,Tue Dec 03 03:55:44 +0000 2019,@LucasHugdahl @parceljs Which node_modules? All of them?
1201657425943842800,Tue Dec 03 00:20:30 +0000 2019,@danjordan Because client side routing ü§∑üèª‚Äç‚ôÇÔ∏è
1201655658120007700,Tue Dec 03 00:13:29 +0000 2019,@kylemathews Oh absolutely, no question. Not saying get rid of all JS. But we should optimize to reduce unnecessary‚Ä¶ https://t.co/eErbZpMiwQ
1201651028828942300,Mon Dec 02 23:55:05 +0000 2019,@kylemathews But if you didn't need that 20kb... seems worth it, no?  Also, if you had a completely static page, yo‚Ä¶ https://t.co/FuKogqV9Tv
1201646773845946400,Mon Dec 02 23:38:11 +0000 2019,@kylemathews I mean, service workers are here today. All I'm saying is that maybe the complexity of client side nav‚Ä¶ https://t.co/IqDJVs0vyz
1201645060275626000,Mon Dec 02 23:31:22 +0000 2019,@kylemathews Ah right. Yeah I think the &lt;portal&gt; element is meant to help with that. Or you could implement it in a‚Ä¶ https://t.co/lApz1EYzmI
1201644452386762800,Mon Dec 02 23:28:57 +0000 2019,@kylemathews I'm not entirely sure about this. But unless you have really good code splitting (e.g. every component‚Ä¶ https://t.co/d68PF9d1DC
1201644120122351600,Mon Dec 02 23:27:38 +0000 2019,@kylemathews How would it be? It's the same HTML, just encoded into a JSON string.
1201643616088641500,Mon Dec 02 23:25:38 +0000 2019,@kylemathews Depends on the content of course. For a blog, I'd imagine most of the page is different on each page s‚Ä¶ https://t.co/XhVDPNz9D3
1201642889345818600,Mon Dec 02 23:22:44 +0000 2019,@kylemathews Right, but currently you still have to download all the JS and re-render all of the static parts too.‚Ä¶ https://t.co/aRUqmxwlnX
1201641837519261700,Mon Dec 02 23:18:34 +0000 2019,@kylemathews I'm just saying get rid of the client side router entirely. So much simpler, and a lot less rendering‚Ä¶ https://t.co/9CklWx7xjM
1201641407112286200,Mon Dec 02 23:16:51 +0000 2019,@kylemathews Sure, but I think there could be a way to integrate this into the rendering process itself so this manual work isn't needed.
1201640858623176700,Mon Dec 02 23:14:40 +0000 2019,@kylemathews I question whether this is the right approach. Wrote more about it in the issue, but seems like just l‚Ä¶ https://t.co/nuKYXHPTzJ
1201639889705373700,Mon Dec 02 23:10:49 +0000 2019,@kylemathews If something deep in the tree is interactive, you have to hydrate the whole thing which means duplicat‚Ä¶ https://t.co/x9ShiePCwg
1201639802572984300,Mon Dec 02 23:10:28 +0000 2019,@kylemathews Yeah that sounds nice in theory, not sure how it would work in practice though. It really needs to be‚Ä¶ https://t.co/DeZMHUThAp
1201637063948243000,Mon Dec 02 22:59:36 +0000 2019,Wrote some more details about this over on this React issue: https://t.co/mvWK6r73vB  Would love to see this move f‚Ä¶ https://t.co/fp44ke0iEt
1201637062778085400,Mon Dec 02 22:59:35 +0000 2019,I think there are ways to improve this. Ideally, static HTML rendering would be integrated with the JS bundler to o‚Ä¶ https://t.co/S50wBIgtLA
1201637061662392300,Mon Dec 02 22:59:35 +0000 2019,This is all due to the way hydration works in modern JS frameworks. Because they reconcile against the entire tree,‚Ä¶ https://t.co/QihIn26bik
1201637058114011100,Mon Dec 02 22:59:34 +0000 2019,For example, loading this Gatsby generated blog post downloads over 500 KB of JS only to re-generate the exact same‚Ä¶ https://t.co/rzfOsLeUY1
1201637029114593300,Mon Dec 02 22:59:27 +0000 2019,The way static site generators based on most of the popular client side JS frameworks (e.g. Gatsby) work is pretty‚Ä¶ https://t.co/OKRiTZXjBA
1201537113700868000,Mon Dec 02 16:22:26 +0000 2019,@swyx I saw your comments on the issues. They may have been the inspiration for fixing this. üòâ
1201536449549668400,Mon Dec 02 16:19:47 +0000 2019,Working on improving the diagnostics for some common configuration issues people have run into with Parcel 2 so far‚Ä¶ https://t.co/fUIoBf28R0
1201532519562252300,Mon Dec 02 16:04:10 +0000 2019,@quinnirill @Rich_Harris @sebmarkbage I tried my hand at this as well. Similar ideas to prepack but trying to optim‚Ä¶ https://t.co/O7O6kKHS1z
1201190852711911400,Sun Dec 01 17:26:30 +0000 2019,RT @swyx: üì∫Made a 2hr recording of my process creating a faster Create-React-App CLI clone with @reactjs, @typescript, @tailwindcss and @pa‚Ä¶
1200919146499911700,Sat Nov 30 23:26:51 +0000 2019,@JDrechslerUS @philwalton Module output is implemented in the latest parcel v2 alphas!
1200918945701732400,Sat Nov 30 23:26:03 +0000 2019,@swyx @IAmTrySound @RollupJS @parceljs Parcel actually has first class support for tree shaking CommonJS in additio‚Ä¶ https://t.co/dpjZUReodm
1200872216650498000,Sat Nov 30 20:20:22 +0000 2019,Use the right tool for the job! https://t.co/T2LnaEh6nS
1200255847659647000,Fri Nov 29 03:31:08 +0000 2019,New @wesbos beginner JS course uses Parcel for some of the lessons! üòç https://t.co/AxVEmmqOYM
1200157192349003800,Thu Nov 28 20:59:07 +0000 2019,@sebmarkbage @dan_abramov @chofter Excited to see all this in action! Sounds like it could be a lot better than the‚Ä¶ https://t.co/KYKbJruT0W
1200082592797732900,Thu Nov 28 16:02:41 +0000 2019,This is amazing. I was googling for something and came across this article on The Verge. Check out the image at the‚Ä¶ https://t.co/549Psn296z
1200070573554065400,Thu Nov 28 15:14:55 +0000 2019,@dan_abramov @chofter Makes sense. With full SSR for initial page load, how do you avoid sending the full HTML for‚Ä¶ https://t.co/q7XfG8KSVs
1200067459014901800,Thu Nov 28 15:02:33 +0000 2019,@dan_abramov @chofter Ah right, I saw this in the repo. Looks very neat!  So, to clarify, you‚Äôd get JSON out of tha‚Ä¶ https://t.co/nrv2Laqm8Y
1200064459252871200,Thu Nov 28 14:50:37 +0000 2019,@dan_abramov @chofter ie a server component and a client component? How would you inject the dynamic parts into the‚Ä¶ https://t.co/hlQ5q4rG0T
1200061002567471000,Thu Nov 28 14:36:53 +0000 2019,@dan_abramov @chofter Yeah, markdown, syntax highlighting, basically most things on a content site (eg blog, news s‚Ä¶ https://t.co/aTYz7u8icZ
1200058980841771000,Thu Nov 28 14:28:51 +0000 2019,@dan_abramov @chofter By extracting the static parts, you duplicate less work on the client that‚Äôs already done on‚Ä¶ https://t.co/UGhmNGQYX4
1200058427734667300,Thu Nov 28 14:26:39 +0000 2019,@dan_abramov @chofter Depends on the app of course. Is it faster to download an API response and the whole JS to re‚Ä¶ https://t.co/r9fqA9mYCP
1200056758519128000,Thu Nov 28 14:20:01 +0000 2019,@dan_abramov @chofter Yeah that‚Äôs neat. But you‚Äôre still downloading unnecessary code. So you are compromising over‚Ä¶ https://t.co/14xvC7JU5x
1200053947861545000,Thu Nov 28 14:08:51 +0000 2019,@dan_abramov @chofter Also I don‚Äôt think this is unreasonable. People want to eg write their whole site in React wh‚Ä¶ https://t.co/IjAy6pkjJy
1200053447434920000,Thu Nov 28 14:06:52 +0000 2019,@dan_abramov @chofter Another is to download static HTML from the server even on subsequent page loads and not clie‚Ä¶ https://t.co/Fx3EgWHTKF
1200053221559095300,Thu Nov 28 14:05:58 +0000 2019,@dan_abramov @chofter Thanks for the subtweet here. üòâ  Yes, traditional client side routing where you replace the w‚Ä¶ https://t.co/Y2VgBuh5qA
1199894690432266200,Thu Nov 28 03:36:01 +0000 2019,@dan_abramov @aweary @trueadm Sure thing! https://t.co/ttoL0ATiVI
1199887215041622000,Thu Nov 28 03:06:19 +0000 2019,@dan_abramov @aweary @trueadm Tried to summarize the conversation so far here: https://t.co/WKLeQP6qFX
1199875059055288300,Thu Nov 28 02:18:01 +0000 2019,@dan_abramov @aweary @trueadm I can if you think it would be interesting. Is the main react repo a good place for this?
1199874742905458700,Thu Nov 28 02:16:45 +0000 2019,@flexdinesh @aweary @dan_abramov Kinda but for a whole page rather than at the component level. And then going one‚Ä¶ https://t.co/ElYcfHN1oq
1199873531296784400,Thu Nov 28 02:11:57 +0000 2019,@aweary @dan_abramov Yeah possibly. I was wondering whether a compiler could look at the component tree and compile‚Ä¶ https://t.co/Rge6IydAUh
1199871213838983200,Thu Nov 28 02:02:44 +0000 2019,@aweary @dan_abramov Yeah somewhat similar to what eg ember does with templates but for a different purpose (less c‚Ä¶ https://t.co/qg1rpPrllJ
1199870208862761000,Thu Nov 28 01:58:44 +0000 2019,@dan_abramov Instead of sending the JS to render the whole component, only send the JS to update the dynamic parts.
1199869942377668600,Thu Nov 28 01:57:41 +0000 2019,@dan_abramov Right, I guess static subtree was the wrong wording. I mean, extract the dynamic bits from the compone‚Ä¶ https://t.co/bv2XB8tduJ
1199862177559171000,Thu Nov 28 01:26:50 +0000 2019,Is it possible to detect static React subtrees? Seems like a sufficiently smart build tool could bundle only non-st‚Ä¶ https://t.co/Gg2vEVxRv3
1199750348333817900,Wed Nov 27 18:02:27 +0000 2019,@rem Yes, tree shaking will be on by default for production builds in Parcel 2. I don‚Äôt have a firm date yet for th‚Ä¶ https://t.co/ScJT8yy73p
1199685833038672000,Wed Nov 27 13:46:06 +0000 2019,@kng @jkup Congrats!
1199477958043299800,Wed Nov 27 00:00:05 +0000 2019,@jaredpalmer @DavidWells @swyx Yup. Github is a good example of where client rendering would probably help a lot. https://t.co/8VIHxVyJ22
1199299355708141600,Tue Nov 26 12:10:22 +0000 2019,@jin_x_zhao @ryanflorence @rauchg @tailwindcss This is unfortunately a very common opinion of web devs and results‚Ä¶ https://t.co/9M8JgOOv6C
1199189556941086700,Tue Nov 26 04:54:04 +0000 2019,@ryanflorence @rauchg You can always use an API the wrong way. As a low level API, this approach works very well. H‚Ä¶ https://t.co/Uvk35103Gc
1199172252719181800,Tue Nov 26 03:45:19 +0000 2019,@rauchg Yep, very excited about this! Hooks enable reusability across design systems. Better a11y etc. for everyone‚Ä¶ https://t.co/0glDiHdpbO
1199035198123307000,Mon Nov 25 18:40:42 +0000 2019,@markdalgleish you might say it's lit
1199032833307750400,Mon Nov 25 18:31:19 +0000 2019,@timneutkens You are much smarter than I. I kick every hornets nest I see! üòÜ
1199013758825193500,Mon Nov 25 17:15:31 +0000 2019,@thekitze savage
1199003672392294400,Mon Nov 25 16:35:26 +0000 2019,@kennetpostigo Not yet! Still need to build out the new docs site. The readme has some docs in the meantime.
1198788432509558800,Mon Nov 25 02:20:09 +0000 2019,@BradCThornhill Ok, thanks for your opinion. Bye.
1198786656066662400,Mon Nov 25 02:13:05 +0000 2019,@BradCThornhill How could you possibly know that? Actually, I do work on a large code base, at a big company, with‚Ä¶ https://t.co/cINHYYKoj5
1198754054744113200,Mon Nov 25 00:03:33 +0000 2019,@cc_nixon Yup! It‚Äôs important to find a balance as with all tools. Not everything is a nail. https://t.co/Ft3pSr9t3E https://t.co/B029YEYyZn
1198727255356104700,Sun Nov 24 22:17:03 +0000 2019,@thenameisturbo Woooww nice one
1198698397986783200,Sun Nov 24 20:22:23 +0000 2019,@stemmlerjs 1. not really 2. yes, many 3. frontend 4. yes
1198691171326779400,Sun Nov 24 19:53:40 +0000 2019,@dagda1 Yup https://t.co/Ft3pSr9t3E https://t.co/B029YEYyZn
1198665536952914000,Sun Nov 24 18:11:48 +0000 2019,@sebastianmeier Definitely agree about typing the public interface https://t.co/Ft3pSr9t3E https://t.co/B029YEYyZn
1198665285223346200,Sun Nov 24 18:10:48 +0000 2019,@steida uhh, ok. I use typescript all the time, and I think I‚Äôm pretty ok at it. Doesn‚Äôt mean I have to like it for all things.
1198665108760584200,Sun Nov 24 18:10:06 +0000 2019,@sebastianmeier Glad it worked well for you! I said apply sparingly, not don‚Äôt use it at all. It‚Äôs a tool, and like‚Ä¶ https://t.co/wK7AsQWCBi
1198662536591106000,Sun Nov 24 17:59:53 +0000 2019,@DerekNonGeneric https://t.co/Ft3pSr9t3E https://t.co/B029YEYyZn
1198661903171481600,Sun Nov 24 17:57:22 +0000 2019,@_MichaelSholty @jkup That‚Äôs the hope. It‚Äôs hit or miss though. You could spend a lot of time fixing the errors and‚Ä¶ https://t.co/3DSUqzjPwX
1198661372705300500,Sun Nov 24 17:55:15 +0000 2019,@dev__adi Most times if you leave off an annotation entirely, TS will assume any. Sometimes it even figures out the type for you!
1198661166559420400,Sun Nov 24 17:54:26 +0000 2019,@mjackson @angustweets I have much experience with this. Mute button at the ready. üòâ
1198660617109852200,Sun Nov 24 17:52:15 +0000 2019,@jkup Exactly. Type the inputs and outputs for your public interface. Sometimes trying to type all the internals is not worth it.
1198660206953021400,Sun Nov 24 17:50:38 +0000 2019,@dev__adi any is fine sometimes üòâ
1198659452926218200,Sun Nov 24 17:47:38 +0000 2019,TypeScript is vastly overrated. Writing types is a huge waste of time for most things. Apply sparingly. https://t.co/xIzURtujTN
1198642352417472500,Sun Nov 24 16:39:41 +0000 2019,@dagda1 @dylanbarrell @sarahmei Also it‚Äôs not just labels and inputs as in the example. Tons of aria patterns use i‚Ä¶ https://t.co/K4nyLI7JPG
1198641756620771300,Sun Nov 24 16:37:19 +0000 2019,@preetster @vivainio @lastmjs Also it‚Äôs not just those two specific elements in the example. ids tie together tons‚Ä¶ https://t.co/WfUdcvWXVd
1198639761105150000,Sun Nov 24 16:29:23 +0000 2019,@preetster @vivainio @lastmjs Usually design systems will have a label element and a textfield element for example.‚Ä¶ https://t.co/JEdu8mQqEU
1198639452052058000,Sun Nov 24 16:28:09 +0000 2019,@vivainio @preetster @lastmjs That‚Äôs not the impression I‚Äôm getting from most of my mentions...  Without shadow DOM‚Ä¶ https://t.co/rIWOZrtiMw
1198636449429459000,Sun Nov 24 16:16:13 +0000 2019,@preetster @vivainio @lastmjs Also shadow DOM is a pretty big part of the web component story, so if you have to sk‚Ä¶ https://t.co/nDXhR4p2g1
1198636105840517000,Sun Nov 24 16:14:51 +0000 2019,@preetster @vivainio @lastmjs Correction: DOM is the only way to make components not tied to any framework. You can‚Ä¶ https://t.co/okhqvdBN7Z
1198631629364682800,Sun Nov 24 15:57:04 +0000 2019,@swyx @tolmasky I believe figma‚Äôs UI is all JS too, it‚Äôs just the actual canvas that‚Äôs rendered to webgl by wasm.
1198631472011153400,Sun Nov 24 15:56:27 +0000 2019,@swyx @tolmasky I think it‚Äôll be a lot of hybrids. Maybe you port a core rendering engine to WASM, but rewrite the‚Ä¶ https://t.co/viZBe2qWG7
1198629342508507100,Sun Nov 24 15:47:59 +0000 2019,@spion @justinfagnani @ken_wheeler Honestly it‚Äôs about the same as what web components provides: just the DOM. Ther‚Ä¶ https://t.co/dEODfeLzqP
1198628568630100000,Sun Nov 24 15:44:54 +0000 2019,@JagReehal Fixes to the issues Rich mentioned. Accessibility support, some declarative form of shadow DOM for serve‚Ä¶ https://t.co/Yp7cYxd08U
1198627882047697000,Sun Nov 24 15:42:11 +0000 2019,@vivainio @lastmjs Accessibility is a pretty huge issue.
1198484676546969600,Sun Nov 24 06:13:08 +0000 2019,@tolmasky Yup. From what I‚Äôve seen, the next couple years are going to be huge for wasm.
1198409670068592600,Sun Nov 24 01:15:05 +0000 2019,@lastmjs @justinfagnani @ken_wheeler Just lit-html is about the same size as preact. https://t.co/LhRCbeeHsa
1198408880822161400,Sun Nov 24 01:11:57 +0000 2019,@lastmjs @justinfagnani @ken_wheeler That is true of React vs lit-element, but is unrelated to web components in ge‚Ä¶ https://t.co/k45iTHDzjw
1198408189504417800,Sun Nov 24 01:09:12 +0000 2019,@lastmjs @justinfagnani @ken_wheeler lit-element is ~2x the size of preact. https://t.co/Rr18RPSr6q
1198407857844080600,Sun Nov 24 01:07:53 +0000 2019,@lastmjs @justinfagnani @ken_wheeler Nope. This is a common misconception. You ship almost the same code to the bro‚Ä¶ https://t.co/BIysiznlA9
1198406486071791600,Sun Nov 24 01:02:26 +0000 2019,@lastmjs @justinfagnani @ken_wheeler This is a misunderstanding of what web components are. You still need the same‚Ä¶ https://t.co/tD1JEerXqT
1198406123822317600,Sun Nov 24 01:00:59 +0000 2019,@lastmjs Not sure how you can with all of the issues mentioned here.
1198384306646700000,Sat Nov 23 23:34:18 +0000 2019,@Justinwillis96 @justinfagnani @ken_wheeler I just don't see how that could possibly make sense. They all  call cre‚Ä¶ https://t.co/dmYbL1Ho4s
1198382922371387400,Sat Nov 23 23:28:48 +0000 2019,@Justinwillis96 @justinfagnani @ken_wheeler That's not inherent to web components though. That's just different JS‚Ä¶ https://t.co/yHnIxXGHcO
1198382189563367400,Sat Nov 23 23:25:53 +0000 2019,@Justinwillis96 @justinfagnani @ken_wheeler That seems coincidental. They both render to DOM nodes at the end of th‚Ä¶ https://t.co/brolKQspcy
1198381680387428400,Sat Nov 23 23:23:52 +0000 2019,@Justinwillis96 @justinfagnani @ken_wheeler Do they really though, or is it just coincidental? They do the same thi‚Ä¶ https://t.co/NqJuAfGcPR
1198379344420192300,Sat Nov 23 23:14:35 +0000 2019,@justinfagnani @ken_wheeler I'm not disputing that at all. But we gotta stop saying web components reduces JS weigh‚Ä¶ https://t.co/utUnNRiKix
1198376895865188400,Sat Nov 23 23:04:51 +0000 2019,@justinfagnani @ken_wheeler I think we have a different definition of "framework". No matter what term you use, lit‚Ä¶ https://t.co/NMBsNkLJAp
1198375777743646700,Sat Nov 23 23:00:24 +0000 2019,@justinfagnani @ken_wheeler You're splitting hairs on terms here. Framework, library, whatever. You need something‚Ä¶ https://t.co/hJ28rj4JwT
1198375464311480300,Sat Nov 23 22:59:10 +0000 2019,@justinfagnani @ken_wheeler That's an implementation detail. Developers care about the DX of writing and maintainin‚Ä¶ https://t.co/Mzph59B3Al
1198374584178757600,Sat Nov 23 22:55:40 +0000 2019,@justinfagnani @ken_wheeler No one is arguing that the component model isn't built into the browser. But it's very‚Ä¶ https://t.co/YyM37egwOG
1198373271177007000,Sat Nov 23 22:50:27 +0000 2019,@justinfagnani @ken_wheeler Sure, it's fine. Everyone will just manually write createElement and appendChild calls like it 2005.
1198372292536877000,Sat Nov 23 22:46:33 +0000 2019,@justinfagnani @ken_wheeler This is practically just plain false. You define component classes with lit-element jus‚Ä¶ https://t.co/wM4tL03s7P
1198364926286258200,Sat Nov 23 22:17:17 +0000 2019,@selbekk I think it depends on the culture of the teams using your design system. I work at a big company with hund‚Ä¶ https://t.co/OKKUyRscHl
1198355801204650000,Sat Nov 23 21:41:02 +0000 2019,@morewry So the point that web components help you ship less JS is false.
1198354175286866000,Sat Nov 23 21:34:34 +0000 2019,@morewry I'll answer it for you then: nothing. Web components are just the DOM. You'll still need a framework on to‚Ä¶ https://t.co/n4cARvwg21
1198352158061523000,Sat Nov 23 21:26:33 +0000 2019,@Rich_Harris Exactly.
1198351914468966400,Sat Nov 23 21:25:35 +0000 2019,@JacobMGEvans Yeah lit-element does essentially the same thing as React, just renders into shadow dom instead.
1198351639221981200,Sat Nov 23 21:24:29 +0000 2019,@morewry I don't see how that is relevant to web components. What would they make smaller compared to existing frameworks?
1198350912915296300,Sat Nov 23 21:21:36 +0000 2019,@Rich_Harris Yeah, even CSS modules aren't enough though. With shadow dom encapsulation, that would mean we would n‚Ä¶ https://t.co/OotKHMWzXa
1198349864096039000,Sat Nov 23 21:17:26 +0000 2019,Polymer üëè is üëè still üëè a üëè framework! üëè https://t.co/2u9VamOF7e
1198349054616330200,Sat Nov 23 21:14:13 +0000 2019,@ken_wheeler Yeah it's funny. One of the many reasons cited by WC advocates is usually about "reducing JS framework‚Ä¶ https://t.co/ewE1qAMs1L
1198347918748438500,Sat Nov 23 21:09:42 +0000 2019,Web components might be great in 5 years, but it's simply too early to adopt them today. Too many major issues.  Me‚Ä¶ https://t.co/luHhHMp8SC
1198347206606016500,Sat Nov 23 21:06:52 +0000 2019,@Rich_Harris Requiring CSS to be bundled with JS is also not great.  https://t.co/fncz6saF4a
1198345137350307800,Sat Nov 23 20:58:39 +0000 2019,@boriscoder @kennethrohde @justinfagnani Also accessibility? Seems pretty major to me. https://t.co/XdvmmyGloB
1198344909289226200,Sat Nov 23 20:57:45 +0000 2019,RT @Rich_Harris: So, web components  ‚Ä¢ break a11y ‚Ä¢ break progressive enhancement (no SSR, broken without JS) ‚Ä¢ don't work with SVG ‚Ä¢ share‚Ä¶
1198344862195568600,Sat Nov 23 20:57:33 +0000 2019,RT @sarahmei: PSA: There is currently no way for web components to be accessible if you use the isolation feature (called ‚Äúshadow dom‚Äù).‚Ä¶
1198266177908142000,Sat Nov 23 15:44:54 +0000 2019,@boriscoder @kennethrohde @justinfagnani No server rendering is another big one
1198264247509106700,Sat Nov 23 15:37:13 +0000 2019,@griffadev @justinfagnani If the classes are clearly machine generated it‚Äôs pretty clear you shouldn‚Äôt target them‚Ä¶ https://t.co/AiiSGDegop
1198263942235115500,Sat Nov 23 15:36:01 +0000 2019,@kuldeepkeshwar Yup! üëç
1198081797197680600,Sat Nov 23 03:32:14 +0000 2019,@danbucholtz @splitinfinities it's pretty easy without shadow dom too. just API design.
1198031475204952000,Sat Nov 23 00:12:16 +0000 2019,@WestbrookJ @BenDelarre when code splitting you can insert a &lt;link&gt; in parallel to the &lt;script&gt; and load both at the same time
1198029363771400200,Sat Nov 23 00:03:53 +0000 2019,@WestbrookJ @BenDelarre hmm why is that faster? also vs what? doesn't seem like waiting for JS and using constructa‚Ä¶ https://t.co/EkIpXmmO0u
1198025998849065000,Fri Nov 22 23:50:31 +0000 2019,@WestbrookJ @BenDelarre why are Constructible Stylesheets needed for this? normal &lt;link&gt; tags work fine
1198023559731241000,Fri Nov 22 23:40:49 +0000 2019,@BenDelarre Not dead yet.
1198023484686786600,Fri Nov 22 23:40:31 +0000 2019,@WestbrookJ @BenDelarre also, I don't see many people using raw web component APIs. That would be like writing raw‚Ä¶ https://t.co/UzjQBlI5h2
1198023286904373200,Fri Nov 22 23:39:44 +0000 2019,@WestbrookJ @BenDelarre why would it be any slower? you just rename selectors to a hash.
1198023120180801500,Fri Nov 22 23:39:04 +0000 2019,@BenDelarre not supported in edge according to caniuse.  the selectors are just renamed. the css itself and DOM are‚Ä¶ https://t.co/nH2mPkjp8E
1198021274385055700,Fri Nov 22 23:31:44 +0000 2019,@BenDelarre but it works in all browsers. and you can load css separately from js. and you can server render. idk w‚Ä¶ https://t.co/nTcj8eiDah
1198018887058485200,Fri Nov 22 23:22:15 +0000 2019,@BenDelarre hashed class names are good enough and don't have the issues of css-in-js. we'll see what happens in the future.
1198004942562156500,Fri Nov 22 22:26:50 +0000 2019,@dmitryshimkin @justinfagnani @kennethrohde styles injected by javascript cannot be parsed and processed by browser‚Ä¶ https://t.co/9uXRA85aWv
1198001933216170000,Fri Nov 22 22:14:53 +0000 2019,@justinfagnani @dmitryshimkin @kennethrohde Yes it is. We bundle JS. I'm saying we need to bundle CSS as well. But‚Ä¶ https://t.co/clOyUiq3FO
1198001538519552000,Fri Nov 22 22:13:19 +0000 2019,@justinfagnani @guybedford Those don't have the same problems that CSS does. There are existing solutions that work fine for them.
1198001332281467000,Fri Nov 22 22:12:30 +0000 2019,@justinfagnani @emarticor @kennethrohde but then you cannot cache individual parts of the bundle.
1198000980878450700,Fri Nov 22 22:11:06 +0000 2019,@dmitryshimkin @kennethrohde @justinfagnani You wouldn't usually load just button.css. You'd load the CSS for a par‚Ä¶ https://t.co/EE0Xk7zjY7
1197996096603050000,Fri Nov 22 21:51:41 +0000 2019,@justinfagnani @guybedford No, just CSS. JS can already be bundled fine. Not sure what else you'd bundle.
1197995747108515800,Fri Nov 22 21:50:18 +0000 2019,@justinfagnani @emarticor @kennethrohde but requires a smart server. not an easy sell.
1197995481890082800,Fri Nov 22 21:49:15 +0000 2019,@dmitryshimkin @kennethrohde @justinfagnani Performance and cacheability. If you include CSS in JavaScript, it cann‚Ä¶ https://t.co/Vw955fDgUn
1197995236699472000,Fri Nov 22 21:48:16 +0000 2019,@emarticor @kennethrohde @justinfagnani But you still cannot bundle multiple modules together. Definitely don't wan‚Ä¶ https://t.co/Tg9Dknthm0
1197973326313873400,Fri Nov 22 20:21:12 +0000 2019,@guybedford @justinfagnani Yep, agreed. I think in order for CSS modules to be composable safely we'll need syntax additions to CSS.
1197971993800237000,Fri Nov 22 20:15:55 +0000 2019,@guybedford @justinfagnani I think in the future it will be great. Just not ready yet. Native CSS modules might hel‚Ä¶ https://t.co/EOQwJnzcO5
1197970726243881000,Fri Nov 22 20:10:53 +0000 2019,@kennethrohde @justinfagnani Until there's a way to use CSS inside shadow dom in a performant way without bundling‚Ä¶ https://t.co/OL4JXCSfe7
1197969301203906600,Fri Nov 22 20:05:13 +0000 2019,@DavidKPiano like?
1197969180001104000,Fri Nov 22 20:04:44 +0000 2019,@justinfagnani hashed generated classes are fine for most things. not perfect, but good enough. yeah you can still‚Ä¶ https://t.co/QmTK37YcEv
1197967944073891800,Fri Nov 22 19:59:49 +0000 2019,@guybedford @justinfagnani Generated (hashed) class names and no API to add custom classes is close enough for most cases.
1197967760409542700,Fri Nov 22 19:59:05 +0000 2019,@DavidKPiano what?
1197966768301428700,Fri Nov 22 19:55:09 +0000 2019,@justinfagnani You don't need shadow dom to do that though.
1197966520292262000,Fri Nov 22 19:54:10 +0000 2019,@justinfagnani I don't think you need shadow DOM for this. Just don't forward things you don't need to the rendered DOM node.
1197966030645031000,Fri Nov 22 19:52:13 +0000 2019,@justinfagnani Or, just don't include them in the API. üòâ Not sure why you'd need shadow dom for this.
1197945887558758400,Fri Nov 22 18:32:11 +0000 2019,Design systems are about consistency: it should be possible to make design changes in a single place. Allowing too‚Ä¶ https://t.co/qQF9Ffzsyp
1197945886942224400,Fri Nov 22 18:32:10 +0000 2019,Most design system components should be considered atomic. Treat the internals as implementation details that could‚Ä¶ https://t.co/4GfcZRctQj
1197945886359208000,Fri Nov 22 18:32:10 +0000 2019,Instead of exposing direct refs to DOM elements (which is also discouraged in the React docs), expose an interface‚Ä¶ https://t.co/4AVIxBDJYp
1197945885750988800,Fri Nov 22 18:32:10 +0000 2019,Consider what style changes should be allowed. In a design system, you probably don't want to allow the full power‚Ä¶ https://t.co/KejBUJpRl3
1197945885147009000,Fri Nov 22 18:32:10 +0000 2019,Instead of forwarding all DOM props directly, you should expose an interface specific to each component. Intentiona‚Ä¶ https://t.co/KPndwO7Gzl
1197945884455030800,Fri Nov 22 18:32:10 +0000 2019,Exposing the internal DOM structure of the components in your design system is very dangerous and you're probably d‚Ä¶ https://t.co/atJeDSnRyb
1197766085170229200,Fri Nov 22 06:37:42 +0000 2019,@sebmarkbage @mjackson @ryanflorence @dan_abramov @chancethedev @trueadm Yeah. I was thinking some way to render ju‚Ä¶ https://t.co/fJEO0W4CAT
1197763571385426000,Fri Nov 22 06:27:43 +0000 2019,@mjackson @ryanflorence @sebmarkbage @dan_abramov @chancethedev @trueadm Ah yeah. One thing I‚Äôve been thinking abou‚Ä¶ https://t.co/RIRxEJ3S7U
1197760543437680600,Fri Nov 22 06:15:41 +0000 2019,@mjackson @ryanflorence @sebmarkbage @dan_abramov @chancethedev @trueadm Pretty sure this is possible with the expe‚Ä¶ https://t.co/zIZnjdGuhu
1197756079758688300,Fri Nov 22 05:57:57 +0000 2019,@ryanflorence @dan_abramov @chancethedev @trueadm One idea is to wrap each item in a context, have that item genera‚Ä¶ https://t.co/iEBUUnWMQm
1197755591143223300,Fri Nov 22 05:56:00 +0000 2019,@ryanflorence @dan_abramov @chancethedev @trueadm We ran into so many problems trying to do this over the years. Re‚Ä¶ https://t.co/XDzUVkvKpR
1197589564707065900,Thu Nov 21 18:56:17 +0000 2019,@brian_d_vaughn @wbinnssmith Excellent!
1197577523225231400,Thu Nov 21 18:08:26 +0000 2019,@brian_d_vaughn @wbinnssmith Update: published v2.0.0-alpha.3.2 which should fix the stream issue!
1197530891947524000,Thu Nov 21 15:03:08 +0000 2019,@sockhatso Yeah both work the same way
1197530832069648400,Thu Nov 21 15:02:54 +0000 2019,@eclecticjohny The CLI is almost the same as v1. You can set the port, hostname, etc.
1197397682999853000,Thu Nov 21 06:13:48 +0000 2019,RT @devongovett: Parcel 2 alpha 3 is out! üöÄ  üîÑ React Fast Refresh üóÉÔ∏è Bundle inlining as text or data url üö® Beautiful error diagnostics üë∑‚Äç‚ôÇÔ∏è‚Ä¶
1197296807476265000,Wed Nov 20 23:32:58 +0000 2019,@Jhnnns @tomasz_ducin @parceljs Would definitely be helpful to get some consensus about this from other tools thoug‚Ä¶ https://t.co/s8qXS1nkRR
1197296283385352200,Wed Nov 20 23:30:53 +0000 2019,@littledan @Jhnnns @tomasz_ducin @parceljs @svensauleau We don't need them at runtime as far as I know. They are de‚Ä¶ https://t.co/Gfui9gxwEL
1197295988819382300,Wed Nov 20 23:29:43 +0000 2019,@littledan @Jhnnns @tomasz_ducin @parceljs @svensauleau Sure, will do!
1197295220196442000,Wed Nov 20 23:26:39 +0000 2019,@Jhnnns @tomasz_ducin @parceljs Yep! That was the initial proposal. Then we realized that if a bundler/browser didn‚Ä¶ https://t.co/3hIoxVGEj3
1197292979041386500,Wed Nov 20 23:17:45 +0000 2019,@Jhnnns @tomasz_ducin @parceljs @littledan @svensauleau Yep, definitely aware of this proposal and following with i‚Ä¶ https://t.co/K4ETZ7vxBd
1197292656092561400,Wed Nov 20 23:16:28 +0000 2019,@Jhnnns @tomasz_ducin @parceljs because ESM specifiers are URLs by spec. : makes it a valid protocol.
1197288612255060000,Wed Nov 20 23:00:24 +0000 2019,@brian_d_vaughn @wbinnssmith Cool. We'll look into the stream bug.
1197288272155725800,Wed Nov 20 22:59:03 +0000 2019,@suchipi @brian_d_vaughn That will not work with Parcel 2. The plugin system is all new.
1197285183369531400,Wed Nov 20 22:46:46 +0000 2019,@brian_d_vaughn We're looking into including this by default, but one way would be to define a custom named pipelin‚Ä¶ https://t.co/B4naYiGki6
1197285093041037300,Wed Nov 20 22:46:25 +0000 2019,@brian_d_vaughn Hey, glad you're enjoying it so far! So, you're looking to import a file as a URL at build time? No‚Ä¶ https://t.co/SIj2NCS022
1197267999427707000,Wed Nov 20 21:38:29 +0000 2019,@AltinSelimi @CompuIves Not exactly sure what you mean. You can create workers with the `new Worker('worker.js')` c‚Ä¶ https://t.co/d3wtOBC3wy
1197263857065984000,Wed Nov 20 21:22:02 +0000 2019,@CollWilliams @MicrosoftEdge That's unfortunate. Given that Edge has an IE compatibility mode, replacing IE11 with‚Ä¶ https://t.co/urVWmoFqK3
1197244706360447000,Wed Nov 20 20:05:56 +0000 2019,@tomasz_ducin @parceljs kinda has to be right? it's a custom transformation. definitely want to work with other too‚Ä¶ https://t.co/ANqDuk8bx8
1197193364900216800,Wed Nov 20 16:41:55 +0000 2019,@alexeyraspopov @mischnic @dan_abramov @reactjs Released! https://t.co/q2pfGUsWXx
1197189769362428000,Wed Nov 20 16:27:38 +0000 2019,Huge thanks to the team! Parcel 2 is moving at a breakneck pace, and the team is truly killing it. All this in one‚Ä¶ https://t.co/2yKLAyH6rp
1197187393310228500,Wed Nov 20 16:18:11 +0000 2019,https://t.co/2Qtjl9WJHT
1197187391540170800,Wed Nov 20 16:18:11 +0000 2019,Some tweets with a bit more detail about some of this are attached in the following thread.  https://t.co/d7vm5yn4tY
1197187388985860000,Wed Nov 20 16:18:10 +0000 2019,Parcel 2 alpha 3 is out! üöÄ  üîÑ React Fast Refresh üóÉÔ∏è Bundle inlining as text or data url üö® Beautiful error diagnosti‚Ä¶ https://t.co/K8QXcD3Rdy
1197184357527511000,Wed Nov 20 16:06:08 +0000 2019,@brian_d_vaughn This happens to me too. Usually when I'm working within an hour of going to bed. I try to watch TV,‚Ä¶ https://t.co/tWSdscTf3l
1196984961330364400,Wed Nov 20 02:53:48 +0000 2019,@TheLarkInn @_developit Nope! Whole new thing https://t.co/IPaoZ3rMz8
1196820096280215600,Tue Nov 19 15:58:41 +0000 2019,@sebsilbermann Could be used by bundlers too no? i.e. does Browserify support ESM now?
1196816925080223700,Tue Nov 19 15:46:05 +0000 2019,@sebsilbermann You‚Äôre going to have a lot of confused users. Most build tools don‚Äôt compile node_modules by default.
1196804600281456600,Tue Nov 19 14:57:06 +0000 2019,@sebsilbermann No, ie webpack won‚Äôt compile anything in node_modules no matter what you do.
1196616429224644600,Tue Nov 19 02:29:23 +0000 2019,@ryanflorence OMG, I think this all the time.
1196514800265646000,Mon Nov 18 19:45:33 +0000 2019,@ljharb But like, how though? Only thing I can think of is a transpiler from old versions to new versions. Or somet‚Ä¶ https://t.co/28YBPAK82w
1196512808243851300,Mon Nov 18 19:37:38 +0000 2019,@ljharb Yes of course. But if module A is written in ES2017 and isn't updated for 3 years, then I'm not sure how it‚Ä¶ https://t.co/bJrBu5QwwQ
1196509884193226800,Mon Nov 18 19:26:01 +0000 2019,@ljharb So we can ship modern code to end users? Reduce transpilation bloat? etc.
1196509418122141700,Mon Nov 18 19:24:10 +0000 2019,@ljharb Because all of npm isn't precisely one version of the language? I think that's the problem we're trying to solve...
1196508772031533000,Mon Nov 18 19:21:35 +0000 2019,@ljharb targets is about not freezing it. It lets package authors decide what they can ship rather than engines/too‚Ä¶ https://t.co/tUMDu3n0EG
1196507046859772000,Mon Nov 18 19:14:44 +0000 2019,@ljharb "it‚Äôs not a solution". Sorry what? I don't know what you mean.  main/exports is not good enough. exports is‚Ä¶ https://t.co/thzfrJiAMl
1196506208284242000,Mon Nov 18 19:11:24 +0000 2019,@ljharb `module` is ES5 with ESM. No other new features. `jsnext:main` was deprecated and was essentially the same.‚Ä¶ https://t.co/hRpoKXnVaU
1196504345434394600,Mon Nov 18 19:04:00 +0000 2019,@ljharb That's what `targets` is for. Ship ES5 `main` + 1 or more modern targets you define. Tools can decide which‚Ä¶ https://t.co/rd5nNjFbIH
1196503061427937300,Mon Nov 18 18:58:54 +0000 2019,@ljharb What would you suggest?
1196502636112990200,Mon Nov 18 18:57:13 +0000 2019,@ljharb Yeah, that's why I want to see adoption of `targets`, which allows you to define your own custom fields wit‚Ä¶ https://t.co/WszlHnsvDj
1196492082824634400,Mon Nov 18 18:15:16 +0000 2019,@kristoferbaxter @FredWessberg @matthewcp @_developit Either way, I think something like `targets` is going to be n‚Ä¶ https://t.co/mL1Vi3Njj7
1196489608919277600,Mon Nov 18 18:05:27 +0000 2019,@kristoferbaxter @FredWessberg @matthewcp @_developit engines with explicit browser/node versions is the best I can‚Ä¶ https://t.co/aYQ3QmcR0d
1196482569878954000,Mon Nov 18 17:37:28 +0000 2019,@kristoferbaxter @FredWessberg @matthewcp @_developit Still not sure yearly test262-based versions will be granular‚Ä¶ https://t.co/stOfTRd4ob
1196467699078971400,Mon Nov 18 16:38:23 +0000 2019,@SolarLiner @_developit Ideally, yes. Realistically, no. We're gonna need to publish ES5 `main` for years while tooling catches up.
1196465648328564700,Mon Nov 18 16:30:14 +0000 2019,@SolarLiner @_developit Yup, but it applies to an entire package not an individual entry in the package. That's wha‚Ä¶ https://t.co/cQO9AIisS3
1196464586427289600,Mon Nov 18 16:26:01 +0000 2019,@kristoferbaxter @_developit I am worried about browser targets more than node for this though. With browserslist,‚Ä¶ https://t.co/6f8Wv9M8o9
1196463772660985900,Mon Nov 18 16:22:47 +0000 2019,@kristoferbaxter @_developit Yeah the syntax field might not be necessary there. The node version implicitly has an‚Ä¶ https://t.co/hjxfsghURY
1196461516851044400,Mon Nov 18 16:13:49 +0000 2019,@kristoferbaxter @_developit What if we combined syntax into targets?  "main": "dist/old.js", "modern": "dist/moder‚Ä¶ https://t.co/SYAJ8EcuA2
1196460818780418000,Mon Nov 18 16:11:03 +0000 2019,@kristoferbaxter @_developit I'm not sure syntax is enough. Definitely part of the problem, but what about APIs? No‚Ä¶ https://t.co/Fk15J7Cp4V
1196457658116497400,Mon Nov 18 15:58:29 +0000 2019,@RubenVerborgh Latest at the time of publishing, not use. But I take your point.
1196453064359571500,Mon Nov 18 15:40:14 +0000 2019,@RubenVerborgh Possibly. The publish date of the package might be enough too.
1196451083486257200,Mon Nov 18 15:32:21 +0000 2019,@_developit Yeah that‚Äôs the problem. Same one as &lt;script type=module&gt; has.  I think we need a way to declare via en‚Ä¶ https://t.co/7bJQDSGW2y
1196306364127043600,Mon Nov 18 05:57:18 +0000 2019,@Runspired What is embroider?
1196247582562906000,Mon Nov 18 02:03:43 +0000 2019,@mikesherov Still doesn't seem to answer anything about the versions/syntax supported by the browser. It's just "br‚Ä¶ https://t.co/MIYrZEd6P2
1196246630078414800,Mon Nov 18 01:59:56 +0000 2019,@theKashey We tried usage but it included far too many polyfills by default, and increased build sizes unnecessaril‚Ä¶ https://t.co/JICUgZGA6p
1196245787153289200,Mon Nov 18 01:56:35 +0000 2019,@evanplaice pkg.module should also only contain ES5 at the moment. e.g. webpack/babel won't compile anything in nod‚Ä¶ https://t.co/0RUZOP5y5l
1196245540968644600,Mon Nov 18 01:55:36 +0000 2019,@theKashey We enable useBuiltins: 'entry', so you can import 'babel-polyfill' and get a subset of polyfills for your target.
1196243040488132600,Mon Nov 18 01:45:40 +0000 2019,@evanplaice Yeah, but realistically we're gonna need to ship ES5 `main` for a long time for existing tools (webpack, rollup, etc.).
1196242543823818800,Mon Nov 18 01:43:42 +0000 2019,@mikesherov Yeah I was involved with that a bit. I think the conditions need to be more granular than just "browser‚Ä¶ https://t.co/iahPltcKjN
1196241450817609700,Mon Nov 18 01:39:21 +0000 2019,@kristoferbaxter @slightlylate @nomadtechie @_developit Would love to see that, and compare with what we're doing w‚Ä¶ https://t.co/Dj8VJllNsx
1196240710124458000,Mon Nov 18 01:36:25 +0000 2019,@kristoferbaxter @slightlylate @nomadtechie @_developit This was more about loading in the browser rather than in package.json right?
1196239885759217700,Mon Nov 18 01:33:08 +0000 2019,@kristoferbaxter @slightlylate @nomadtechie Yeah I remember reading this. What's the current state?
1196239435697807400,Mon Nov 18 01:31:21 +0000 2019,@mikesherov Parcel 1 supports browserslist inside package.json to determine whether to compile in node_modules like‚Ä¶ https://t.co/4ku5Go8M2U
1196239072143933400,Mon Nov 18 01:29:54 +0000 2019,@mikesherov I think, realistically, we'll still need to ship ES5 `main` for existing tools for a while. That's why‚Ä¶ https://t.co/jDwPTin5y7
1196237290399338500,Mon Nov 18 01:22:49 +0000 2019,@tolmasky üò†
1196236975088402400,Mon Nov 18 01:21:34 +0000 2019,@tolmasky Yeah ideally long term. But realistically you'd need to ship ES5 main for a while for existing tools, unt‚Ä¶ https://t.co/EAdo97Wzxo
1196236792015413200,Mon Nov 18 01:20:50 +0000 2019,We have support for defining custom targets in Parcel 2 via the targets field: https://t.co/Zhdn4mXgJL  Packages ca‚Ä¶ https://t.co/y6lBhfce5Z
1196236171602354200,Mon Nov 18 01:18:22 +0000 2019,@_MichaelSholty flow/ts is not standard JS. You'd have to compile those to ES2019 or whatever. But at least not all the way to ES5.
1196236019542052900,Mon Nov 18 01:17:46 +0000 2019,@tolmasky We actually have support for this and even custom targets in Parcel 2 via the `targets` field.‚Ä¶ https://t.co/PECRFmxo9r
1196235769427267600,Mon Nov 18 01:16:47 +0000 2019,@tolmasky Yeah if the whole package is in one syntax. We support browserslist/engines.node for this in Parcel today‚Ä¶ https://t.co/M6tPDY9YiZ
1196234064803463200,Mon Nov 18 01:10:00 +0000 2019,If we can decide on a package.json field that means "modern JS", we can publish libraries with that field in additi‚Ä¶ https://t.co/uOOywwng8l
1196234063809368000,Mon Nov 18 01:10:00 +0000 2019,It should be up to applications, not libraries, to determine the final targets. If you want to support IE11 in your‚Ä¶ https://t.co/D2hYoj9x3y
1196234063331246000,Mon Nov 18 01:10:00 +0000 2019,main = ES5 CommonJS module = ES5 ESM (no modern syntax other than import/export) jsnext:main = deprecated ???
1196234062685298700,Mon Nov 18 01:10:00 +0000 2019,Can we decide on a package.json field that means "latest standard JS" and start publishing things on npm using it?‚Ä¶ https://t.co/pWUjY2w1G9
1196133090004877300,Sun Nov 17 18:28:46 +0000 2019,@TheRealPomax @jyzg @PixelAmbacht Seems like it would be pretty challenging to do that these days. Almost all libs‚Ä¶ https://t.co/1gVmrvacXM
1196127406181908500,Sun Nov 17 18:06:11 +0000 2019,@TheRealPomax @jyzg @PixelAmbacht `require('brotli/decompress')` should work. It's pure JS. Only the compressor in‚Ä¶ https://t.co/zgXie9279i
1195884959367491600,Sun Nov 17 02:02:47 +0000 2019,@jakedeichert @brian_lovin Interesting. For me, has been very slow lately. Almost every click causes a full page re‚Ä¶ https://t.co/XQRVK3YxOM
1195793619585683500,Sat Nov 16 19:59:50 +0000 2019,@brian_lovin I mean, I'll take both as well... üòâ  I think the desktop website would also benefit from SPA client-re‚Ä¶ https://t.co/JZDrwhANf5
1195790430027178000,Sat Nov 16 19:47:09 +0000 2019,The new Github Mobile app is really good!  I wish they had put the engineering effort toward making a modern, fast,‚Ä¶ https://t.co/NQDaupTKdg
1195512253530853400,Sat Nov 16 01:21:47 +0000 2019,@GarthDB OMG Where do I get these? üò≤
1195506038931255300,Sat Nov 16 00:57:05 +0000 2019,@kylemathews ALL THE STARS ü§©‚≠êÔ∏èüå†üåüüí´‚ú®
1195380280187424800,Fri Nov 15 16:37:22 +0000 2019,@alexeyraspopov @mischnic @dan_abramov @reactjs We‚Äôre just polishing a couple things. Alpha 3 should be out next week.
1195377210133106700,Fri Nov 15 16:25:10 +0000 2019,Just landed React Refresh support in Parcel 2! üöÄ  Great DX for React apps out of the box. ‚öõÔ∏è‚Ä¶ https://t.co/GhjYrgve0n
1195112647395627000,Thu Nov 14 22:53:53 +0000 2019,@mattiatoso Yep! Builds them all in parallel.
1195106858786156500,Thu Nov 14 22:30:53 +0000 2019,@mattiatoso Not necessarily. You can just give Parcel a glob to your package folders. https://t.co/kWQxl9Du0f
1195053571802198000,Thu Nov 14 18:59:09 +0000 2019,@iovis9 @github Huh I never saw anything like that.
1195047686426091500,Thu Nov 14 18:35:46 +0000 2019,@Kosai106 @ALaRiva @github "You can now do X with Github!". Great! I'll try it out.  6 months later...  Oh, sorry i‚Ä¶ https://t.co/cbIZrGXDKa
1195047131880382500,Thu Nov 14 18:33:33 +0000 2019,@ALaRiva @Kosai106 @github @Adobe Yup we will certainly learn from this. And Github should also improve.  I'm done‚Ä¶ https://t.co/dwbfELIyls
1195046014048059400,Thu Nov 14 18:29:07 +0000 2019,@Kosai106 @ALaRiva @github Except the most important place: the actual UI you are using. Where you'd actually see it.
1195045628163719200,Thu Nov 14 18:27:35 +0000 2019,@ALaRiva @Kosai106 @github Never said we were blameless. Just that Github should also do better.
1195045487612551200,Thu Nov 14 18:27:01 +0000 2019,@Kosai106 @ALaRiva @github I've already said how they could do better. Put notifications in the actual UI so people‚Ä¶ https://t.co/0qq5RoUJfE
1195044550777045000,Thu Nov 14 18:23:18 +0000 2019,@Kosai106 @ALaRiva @github Stop apologizing for Github. They aren't blameless here. They are a huge company and sho‚Ä¶ https://t.co/o2CYPHp84q
1195044330576081000,Thu Nov 14 18:22:25 +0000 2019,@ALaRiva @Kosai106 @github Not saying we're blameless here. Clearly we should have read the docs more carefully. Bu‚Ä¶ https://t.co/mUUqbEgQfO
1195043887208788000,Thu Nov 14 18:20:40 +0000 2019,@_ergo_ @DavidFloegel @github Wasn't even asking for it to be free. Just that it not be free and then taken away without warning.
1195043727493853200,Thu Nov 14 18:20:02 +0000 2019,@ALaRiva @Kosai106 @github lol, big companies don't work like that. Maybe if we were one team building one product.‚Ä¶ https://t.co/dpMlwAUqCm
1195042563293503500,Thu Nov 14 18:15:24 +0000 2019,@Kosai106 @ALaRiva @github So, one team might have enabled it for the entire company? And after that there's no lab‚Ä¶ https://t.co/5ZFagbrF8x
1195029686419513300,Thu Nov 14 17:24:14 +0000 2019,@fkling42 You're not the only one. https://t.co/zWa0B6xbMg
1195029245988200400,Thu Nov 14 17:22:29 +0000 2019,@SouronStephane @jaitaiwan @github @gitlab You can also host your own runner with GH actions. It was the first thin‚Ä¶ https://t.co/BwRbmXkEmw
1195028993747013600,Thu Nov 14 17:21:29 +0000 2019,@Kosai106 @ALaRiva @github Where in the UI did you see anything about it being beta? It wasn't in the actions tab f‚Ä¶ https://t.co/S0hTWpAgNe
1195028538014892000,Thu Nov 14 17:19:40 +0000 2019,@SouronStephane @cakemakerjake @github Actually, it is free for user accounts just not orgs.
1195026192551669800,Thu Nov 14 17:10:21 +0000 2019,@Kosai106 @ALaRiva @github Nope. Definitely not in the UI. I‚Äôm not an org owner so I wouldn‚Äôt have received emails.
1195001228029096000,Thu Nov 14 15:31:09 +0000 2019,@PaulDMendoza @flybayer @github Probably yes. But that‚Äôs way above my pay grade to decide.
1195000826952945700,Thu Nov 14 15:29:33 +0000 2019,@Daniel7Calderon @cakemakerjake @github It was not labeled as a beta in the UI. It appeared for free and then was t‚Ä¶ https://t.co/U9o6OY2W0M
1195000619506884600,Thu Nov 14 15:28:44 +0000 2019,@pavelloz @github Should have been labeled in the actual UI. No one reads those pages. Also they should not have en‚Ä¶ https://t.co/3VKLSmQENa
1195000390963515400,Thu Nov 14 15:27:49 +0000 2019,@iovis9 @github Where in the UI did it say beta anywhere? That wasn‚Äôt even clear. I assumed when it appeared in the‚Ä¶ https://t.co/InsTmvQRY7
1195000022003138600,Thu Nov 14 15:26:21 +0000 2019,@DavidFloegel @github Nope. It appeared for free in our repo months ago.  1. It should not have been enabled on our‚Ä¶ https://t.co/JBODnIQ1wV
1194999414156251100,Thu Nov 14 15:23:57 +0000 2019,@jayarjo JSON, TOML, literally anything
1194999287542771700,Thu Nov 14 15:23:26 +0000 2019,@dustindeus @github I‚Äôm not the owner of our org so maybe? All I know is that it appeared in our repo months ago wi‚Ä¶ https://t.co/dbg8ECdBUQ
1194998354075193300,Thu Nov 14 15:19:44 +0000 2019,@neoziro @github It‚Äôs a communication issue. It appeared in our repo for free, then was taken away without warning.‚Ä¶ https://t.co/sTwBEIhi7F
1194997752364580900,Thu Nov 14 15:17:20 +0000 2019,@kkotowicz @github Nope. There was no warning.  1. It should not have been enabled for my repo if it wasn‚Äôt going t‚Ä¶ https://t.co/ojbyNeqkGi
1194997317293633500,Thu Nov 14 15:15:37 +0000 2019,@SouronStephane @cakemakerjake @github Nope. There was nothing.  1. It should not have been enabled for my repo if‚Ä¶ https://t.co/FrFxVeaHhh
1194835349303783400,Thu Nov 14 04:32:00 +0000 2019,@PaulDMendoza @flybayer @github For an individual, not a team. For teams, you need to pay $9 per user. We have 900+‚Ä¶ https://t.co/YSOT6w0wrb
1194820204569616400,Thu Nov 14 03:31:50 +0000 2019,@michaelvillar CircleCI
1194816269649793000,Thu Nov 14 03:16:11 +0000 2019,As you can see, I'm having a great day.
1194816208559755300,Thu Nov 14 03:15:57 +0000 2019,YAML is awful. Why does every CI service use it? ü§¨
1194773134160748500,Thu Nov 14 00:24:47 +0000 2019,@ALaRiva @github Github did not communicate this clearly at all. If it were clear, we would never have migrated to‚Ä¶ https://t.co/X5RvfRDOtj
1194769324080124000,Thu Nov 14 00:09:39 +0000 2019,@ALaRiva @github I'm not the owner of the org. If there was communication, I wouldn't know. Actions should never ha‚Ä¶ https://t.co/v107iYONoq
1194759968580194300,Wed Nov 13 23:32:28 +0000 2019,@dustindeus @github Then why was it enabled on our repo in the first place? It has been working fine for months wit‚Ä¶ https://t.co/auk6cXVXXZ
1194744003712807000,Wed Nov 13 22:29:02 +0000 2019,@JorisGriffioen @github Not at all. Possibly in the docs somewhere, but not anywhere in the actual UI. They shouldn‚Ä¶ https://t.co/NE1iFSsFJ0
1194734947719712800,Wed Nov 13 21:53:03 +0000 2019,@cakemakerjake @github I'm not an owner of our org, so I wouldn't have received the notification. It should have be‚Ä¶ https://t.co/067O3la2Er
1194728926699909000,Wed Nov 13 21:29:07 +0000 2019,@mscccc @github Thanks for the info. I'll look into other options then.
1194728127479480300,Wed Nov 13 21:25:57 +0000 2019,@codervandal @github For large orgs, Github's pricing is insane. $6-7 per user. We have 900+ users in our org.  Thi‚Ä¶ https://t.co/CLC7veSwZi
1194726147075928000,Wed Nov 13 21:18:05 +0000 2019,@mscccc @github Is running a self-hosted runner possible without switching plans? I could spin up a VM pretty easily.
1194720091406917600,Wed Nov 13 20:54:01 +0000 2019,@stefscherer @github I‚Äôm not the owner of the org. We have 900+ users and the new plans cost $6-7 per user...
1194719708945109000,Wed Nov 13 20:52:30 +0000 2019,@mscccc @github The main problem here was communication. I would never have migrated to GH actions if I had known i‚Ä¶ https://t.co/4Woap5eZi4
1194719520776081400,Wed Nov 13 20:51:45 +0000 2019,@mscccc @github I‚Äôm not an owner of the org but I believe we‚Äôre on a legacy plan. Switching to a new plan would cos‚Ä¶ https://t.co/V20vOopQ6O
1194717135408255000,Wed Nov 13 20:42:16 +0000 2019,@mscccc @github Workflows can't be executed on this repository. Please check your payment method or billing status.
1194713706296307700,Wed Nov 13 20:28:38 +0000 2019,@BenJ_Ayc0 @github Yeah maybe in the docs, but it showed up for free in private repos during the beta and worked fine!
1194711942889390000,Wed Nov 13 20:21:38 +0000 2019,So... Github Actions is out of beta!  Turns out, it‚Äôs not free for private repos.  This was not communicated anywhe‚Ä¶ https://t.co/Ki75dYkNxV
1194701594756911000,Wed Nov 13 19:40:31 +0000 2019,RT @sitnikcode: Visited @devongovett talk about next bit @parceljs release at Destination:Web. And Parcel 2 will be so good.  Very flexible‚Ä¶
1194685440109899800,Wed Nov 13 18:36:19 +0000 2019,@xdamman I like big screens (and I cannot lie üòâ)
1194680895875080200,Wed Nov 13 18:18:16 +0000 2019,RT @github: Introducing GitHub for mobile.   Review lines of code, chime in on a design discussion, merge changes, and more. GitHub for mob‚Ä¶
1194668656896069600,Wed Nov 13 17:29:38 +0000 2019,RT @timneutkens: Next.js, Babel, Parcel, Svelte, and others mentioned as early adopters of GitHub Actions üöÄ https://t.co/5J5Dl4nxe7
1194645976000036900,Wed Nov 13 15:59:30 +0000 2019,New MacBook Pro 16‚Äù looks very good. I will be getting one just as soon as IT offers them. So... in a few months. üò© https://t.co/xSKzmY1ALl
1194639972826894300,Wed Nov 13 15:35:39 +0000 2019,RT @CompuIves: We're excited to announce CodeSandbox CI‚Äîa CI service for open source library maintainers! üöÄ  It's a GitHub App that you add‚Ä¶
1194638138695540700,Wed Nov 13 15:28:22 +0000 2019,Finally! Let‚Äôs hope the keyboard is better. üòä https://t.co/j8xvSD0LNU
1194494125111836700,Wed Nov 13 05:56:06 +0000 2019,This is a huge deal! ü•≥ https://t.co/qkTmEuoWpu
1194494024050040800,Wed Nov 13 05:55:42 +0000 2019,@MylesBorins @nodejs Congrats to everyone who worked on it! This is a huge deal. ü•≥
1194483511152922600,Wed Nov 13 05:13:56 +0000 2019,Had a great time speaking about the road to Parcel 2 tonight at Destination:Web in SF! Thanks to @angustweets for o‚Ä¶ https://t.co/7FiAaixXXP
1194482580420092000,Wed Nov 13 05:10:14 +0000 2019,@InTechMansTerms @parceljs @Uber Sure! https://t.co/LHbdCuLBdc
1194466110944563200,Wed Nov 13 04:04:47 +0000 2019,@_developit @mjackson @sebsilbermann @giuseppegurgone @hdjirdeh @shubhie That would be awesome! Let‚Äôs chat.
1194465508701065200,Wed Nov 13 04:02:24 +0000 2019,RT @swyx: @katiesievert @vmiksu had to run but caught @devongovett‚Äôs Parcel 2 talk and it‚Äôs looking üî•! I love that it is taking the @reactj‚Ä¶
1194463459120795600,Wed Nov 13 03:54:15 +0000 2019,@angustweets @vmiksu @katiesievert Thanks for organizing!
1194463309375791000,Wed Nov 13 03:53:39 +0000 2019,@swyx Thanks for coming! Sorry we didn‚Äôt get to say hi.
1194415666888986600,Wed Nov 13 00:44:20 +0000 2019,@_developit @mjackson @sebsilbermann @giuseppegurgone @hdjirdeh @shubhie If you use Parcel 2's differential bundlin‚Ä¶ https://t.co/YHpQ6hjojG
1194363565727080400,Tue Nov 12 21:17:18 +0000 2019,@_developit @hdjirdeh @shubhie Looks cool! We'll investigate using this by default in Parcel. Why is it not in the babel monorepo btw?
1194363028654870500,Tue Nov 12 21:15:10 +0000 2019,RT @_developit: Houssein just announced something I've been working on for a little while: @babel/preset-modules!  A Babel preset that enab‚Ä¶
1194331884156641300,Tue Nov 12 19:11:25 +0000 2019,@TheRealPomax @PixelAmbacht You could pretty easily prebuilt it yourself but yeah
1194328625211834400,Tue Nov 12 18:58:28 +0000 2019,@TheRealPomax @PixelAmbacht should work with any bundler
1194328085375570000,Tue Nov 12 18:56:19 +0000 2019,@TheRealPomax @PixelAmbacht e.g. try a WOFF2 font here: https://t.co/9H8bN9iPEc
1194328000340213800,Tue Nov 12 18:55:59 +0000 2019,@TheRealPomax @PixelAmbacht Yup! It's a pure JS port.
1194327319751512000,Tue Nov 12 18:53:17 +0000 2019,@PixelAmbacht @TheRealPomax fontkit uses this: https://t.co/7Z0Rhdl41m
1194271802639274000,Tue Nov 12 15:12:40 +0000 2019,@dan_abramov Interesting. I wonder what the tradeoff between that and scope hoisting is. With scope hoisting, we tr‚Ä¶ https://t.co/zvRkltAmiL
1194266964635504600,Tue Nov 12 14:53:27 +0000 2019,RT @devongovett: Really excited about the work @JasperDeMoor and @mischnic have been doing on diagnostics and error reporting in Parcel 2 l‚Ä¶
1194119434077524000,Tue Nov 12 05:07:13 +0000 2019,@swyx I believe the talks will be recorded! üôÇ
1194117641423614000,Tue Nov 12 05:00:06 +0000 2019,Giving a talk on Parcel 2 tomorrow evening at the Destination:Web meetup in SF! Looks like there's still a few tick‚Ä¶ https://t.co/u695cFN0wf
1194074598943277000,Tue Nov 12 02:09:03 +0000 2019,RT @markdalgleish: React devs: "Shadow DOM forces you to embed your CSS in JS."  Web platform advocates: https://t.co/MQ85g1b8dm
1194074580681281500,Tue Nov 12 02:08:59 +0000 2019,@markdalgleish ü§© OMG I‚Äôve made it into a Mark Dagliesh meme! Highlight of my career so far.
1194003269422436400,Mon Nov 11 21:25:37 +0000 2019,@JasperDeMoor @mischnic The best part is that it's completely language and plugin agnostic. Any plugin that throws‚Ä¶ https://t.co/LaXS7HpDev
1194002198352416800,Mon Nov 11 21:21:22 +0000 2019,Really excited about the work @JasperDeMoor and @mischnic have been doing on diagnostics and error reporting in Par‚Ä¶ https://t.co/JPXkI3e1OX
1193621261919780900,Sun Nov 10 20:07:39 +0000 2019,RT @left_pad: Read about the future plans of @babeljs and how to contribute to our vision!  ‚óÜ Future Project Goals ‚óÜ Funding More Core Team‚Ä¶
1193602722508890000,Sun Nov 10 18:53:59 +0000 2019,@AdamRackis Feels like two separate issues. Fetch-on-render still works fine with Suspense just like it did before.‚Ä¶ https://t.co/SBuWHwiRs0
1193555038620110800,Sun Nov 10 15:44:31 +0000 2019,@geclos @dan_abramov @FactorialEs Hope not! If so then it‚Äôs a bug.
1193551472195031000,Sun Nov 10 15:30:20 +0000 2019,@larafale @dan_abramov The library in the screenshot is meant as an example. It should be possible for any data fet‚Ä¶ https://t.co/vv9K643QPj
1193416531348058000,Sun Nov 10 06:34:08 +0000 2019,@dan_abramov https://t.co/dYJ75w8EqP
1193349659877490700,Sun Nov 10 02:08:24 +0000 2019,@kylemathews that's pretty fancy
1193346489029779500,Sun Nov 10 01:55:48 +0000 2019,@kylemathews üòÜ Except it works for any type of data loading, not just graphql. And for all code split points, not j‚Ä¶ https://t.co/uOGRNzgXjA
1193339584127500300,Sun Nov 10 01:28:22 +0000 2019,My weekend hack project so far: experimenting with React Concurrent Mode + Parcel 2 plugin for colocated queries.‚Ä¶ https://t.co/tcuVKJvyav
1193196034479939600,Sat Nov 09 15:57:57 +0000 2019,@giuseppegurgone @rictic @littledan @justinfagnani Right, but then you‚Äôre not benefiting from shadow don‚Äôs style en‚Ä¶ https://t.co/jx5SIGIjxE
1193183639439208400,Sat Nov 09 15:08:42 +0000 2019,@GIRARDEYFlorian Yeah exactly, all inside a JS file. There are downsides to this though, like larger downloads and‚Ä¶ https://t.co/hRAMyQV5GN
1193182808052617200,Sat Nov 09 15:05:24 +0000 2019,@JamesWee_ HTTP push is also not optimal though. You end up pushing things the user already has cached because the server cannot know this.
1193182417378431000,Sat Nov 09 15:03:51 +0000 2019,@giuseppegurgone @rictic @littledan @justinfagnani And then how do you load it into a component? Separate files for‚Ä¶ https://t.co/t0vVqWGjDS
1193181996408664000,Sat Nov 09 15:02:10 +0000 2019,@notessensei Not talking about source code here. At the end of the day, there should be fewer HTTP requests than co‚Ä¶ https://t.co/Jymox5gjCc
1193181759040417800,Sat Nov 09 15:01:14 +0000 2019,@GIRARDEYFlorian Sure for source code, but there should be fewer HTTP requests than components when you ship to users.
1192968762422526000,Sat Nov 09 00:54:51 +0000 2019,@mikesherov @tckscz sure, but not the fun parts like server push
1192960650638553000,Sat Nov 09 00:22:37 +0000 2019,@rictic @littledan @justinfagnani Yeah I'm aware of the benefits. But with separate CSS files, you end up making an‚Ä¶ https://t.co/HbgSuz5tsZ
1192953605776535600,Fri Nov 08 23:54:38 +0000 2019,@justinfagnani @guybedford @littledan I'm thinking design system level, like a button and a textfield. Usually pretty different.
1192953002753028000,Fri Nov 08 23:52:14 +0000 2019,@guybedford @justinfagnani @littledan Wouldn't you still have N HTTP requests, where N is the number of components?
1192952859844677600,Fri Nov 08 23:51:40 +0000 2019,@matthewcp @justinfagnani @littledan Yeah but per-component css files are too granular usually
1192951733665726500,Fri Nov 08 23:47:11 +0000 2019,@littledan @justinfagnani You still end up with a separate CSS file for each component, which is probably too granu‚Ä¶ https://t.co/9pQnb0c2Bn
1192951369260421000,Fri Nov 08 23:45:45 +0000 2019,@tckscz lol yeah, solves a lot of things but no one is using it
1192949288050933800,Fri Nov 08 23:37:28 +0000 2019,It's funny how CSS-in-JS is controversial vs. external/extracted CSS files, but web components basically require in‚Ä¶ https://t.co/CUf8EMyEZi
1191872263265505300,Wed Nov 06 00:17:46 +0000 2019,@mikesherov @MicrosoftEdge cc. @TheLarkInn please make it happen üôèüòÇ
1191820307813650400,Tue Nov 05 20:51:18 +0000 2019,@code_punkt @MicrosoftEdge @EdgeDevTools What is LTSB?
1191819090999963600,Tue Nov 05 20:46:28 +0000 2019,Has Microsoft stated whether they plan to auto update IE 11 to @MicrosoftEdge in Windows?   Since the new Chromium‚Ä¶ https://t.co/1ehzAgO7jP
1191775507781542000,Tue Nov 05 17:53:17 +0000 2019,@partheseas I just use local component state for the most part. Never needed a separate state management library.
1191754191401672700,Tue Nov 05 16:28:35 +0000 2019,Medium post: Redux worked great for me! üëç  Management: Redux!!! ü§©  Developers: https://t.co/KgNuiQufPb https://t.co/ypkv5SHAWz
1191733756882641000,Tue Nov 05 15:07:23 +0000 2019,@NicoloRibaudo Congrats! Looks like a great release.
1191733526107955200,Tue Nov 05 15:06:28 +0000 2019,Babel v7.7.0 is out, and it includes support for babel.config.json which will enable much better cachability with P‚Ä¶ https://t.co/DFQwhird2j
1191473693836243000,Mon Nov 04 21:53:59 +0000 2019,@sarah_federman Is this a subtweet? Feels like a subtweet. üòÇ
1191395587721068500,Mon Nov 04 16:43:37 +0000 2019,@_developit Where is ChromeOS for phones? üòâ
1191395404056686600,Mon Nov 04 16:42:54 +0000 2019,@_developit Firefox OS? üò¢ WebOS? üò©
1191170255441121300,Mon Nov 04 01:48:14 +0000 2019,@slightlylate Yeah clearly they can afford it, they just don‚Äôt allocate the resources. But that‚Äôs open source. Some‚Ä¶ https://t.co/1Ix1sv0KTw
1191167993851437000,Mon Nov 04 01:39:15 +0000 2019,@slightlylate Ultimately you still need to convince them to implement specs to have an interoperable web though. I‚Ä¶ https://t.co/sTa5XP60ml
1191165321899413500,Mon Nov 04 01:28:38 +0000 2019,@slightlylate I agree with you in many ways, but don‚Äôt forget: Google forked Blink from WebKit. Do you think maybe,‚Ä¶ https://t.co/kuGtu68ULZ
1190840161745039400,Sun Nov 03 03:56:33 +0000 2019,@jhlagado @lbineau Unfortunately, not fixing this is worse than fixing it. Causes so many interoperability issues w‚Ä¶ https://t.co/RRCNJGx3SZ
1190760562075979800,Sat Nov 02 22:40:15 +0000 2019,@JorisGriffioen Agreed. I think Hooks solves this nicely in React anyway. Makes it pretty easy to share behavior li‚Ä¶ https://t.co/u4srTZmFqE
1190734691185246200,Sat Nov 02 20:57:27 +0000 2019,@diegohaz @yatil Same. My thread was pointing out that it‚Äôs not as simple as just using a button element straight u‚Ä¶ https://t.co/RNWUd0aRQX
1190732865144680400,Sat Nov 02 20:50:12 +0000 2019,@JorisGriffioen This is what libraries are for üòâ
1190669667947303000,Sat Nov 02 16:39:05 +0000 2019,@yatil And do that only for Safari on macOS? It's not worth it to be inconsistent.
1190666319806361600,Sat Nov 02 16:25:46 +0000 2019,@ShaneHudson I think I agreed with that in my thread. Basically, use a library that handles it or use a &lt;button&gt; if‚Ä¶ https://t.co/Gzrk0tk5kL
1190665868906131500,Sat Nov 02 16:23:59 +0000 2019,@yatil That causes so many more problems. If the button opens a popup or dialog, how do you restore focus to the bu‚Ä¶ https://t.co/G1Hb4y0s2S
1190664695167910000,Sat Nov 02 16:19:19 +0000 2019,@yatil Sure... the setting is less of an issue, but still pretty bad and inconsistent. Buttons not focusing on mous‚Ä¶ https://t.co/WcrER4PzbB
1190663670897922000,Sat Nov 02 16:15:15 +0000 2019,@richardiii I gave advice in the thread...  &gt; If you‚Äôre doing something simple, use &lt;button&gt; or a library. If you‚Äôr‚Ä¶ https://t.co/clgJsQtnHE
1190662260097609700,Sat Nov 02 16:09:38 +0000 2019,@richardiii to explain the issue?
1190661993956425700,Sat Nov 02 16:08:35 +0000 2019,@anatudor For reference: https://t.co/1xsUAqG1h8
1190661455609094100,Sat Nov 02 16:06:27 +0000 2019,@anatudor It‚Äôs a long standing issue (earliest issue I found was 2008). Seems they think it‚Äôs working as designed g‚Ä¶ https://t.co/31a5f0cNM8
1190660293854036000,Sat Nov 02 16:01:50 +0000 2019,@richardiii Use a library that has done the work for you.
1190659809533497300,Sat Nov 02 15:59:54 +0000 2019,@anatudor I‚Äôd be careful with that. It may not be as simple as you think. https://t.co/uk8l6p8Bk4
1190659484135243800,Sat Nov 02 15:58:37 +0000 2019,@ShaneHudson I‚Äôd be careful with that. It may not be as simple as you think. https://t.co/uk8l6p8Bk4
1190659148125368300,Sat Nov 02 15:57:16 +0000 2019,This is all to say that native controls are good, but sometimes custom aria enabled controls are actually easier to‚Ä¶ https://t.co/BdSJuTo1CA
1190659147441696800,Sat Nov 02 15:57:16 +0000 2019,This is quite hard to get right in a way that doesn‚Äôt mess up focus management for the rest of the page, and works‚Ä¶ https://t.co/GMaNVrZVfR
1190659146426638300,Sat Nov 02 15:57:16 +0000 2019,For example, Safari on macOS does not properly handle keyboard focus to &lt;button&gt; elements. By default, you cannot t‚Ä¶ https://t.co/mO47xZbber
1190659145726226400,Sat Nov 02 15:57:16 +0000 2019,Saw a bunch of tweets comparing &lt;button&gt; to &lt;div&gt; for custom styled buttons. Seems like the obvious solution, but g‚Ä¶ https://t.co/Dgh6fAK2ia
1189995643973980200,Thu Oct 31 20:00:45 +0000 2019,@jkup Heh I use likes for that. Had no idea bookmarks existed! Where do you find the list of them?
1189925823354040300,Thu Oct 31 15:23:18 +0000 2019,@dan_abramov @AdamRackis @en_JS Totally agree! I‚Äôm excited to see what build tooling can bring to the table to make this easier too. üòä
1189925331685109800,Thu Oct 31 15:21:21 +0000 2019,@_bwhitty @acdlite @ryanflorence @chancethedev @trueadm Yeah @trueadm and I went back and forth on it for a while.‚Ä¶ https://t.co/H4xAf6MdrV
1189924201152446500,Thu Oct 31 15:16:51 +0000 2019,@dan_abramov @AdamRackis @en_JS Yeah that‚Äôs what I meant by SSR for code and data.  Anyway, this is really cool and‚Ä¶ https://t.co/HAwpyIDgGr
1189923173866688500,Thu Oct 31 15:12:47 +0000 2019,@dan_abramov @AdamRackis @en_JS Yeah URLs but you still have to wait for the code to actually load so still one wat‚Ä¶ https://t.co/LLnRGrb3sK
1189921083291422700,Thu Oct 31 15:04:28 +0000 2019,@dan_abramov @AdamRackis @en_JS That is very cool. It still wouldn‚Äôt load the code until after the data loads thoug‚Ä¶ https://t.co/3dey0vFI04
1189920716407226400,Thu Oct 31 15:03:01 +0000 2019,@AdamRackis @dan_abramov @en_JS But then... why do you need the data for those components lower in the tree that ar‚Ä¶ https://t.co/GFjmbDYvuN
1189920160183795700,Thu Oct 31 15:00:48 +0000 2019,@AdamRackis @dan_abramov @en_JS I suppose sometimes this wouldn‚Äôt be possible though. Eg loading the right code mig‚Ä¶ https://t.co/kPIJf6afCV
1189916796339441700,Thu Oct 31 14:47:26 +0000 2019,@AdamRackis @dan_abramov @en_JS Yeah of course... but then you still have a waterfall for the code. Wouldn‚Äôt you wa‚Ä¶ https://t.co/uBOMmHauUt
1189915564082253800,Thu Oct 31 14:42:32 +0000 2019,@AdamRackis @dan_abramov @en_JS Nested lazy() would create a waterfall in any case right? Even if you‚Äôre just loadi‚Ä¶ https://t.co/7lNEle0cGr
1189759059882168300,Thu Oct 31 04:20:39 +0000 2019,@ryanflorence @chancethedev Is this all one component or a composition?
1189569264082010000,Wed Oct 30 15:46:28 +0000 2019,@spion @AdamRackis @left_pad @wSokra turns out... üòÇ
1189559670077132800,Wed Oct 30 15:08:20 +0000 2019,@AdamRackis @en_JS @dan_abramov @kentcdodds @mjackson @andy__carrell This is the closest I got but I‚Äôm still not fu‚Ä¶ https://t.co/V8huNUIvsy
1189555009836339200,Wed Oct 30 14:49:49 +0000 2019,@AdamRackis @left_pad @wSokra @dan_abramov Later in the thread @en_JS said it‚Äôs bad and I trust him ü§∑üèª‚Äç‚ôÇÔ∏è
1189554752368984000,Wed Oct 30 14:48:48 +0000 2019,@AdamRackis @en_JS @dan_abramov @kentcdodds @mjackson @andy__carrell Yes, that‚Äôs possible. We already generate code‚Ä¶ https://t.co/NdCIxhsGdf
1189554097898188800,Wed Oct 30 14:46:12 +0000 2019,@AdamRackis @left_pad @wSokra It seems like fetching inside React.lazy is bad‚Ñ¢ but the idea of moving code around a‚Ä¶ https://t.co/Kt99FYb84s
1189553021950161000,Wed Oct 30 14:41:55 +0000 2019,@AdamRackis @left_pad @wSokra https://t.co/KVR5YZ1dd5
1189330629051195400,Tue Oct 29 23:58:13 +0000 2019,@en_JS @dan_abramov @kentcdodds @mjackson @andy__carrell Yeah that's what I was trying to get at. All the particula‚Ä¶ https://t.co/ttxKjF8QBp
1189329680354173000,Tue Oct 29 23:54:27 +0000 2019,@en_JS @dan_abramov @kentcdodds @mjackson @andy__carrell either way, it doesn't need to be in React.lazy neccesaril‚Ä¶ https://t.co/GWMhfGkK0h
1189329397205098500,Tue Oct 29 23:53:19 +0000 2019,@en_JS @dan_abramov @kentcdodds @mjackson @andy__carrell hmm ok - I'm not getting it then. Not sure what the issue would be.
1189328387740975000,Tue Oct 29 23:49:18 +0000 2019,@en_JS @dan_abramov @kentcdodds @mjackson @andy__carrell It's fetch on render of an already async component. We don‚Ä¶ https://t.co/Ab62KJPhJn
1189325724488028200,Tue Oct 29 23:38:43 +0000 2019,@en_JS @dan_abramov @kentcdodds @mjackson @andy__carrell Quick mockup of the idea https://t.co/oW6n4I8YEt
1189316657057091600,Tue Oct 29 23:02:42 +0000 2019,@en_JS @dan_abramov @kentcdodds @mjackson @andy__carrell Totally. The API is the hard part here. Perhaps the code t‚Ä¶ https://t.co/fk4XQqUjQL
1189312429123100700,Tue Oct 29 22:45:54 +0000 2019,@en_JS @dan_abramov @_jstejada @mjackson @kentcdodds https://t.co/8YtAjhrfGc
1189311905900445700,Tue Oct 29 22:43:49 +0000 2019,@en_JS @dan_abramov @_jstejada @mjackson @kentcdodds presumably an event triggered rendering that component though‚Ä¶ https://t.co/iHwQkJdXVM
1189298709034668000,Tue Oct 29 21:51:22 +0000 2019,@mjackson @dan_abramov @kentcdodds @en_JS I think the point was to use `&lt;LazyFoo&gt;` like you'd use the  component re‚Ä¶ https://t.co/Ud1ON5QpkW
1189296781403787300,Tue Oct 29 21:43:43 +0000 2019,@mjackson @dan_abramov @kentcdodds @en_JS Isn‚Äôt react.lazy pretty much just generating that wrapper component?
1189267687316361200,Tue Oct 29 19:48:06 +0000 2019,@dan_abramov @kentcdodds @mjackson @andy__carrell @en_JS I‚Äôd like to get to where this preloading code can be injec‚Ä¶ https://t.co/yNUbkFWhwr
1189231629480407000,Tue Oct 29 17:24:49 +0000 2019,@dan_abramov @mjackson @kentcdodds @en_JS True, though it would be nicer to avoid manually writing those wrappers.‚Ä¶ https://t.co/eIMKSN5IQ3
1189229387947880400,Tue Oct 29 17:15:55 +0000 2019,@dan_abramov @mjackson @kentcdodds @en_JS React.lazy(props =&gt; {   preloadData(props);   return import('code'); });‚Ä¶ https://t.co/Gq1ObGKvIJ
1189227772062904300,Tue Oct 29 17:09:30 +0000 2019,@mjackson @kentcdodds @en_JS cc. @dan_abramov is this a terrible idea?
1189227284760334300,Tue Oct 29 17:07:34 +0000 2019,@mjackson @kentcdodds @en_JS Heh. Or maybe a react RFC? üòâ
1189224250282070000,Tue Oct 29 16:55:30 +0000 2019,@mjackson @kentcdodds @en_JS I was thinking React.lazy could pass the props to the load callback so you could use t‚Ä¶ https://t.co/JhtHRMW36f
1189222713740669000,Tue Oct 29 16:49:24 +0000 2019,@mjackson @kentcdodds Yeah of course everything is components. But data loading shouldn't only happen in the router‚Ä¶ https://t.co/3oVR9cZFKI
1189208097354473500,Tue Oct 29 15:51:19 +0000 2019,@mikesherov @kentcdodds @mjackson @gatsbyjs Isn‚Äôt the whole point to load data in parallel with code? So, you need‚Ä¶ https://t.co/6PCMyCPd3d
1189206505276313600,Tue Oct 29 15:44:59 +0000 2019,@mikesherov @kentcdodds @mjackson Seems like it would be hard to do at runtime if the code isn‚Äôt loaded yet right?
1189203730920427500,Tue Oct 29 15:33:58 +0000 2019,@mikesherov @kentcdodds @mjackson Right. Building up those requirements from all the children is the hard part, and‚Ä¶ https://t.co/3mx0TIpND5
1189202637805113300,Tue Oct 29 15:29:37 +0000 2019,@mikesherov @kentcdodds @mjackson If you‚Äôre just writing a component, you shouldn‚Äôt need to care about when and whe‚Ä¶ https://t.co/AClqjd28CD
1189202099134845000,Tue Oct 29 15:27:29 +0000 2019,@mikesherov @kentcdodds @mjackson They‚Äôre different though right? &lt;Suspense&gt; is only async, whereas we have sync im‚Ä¶ https://t.co/tr7YGmNi3P
1189200101899567000,Tue Oct 29 15:19:33 +0000 2019,@mikesherov @kentcdodds @mjackson I think it would require bundler integration at some level. Only the bundler know‚Ä¶ https://t.co/tCWb9c21UY
1189199012060000300,Tue Oct 29 15:15:13 +0000 2019,@kentcdodds @mjackson I think we could do some interesting static analysis at build time to generate that automatic‚Ä¶ https://t.co/4zGo3u8Chr
1189198268195983400,Tue Oct 29 15:12:16 +0000 2019,@kentcdodds @mjackson What if React.lazy passed the component‚Äôs props to the load callback? Then you could do somet‚Ä¶ https://t.co/YuO36B0hOZ
1189197104276590600,Tue Oct 29 15:07:38 +0000 2019,@kentcdodds @mjackson Feels like we‚Äôre going to get back to the route-based-codesplitting vs component-based-codesp‚Ä¶ https://t.co/fQbroOxexM
1189030864350351400,Tue Oct 29 04:07:03 +0000 2019,RT @thesamdd: After nearly 10 months of working on it, getting ready to release https://t.co/hzWnYdjEer. A #graphql client without queries,‚Ä¶
1188908348692820000,Mon Oct 28 20:00:13 +0000 2019,@ArtSolopov @parceljs Technically each translation is a separate website. So this one just hasn‚Äôt been updated in a while.
1188660235680047000,Mon Oct 28 03:34:19 +0000 2019,@DavidKPiano @ryanflorence Perhaps in very complicated scenarios, yes. I don‚Äôt think most components have that type‚Ä¶ https://t.co/2mnXiPvbYF
1188658999341670400,Mon Oct 28 03:29:24 +0000 2019,@ryanflorence @DavidKPiano I‚Äôm aware. Personally, I find reducers much harder to write and understand than plain us‚Ä¶ https://t.co/M4Ts5hfgGK
1188636708587196400,Mon Oct 28 02:00:49 +0000 2019,@DavidKPiano @ryanflorence I think we‚Äôre agreeing. üòâ
1188634432183210000,Mon Oct 28 01:51:47 +0000 2019,@DavidKPiano @ryanflorence Delegating events = calling functions that update state. I‚Äôm not convinced that ‚Äúcentral‚Ä¶ https://t.co/GYqu9iVcsh
1188633339915190300,Mon Oct 28 01:47:26 +0000 2019,@DavidKPiano @ryanflorence Depends how you write them. Reusable logic can go in functions. I like the idea, just no‚Ä¶ https://t.co/p6hOcF2WN7
1188631082284933000,Mon Oct 28 01:38:28 +0000 2019,@ryanflorence @DavidKPiano The visualization is certainly very cool. Just by looking at the code it‚Äôs hard to say h‚Ä¶ https://t.co/WeQ42mQLbE
1187433615132508200,Thu Oct 24 18:20:09 +0000 2019,@CompuIves @acdlite @bitandbang ü§Ø WANT!
1187379617792839700,Thu Oct 24 14:45:35 +0000 2019,@stubbornella @floydophone @flackrw @tomocchino Display locking seems close to me, though I haven‚Äôt played with it‚Ä¶ https://t.co/MqLRbB42QQ
1187378362181771300,Thu Oct 24 14:40:36 +0000 2019,@stubbornella @floydophone @flackrw @tomocchino Very true in terms of high level API design. From a browser perspec‚Ä¶ https://t.co/6DU2DrznCn
1187371064466137000,Thu Oct 24 14:11:36 +0000 2019,@stubbornella @floydophone @flackrw It‚Äôs gotta be more than lists. The layout needs to be customizable. Think grids‚Ä¶ https://t.co/h7aTXXLV6X
1187028611066298400,Wed Oct 23 15:30:49 +0000 2019,@elektronik2k5 @danestves @fjuandc @reactjs @typescript The CSS is open source already, so feel free to check that‚Ä¶ https://t.co/ZERtbaiGEk
1187005471548309500,Wed Oct 23 13:58:52 +0000 2019,RT @devongovett: Spectrum, the design system I work on at Adobe, is now public! üéâ  Huge congrats to the team! This is one of the most compl‚Ä¶
1186821919011561500,Wed Oct 23 01:49:30 +0000 2019,@StephenGFriend Thanks! I'll forward your feedback to the team.
1186819043015053300,Wed Oct 23 01:38:04 +0000 2019,@StephenGFriend Try the hamburger menu in the top left üòâ
1186770402502041600,Tue Oct 22 22:24:47 +0000 2019,@codervandal @giuseppegurgone We are using CSS modules.
1186764164972216300,Tue Oct 22 22:00:00 +0000 2019,@codervandal @giuseppegurgone Yes. We have implementations in React, Angular, and Web Components for different prod‚Ä¶ https://t.co/EvXXzRVWzw
1186762580338962400,Tue Oct 22 21:53:42 +0000 2019,@codervandal @giuseppegurgone https://t.co/GF6xyBtY28
1186748718839582700,Tue Oct 22 20:58:37 +0000 2019,@nitriques @kourge @ronderksen Thanks guys. I've forwarded to the team.
1186748538467733500,Tue Oct 22 20:57:54 +0000 2019,@Falkowski dialog thing is a bug in the docs üòâ
1186724157020487700,Tue Oct 22 19:21:01 +0000 2019,@danestves @fjuandc Our CSS implementation is open source. React coming soon. üòâ  https://t.co/WQH1MxGxYu
1186720417387442200,Tue Oct 22 19:06:10 +0000 2019,@KevinLozandier oops! thanks for the report. I'll forward to the team.
1186703471749156900,Tue Oct 22 17:58:50 +0000 2019,@giuseppegurgone @lazdnet would know best. I think we use PostCSS for most things.
1186703045951754200,Tue Oct 22 17:57:08 +0000 2019,@montogeek hmm strange, any idea what's blocked?
1186697923553218600,Tue Oct 22 17:36:47 +0000 2019,@nitriques What issues are you seeing? Seems to work for me...
1186692017977299000,Tue Oct 22 17:13:19 +0000 2019,Spectrum, the design system I work on at Adobe, is now public! üéâ  Huge congrats to the team! This is one of the mos‚Ä¶ https://t.co/RB8wNE6oAM
1186651822682853400,Tue Oct 22 14:33:36 +0000 2019,@ryanflorence Service workers will save us. Fast navigation, handled by the browser. No client side router needed!
1186478675362902000,Tue Oct 22 03:05:34 +0000 2019,Amazing! Finally, native access to codecs built into the browser from JS. üéâ  7 years ago, we wrote Aurora.js, FLAC.‚Ä¶ https://t.co/buMbF9bFrV
1186287088112504800,Mon Oct 21 14:24:16 +0000 2019,@probablyup @swyx @rwieruch Exactly!
1186149759309926400,Mon Oct 21 05:18:34 +0000 2019,@oshimayoan DateTimeFormat supports formatToParts to get the individual segments of the formatted date rather than a single string.
1186081401122087000,Mon Oct 21 00:46:57 +0000 2019,@jeffposnick Difference with current HTTP cache is that the hashes would only include the content of that bundle, n‚Ä¶ https://t.co/9UDwDrGPmN
1186081043071131600,Mon Oct 21 00:45:31 +0000 2019,@jeffposnick I think you'd include the hash in the url to the referenced assets, and the service worker would repla‚Ä¶ https://t.co/GX58NjPDgu
1186064556541431800,Sun Oct 20 23:40:00 +0000 2019,@jeffposnick This would probably be important for CDN caches too which might default to long term caching.
1186063584620466200,Sun Oct 20 23:36:09 +0000 2019,@jeffposnick Ah, makes sense. Maybe a hash would still need to be included in the filenames so you didn't overwrite‚Ä¶ https://t.co/8mqs4yz7vX
1186057103393165300,Sun Oct 20 23:10:23 +0000 2019,@jaffathecake here's an issue: https://t.co/AlA7Igtnbu
1186049870018166800,Sun Oct 20 22:41:39 +0000 2019,@jeffposnick Good point. Another option would be to embed the manifest into the service worker in addition to the e‚Ä¶ https://t.co/yXlQ37oNpT
1186047926444802000,Sun Oct 20 22:33:56 +0000 2019,@nuragic @angustweets Yeah import maps aren't supported anywhere atm. Doing it with a script loader would only work‚Ä¶ https://t.co/wlFa0TArDH
1186039785262989300,Sun Oct 20 22:01:35 +0000 2019,@nuragic @angustweets We'd do it in place of content hashing filenames and relying on the HTTP cache, which has a c‚Ä¶ https://t.co/HlPJ4MEBRU
1186039525945958400,Sun Oct 20 22:00:33 +0000 2019,@jeffposnick @philwalton Yup! We had been thinking about solutions to that problem already, and his article brought‚Ä¶ https://t.co/sgEJ4nfl5o
1186038144916811800,Sun Oct 20 21:55:03 +0000 2019,@jeffposnick Good idea! Here's a writeup of my thinking so far: https://t.co/2HlHaT6iuK
1186037083573346300,Sun Oct 20 21:50:50 +0000 2019,@nuragic @angustweets Yeah. That's a good idea, but kinda outside the scope of what Parcel can do by default.
1186036079587029000,Sun Oct 20 21:46:51 +0000 2019,@jeffposnick cache on demand. manifest itself is updated and cached, but individual requests aren't made until they‚Ä¶ https://t.co/0SJAz98fwd
1186025781975122000,Sun Oct 20 21:05:56 +0000 2019,@jeffposnick I'd really like to only update the manifest on explicit user reloads as well instead of every navigati‚Ä¶ https://t.co/tIsDIgGAYS
1186025488604524500,Sun Oct 20 21:04:46 +0000 2019,@jeffposnick Seems like requesting a tiny manifest in order to skip requesting everything else that's already cache‚Ä¶ https://t.co/IBeqTTFbnN
1185998470269661200,Sun Oct 20 19:17:24 +0000 2019,@AdamRackis @jaffathecake @jeffposnick Yup! I think that‚Äôs also a good idea for long lived tabs. Kinda outside the‚Ä¶ https://t.co/xyxeLxTZXP
1185994501833117700,Sun Oct 20 19:01:38 +0000 2019,@AdamRackis @jaffathecake @jeffposnick As far as I can tell, workbox generated service workers would have the same‚Ä¶ https://t.co/hmVR8shgLm
1185994008905973800,Sun Oct 20 18:59:41 +0000 2019,@angustweets That‚Äôs true and it helps a bit. Still have to reload twice though: first time only updates the service‚Ä¶ https://t.co/r52OECofIC
1185984372492497000,Sun Oct 20 18:21:23 +0000 2019,@swyx @rwieruch afaict emotion and styled-components only support extracting "critical" styles for ssr. This is dif‚Ä¶ https://t.co/ckL6YYDQmU
1185976729069707300,Sun Oct 20 17:51:01 +0000 2019,@rwieruch Yeah e.g. var(--theme-background-color) - inherits from top-level theme provider just like CSS-in-JS can.‚Ä¶ https://t.co/39GgvZxyO0
1185963941135929300,Sun Oct 20 17:00:12 +0000 2019,@jaffathecake Seems like it was discussed in https://t.co/pK0zuBQXX9 back in 2016, but maybe it could be revisited?‚Ä¶ https://t.co/HoQkMuIj0K
1185962846623916000,Sun Oct 20 16:55:51 +0000 2019,@jaffathecake Problem is, I can't load the manifest to decide this synchronously, so there is no way to let this fa‚Ä¶ https://t.co/S1UrLDi4Zv
1185962526170742800,Sun Oct 20 16:54:35 +0000 2019,@jaffathecake We're injecting code into the service worker to handle known parcel assets. There could be other user‚Ä¶ https://t.co/Mqdnup1oXR
1185961635527049200,Sun Oct 20 16:51:02 +0000 2019,These two issues are worse when put together. We could keep the reload button working by loading a manifest on "nav‚Ä¶ https://t.co/Jmy7llPwLJ
1185961634881134600,Sun Oct 20 16:51:02 +0000 2019,The API is also not very composable. I'd like to offer a default service worker for Parcel users, but we need to al‚Ä¶ https://t.co/OAOTR8psti
1185961634029654000,Sun Oct 20 16:51:02 +0000 2019,The way service workers are "installed" and "updated" like native apps makes no sense to me. You have to close and‚Ä¶ https://t.co/WAKOIVBY96
1185929472106590200,Sun Oct 20 14:43:14 +0000 2019,@rwieruch CSS modules + native variables is a great way to go IMO. Many benefits over CSS-in-JS.
1185927494790082600,Sun Oct 20 14:35:22 +0000 2019,@housecor Also don‚Äôt use anything built with Electron or you‚Äôre using Chrome anyway. That‚Äôs becoming very hard though: Slack, VSCode, etc. üòê
1185570640188690400,Sat Oct 19 14:57:22 +0000 2019,@austegard @SlexAxton And I will! Open source at big companies is slow though. üòâ
1185570158980423700,Sat Oct 19 14:55:27 +0000 2019,@bconfortin I‚Äôd wait. Rumors are that it is imminent.
1185568084909641700,Sat Oct 19 14:47:12 +0000 2019,@atulmy @partheseas Excellent idea
1185565498806718500,Sat Oct 19 14:36:56 +0000 2019,@andrewvijay @JacobMGEvans Not sure of course, but the rumor was that they were going back to the old 2014 era keyb‚Ä¶ https://t.co/4arSSXL4PP
1185564925835432000,Sat Oct 19 14:34:39 +0000 2019,RT @onatfarzad: @ryanflorence @cba @sstur_ @dan_abramov @devongovett ü§¶üèª‚Äç‚ôÇÔ∏è https://t.co/wOMD63ds1x
1185564912711389200,Sat Oct 19 14:34:36 +0000 2019,RT @ryanflorence: @cba @sstur_ @dan_abramov @devongovett https://t.co/ucI1jd81xg
1185424137302368300,Sat Oct 19 05:15:13 +0000 2019,How deep can we go? üòú https://t.co/4WwAa6oQnN
1185423809882386400,Sat Oct 19 05:13:55 +0000 2019,@niccai @SlexAxton Soon.
1185422480954941400,Sat Oct 19 05:08:38 +0000 2019,@SlexAxton I just wrote one. It took 3 months, but it‚Äôs fully accessible and internationalized into 31 languages. W‚Ä¶ https://t.co/3aTBizB2eQ
1185420960150614000,Sat Oct 19 05:02:35 +0000 2019,@rauchg @timneutkens nice work! I was hoping someone would steal the Parcel plugin auto loading feature one day. üòú
1185330992334028800,Fri Oct 18 23:05:05 +0000 2019,@walterra @sstur_ @dan_abramov so pro üï∂Ô∏è
1185321869315989500,Fri Oct 18 22:28:50 +0000 2019,@partheseas yeah I could, but can't really go even a day without this machine...
1185302408689148000,Fri Oct 18 21:11:30 +0000 2019,@jkup @mcav hmm good to know. might have to do that
1185299519409279000,Fri Oct 18 21:00:01 +0000 2019,@sstur_ @dan_abramov Oh no. What is happening.
1185293505972727800,Fri Oct 18 20:36:08 +0000 2019,@Philmod @jordanstaniscia Yeah, I know they've made some progress, but seems like very incremental bandaids. Rumor‚Ä¶ https://t.co/lmoW5Eqos6
1185292649588093000,Fri Oct 18 20:32:43 +0000 2019,@jordanstaniscia I thought the rumors were pointing to an October event, but now I'm not so sure...
1185292255306768400,Fri Oct 18 20:31:09 +0000 2019,@PatrickJS__ Yeah, I can't really go a few days without this machine though
1185272697476878300,Fri Oct 18 19:13:27 +0000 2019,@phishy lol
1185270995021635600,Fri Oct 18 19:06:41 +0000 2019,New Apple laptops can‚Äôt come soon enough. So many of the keys on my 2016 model have stopped working reliably that I‚Ä¶ https://t.co/jkY5TooAL5
1184256100872286200,Tue Oct 15 23:53:51 +0000 2019,@philwalton @buildsghost Seems hard to automatically merge service workers though. Hard for user to control what or‚Ä¶ https://t.co/HRn8z3zTbv
1184229557873729500,Tue Oct 15 22:08:23 +0000 2019,RT @parceljs: Parcel 2 alpha 2 is out! üéâ  üì¢ LESS, SASS, Pug, and more üê† babel.config.js üè∑Ô∏è Inline &lt;script&gt; &amp; &lt;style&gt; üöÄ FASTER cached builds‚Ä¶
1184143979379490800,Tue Oct 15 16:28:19 +0000 2019,Alpha 2 is a BIG release! HUGE thanks to all the contributors who made it possible. üòç  https://t.co/JiBkjOgiOv  Par‚Ä¶ https://t.co/whPM0CwyVb
1183082398688276500,Sat Oct 12 18:09:59 +0000 2019,@mjackson Yep. But still better than not monorepos. üòâ
1181982998507352000,Wed Oct 09 17:21:21 +0000 2019,@_munter_ @philwalton We're thinking of tying it to esmodule output since they have very similar browser support. I‚Ä¶ https://t.co/dNDMxKzwmB
1181982397094486000,Wed Oct 09 17:18:58 +0000 2019,@_munter_ @philwalton I like the service worker solution. Has the widest browser support, and also allows the build‚Ä¶ https://t.co/nWsrQTqWVn
1181941331909759000,Wed Oct 09 14:35:47 +0000 2019,RT @philwalton: üìù New article: Cascading Cache Invalidation  I discuss how some of our caching best practices can actually backfire, and I‚Ä¶
1181941117236863000,Wed Oct 09 14:34:56 +0000 2019,@philwalton Yes! We were just talking about how to handle this problem in Parcel 2. üò≤
1181609281323327500,Tue Oct 08 16:36:20 +0000 2019,@adamwathan You‚Äôll need multiple entries for something like that. Hard to statically analyze that.
1181602152684195800,Tue Oct 08 16:08:00 +0000 2019,@adamwathan Yup! It will crawl all of the links, script tags, etc.
1181600268875493400,Tue Oct 08 16:00:31 +0000 2019,@adamwathan You have multiple entries there, so Parcel doesn‚Äôt know which one you mean... perhaps we can improve that though.
1181582449303683000,Tue Oct 08 14:49:43 +0000 2019,RT @devongovett: Parcel 2 can now build entire monorepos! Each package defines "source", "main", "module", and "types" in package.json and‚Ä¶
1181571483379871700,Tue Oct 08 14:06:08 +0000 2019,@ianstormtaylor Not implemented yet, but it‚Äôs really easy to add different output formats. For now, we just have ES‚Ä¶ https://t.co/5igwcyDmWs
1181358264400760800,Mon Oct 07 23:58:53 +0000 2019,If you'll be in SF on November 12th, come see me talk about Parcel 2! https://t.co/9u57vEuWNQ
1181317624099037200,Mon Oct 07 21:17:24 +0000 2019,@FredKSchott It's a custom TypeScript AST transformer that I wrote. üòâ  https://t.co/Dgxs92UUt0
1181307257016815600,Mon Oct 07 20:36:12 +0000 2019,This removes the need for complicated build scripts to do each of these steps separately. Just declaratively specif‚Ä¶ https://t.co/94JRuqDox7
1181306747283103700,Mon Oct 07 20:34:10 +0000 2019,Parcel 2 can now build entire monorepos! Each package defines "source", "main", "module", and "types" in package.js‚Ä¶ https://t.co/JJmPFQS2SI
1181230388187820000,Mon Oct 07 15:30:45 +0000 2019,RT @devongovett: NPM badly needs a way to dismiss a vulnerability as "not a real issue". Non-exploitable audit failures are very annoying f‚Ä¶
1180900007915839500,Sun Oct 06 17:37:56 +0000 2019,RT @parceljs: Parcel v1.12.4 is out with some small fixes. üöÄ  üå≥ Tree shaking improvements and fixes üîê Dependency upgrades for security üíá‚Äç‚ôÄÔ∏è‚Ä¶
1180897872243347500,Sun Oct 06 17:29:27 +0000 2019,@npmjs On a positive note, Parcel v1.12.4 is out with some fixes, including this "security" issue. üòâüöÄ  Also include‚Ä¶ https://t.co/Nlip9qOlYB
1180895231098491000,Sun Oct 06 17:18:57 +0000 2019,Github does this right. On each security alert, they have a way to dismiss the issue for various reasons.  As far a‚Ä¶ https://t.co/5hKTRxIXpP
1180895224882581500,Sun Oct 06 17:18:56 +0000 2019,NPM badly needs a way to dismiss a vulnerability as "not a real issue". Non-exploitable audit failures are very ann‚Ä¶ https://t.co/JjWKs9DKvj
1180674142451818500,Sun Oct 06 02:40:26 +0000 2019,@mikesherov @_developit Yeah I get that. It‚Äôs a cool idea. I just wondered if a different one would be to recompile‚Ä¶ https://t.co/enV2C78Nz0
1180670492321013800,Sun Oct 06 02:25:55 +0000 2019,@_developit This is certainly true. I think there have been some other tools that compiled ‚Äúup‚Äù from older source l‚Ä¶ https://t.co/9Yc8hYEzCm
1180669838286454800,Sun Oct 06 02:23:19 +0000 2019,@_developit We are working very hard on the caching problem in Parcel 2, and track all of these things that would i‚Ä¶ https://t.co/AhgJNun4jf
1180627115638579200,Sat Oct 05 23:33:34 +0000 2019,@_developit Yes. I think there should be a standard way in package.json or similar for specifying how to build your‚Ä¶ https://t.co/BIaysu9HNt
1180626513290334200,Sat Oct 05 23:31:10 +0000 2019,@_developit Ideally, npm acts like a big distributed cache of build artifacts. Source code gets consumed by build t‚Ä¶ https://t.co/3iyHEZHFvx
1180626069214224400,Sat Oct 05 23:29:24 +0000 2019,@_developit The problem is moving targets. Target environment (eg browser) supports X syntax now, and Y syntax in 2‚Ä¶ https://t.co/ucpxCvdvBs
1180623963803635700,Sat Oct 05 23:21:02 +0000 2019,@_developit I disagree with that. Npm is for code that can run in a web browser or similar runtime. CSS, WASM etc.‚Ä¶ https://t.co/0fkhJIA6by
1180623215414005800,Sat Oct 05 23:18:04 +0000 2019,@_developit Hmm. Not sure Babel and typescript are so different. Actually, Babel can even compile typescript.
1180621922691772400,Sat Oct 05 23:12:55 +0000 2019,@_developit Is that really any different than installing a decompiler?
1180605325000368000,Sat Oct 05 22:06:58 +0000 2019,@_developit Yeah could be tricky for repos with really custom build setups but eg parcel can already compile TypeSc‚Ä¶ https://t.co/F7SmFIA304
1180604225597739000,Sat Oct 05 22:02:36 +0000 2019,@_developit So fetch repo, then recompile source to whatever target you want?
1180509396054376400,Sat Oct 05 15:45:47 +0000 2019,Yup! https://t.co/jl5EqN5ZBV
1180508602211025000,Sat Oct 05 15:42:38 +0000 2019,Earthquake? #SF
1180492569802727400,Sat Oct 05 14:38:55 +0000 2019,@_developit Very cool! Wonder if you could almost just fetch(package.json#repository) to get the source code for the package instead... ü§î
1179855456379867100,Thu Oct 03 20:27:16 +0000 2019,@brian_d_vaughn @TensorNo @sebmarkbage Yeah I appreciate that. But this essentially causes every library using Reac‚Ä¶ https://t.co/DQKEzKclCj
1179853583686090800,Thu Oct 03 20:19:49 +0000 2019,@brian_d_vaughn @TensorNo @sebmarkbage Totally see where you're coming from. IMO this should have been done in a ma‚Ä¶ https://t.co/0nbxr9iF85
1179847973859033000,Thu Oct 03 19:57:32 +0000 2019,@brian_d_vaughn @sebmarkbage ü§î another option could be to detect the react version at runtime and replace lifecycle‚Ä¶ https://t.co/VA0YpFkzpK
1179837606940430300,Thu Oct 03 19:16:20 +0000 2019,@brian_d_vaughn @sebmarkbage The UNSAFE methods also don‚Äôt warn though. If you‚Äôre just using a library that uses th‚Ä¶ https://t.co/EWBNeeHa3w
1179834171348287500,Thu Oct 03 19:02:41 +0000 2019,@brian_d_vaughn @sebmarkbage Looking at the polyfill, I might try making a function to add `__suppressDeprecationWa‚Ä¶ https://t.co/kNdPXDjlZh
1179830984281190400,Thu Oct 03 18:50:01 +0000 2019,@brian_d_vaughn @sebmarkbage codemod transforms componentWillReceiveProps -&gt; UNSAFE_componentWillReceiveProps.  pol‚Ä¶ https://t.co/mvZkCf0Ehj
1179829740510699500,Thu Oct 03 18:45:04 +0000 2019,@brian_d_vaughn @sebmarkbage But then after applying this codemod, the library would no longer work on React &lt; 16.3, so breaking change.
1179828921082101800,Thu Oct 03 18:41:49 +0000 2019,@sebmarkbage Yeah, AFAICT that polyfill is for the new lifecycles, not the old ones. Unfortunately, we have hundred‚Ä¶ https://t.co/6nlyvUIij2
1179825325154267100,Thu Oct 03 18:27:32 +0000 2019,React 16.9's warnings for renamed lifecycles are a big problem for libraries that support multiple React versions.‚Ä¶ https://t.co/UiyFYXLa5Y
1179623181197295600,Thu Oct 03 05:04:17 +0000 2019,@tomdale @cramforce @seldo This is consuming my life at the moment as well. Really enjoyed reading the article. Gave me some ideas. üëç
1179614411255763000,Thu Oct 03 04:29:26 +0000 2019,@ryanflorence @seldo Blah blah blah sufficiently smart build toolüòâ
1179081647557247000,Tue Oct 01 17:12:25 +0000 2019,RT @github: It‚Äôs now easier than ever to create and edit a GitHub Actions workflow.   With snippets and auto-complete, you can catch errors‚Ä¶
1179081594599956500,Tue Oct 01 17:12:13 +0000 2019,RT @gimenete: @devongovett @github Not the visual editor but we've made this https://t.co/sRRRUEsWHh
1179053904958349300,Tue Oct 01 15:22:11 +0000 2019,RT @devongovett: Just learned that the TypeScript type checker is all in one giant .ts file that is... wait for it... 33,836 lines long. ü§Øüò±‚Ä¶
1179052530166194200,Tue Oct 01 15:16:43 +0000 2019,RT @GarthDB: @devongovett Rule one of typescript: do not question typescript.
1179047777952657400,Tue Oct 01 14:57:50 +0000 2019,RT @Mark_Reeder: @devongovett https://t.co/4JVIXTV0DN
1179047721690226700,Tue Oct 01 14:57:37 +0000 2019,RT @Ceige_M: @devongovett It's the next evolution of the monorepo. After putting all your files in one repo, you then proceed to put all yo‚Ä¶
1179043904722624500,Tue Oct 01 14:42:27 +0000 2019,@TheRealPomax @humphd That single file is just the type checker though. There‚Äôs still the parser, transformers, gen‚Ä¶ https://t.co/wdW37dRIim
1179038953577447400,Tue Oct 01 14:22:46 +0000 2019,@arcanis @ryanflorence Shipping a single file is one thing. Developing in a single file is another.
1178836063558586400,Tue Oct 01 00:56:33 +0000 2019,@SeaRyanC @orta One example is Mozilla‚Äôs pdf.js. Used to be all in one 10k line file, probably for some of the same‚Ä¶ https://t.co/SwKDtWg85I
1178835810126188500,Tue Oct 01 00:55:33 +0000 2019,@SeaRyanC @orta I would say the same thing about flow or any other codebase like this. Definitely not picking on TS here.
1178835067998654500,Tue Oct 01 00:52:36 +0000 2019,@SeaRyanC @orta I‚Äôm aware that I am armchair critiquing here, but I‚Äôd imagine that at least some parts of those 30k‚Ä¶ https://t.co/3wM3tBZJ8I
1178831988192501800,Tue Oct 01 00:40:22 +0000 2019,@SeaRyanC @orta Plenty of other projects have built their code in a modular way. Not sure why this problem in parti‚Ä¶ https://t.co/ibcdGy1xy9
1178831703021744000,Tue Oct 01 00:39:14 +0000 2019,@SeaRyanC @orta Try rollup or another bundler that merges standard ES modules into a single scope. ü§∑‚Äç‚ôÇÔ∏è
1178828777587036200,Tue Oct 01 00:27:36 +0000 2019,@SeaRyanC @orta Seems like performance of opening and editing the file would be a concern. Also viewing the file on‚Ä¶ https://t.co/HyY9n99CdJ
1178828546396934100,Tue Oct 01 00:26:41 +0000 2019,@SeaRyanC @orta Those are solvable problems with a build system. You can have multiple small files that are combine‚Ä¶ https://t.co/70j4Egcjlx
1178822666553135000,Tue Oct 01 00:03:19 +0000 2019,@ryanflorence Who needs bundlers when you can just write everything in one file? üòÇ
1178809389085417500,Mon Sep 30 23:10:34 +0000 2019,@Ceige_M üòÇ
1178809119299399700,Mon Sep 30 23:09:29 +0000 2019,@orta Still feels like it could be solved in a build...  If you need access to variables, export them. ES module ex‚Ä¶ https://t.co/t5BQInPg4N
1178809119299399700,Mon Sep 30 23:09:29 +0000 2019,@orta Still feels like it could be solved in a build...  If you need access to variables, export them. ES module ex‚Ä¶ https://t.co/t5BQInPg4N
1178804767230836700,Mon Sep 30 22:52:12 +0000 2019,@orta couldn't you get the same benefits listed there by building a large file from many smaller ones?
1178804431543947300,Mon Sep 30 22:50:52 +0000 2019,RT @orta: He‚Äôs not wrong, that‚Äôs the whole whole type checker in a single file. Here‚Äôs my notes on it, https://t.co/3Osl8X9c8N  https://t.c‚Ä¶
1178804048100610000,Mon Sep 30 22:49:20 +0000 2019,@BenRuns AFAICT, it is not. üò¢
1178803258929774600,Mon Sep 30 22:46:12 +0000 2019,Just learned that the TypeScript type checker is all in one giant .ts file that is... wait for it... 33,836 lines l‚Ä¶ https://t.co/GAWZXvDd7T
1178728458320396300,Mon Sep 30 17:48:58 +0000 2019,@bradgarropy @tkadlec Nice! Is there a video of this?
1178677895369126000,Mon Sep 30 14:28:03 +0000 2019,Thanks for your help with the maintenance, @lovell! üòç  (Seriously, the best part of open source is when people offe‚Ä¶ https://t.co/U1xYjSsYWZ
1178676992952062000,Mon Sep 30 14:24:28 +0000 2019,RT @lovell: Need to safely parse untrusted EXIF metadata in JavaScript? The latest, security-hardened version 1.0.3 of the exif-reader modu‚Ä¶
1178331315097104400,Sun Sep 29 15:30:52 +0000 2019,How hard could it be to build your own text rendering stack? üòÇ https://t.co/7SIyFs6Fpc  Turns out, very hard. I lea‚Ä¶ https://t.co/5YUsEFSDXc
1177432040192364500,Fri Sep 27 03:57:28 +0000 2019,@left_pad The Parcel team has some ideas around making Babel more cacheable, esp to do with config files. Also pote‚Ä¶ https://t.co/Ga1SJSo9ZV
1177320645094281200,Thu Sep 26 20:34:50 +0000 2019,Wrote an RFC and PR for @babeljs to support babel.config.json for root configs in addition to babel.config.js.  Sta‚Ä¶ https://t.co/vcc4RarIvo
1176889948378546200,Wed Sep 25 16:03:23 +0000 2019,@lovell Sure! That would be very helpful. Thanks for the offer. Added you as a collaborator on github. üòç
1176513041556312000,Tue Sep 24 15:05:42 +0000 2019,RT @devongovett: HUGE thanks to @googlechrome for sponsoring Parcel‚Äôs work on differential bundling! üò≤  @addyosmani @stubbornella ‚ù§Ô∏è  We ju‚Ä¶
1176500545734856700,Tue Sep 24 14:16:03 +0000 2019,@capajj @RollupJS But yeah it should ‚Äújust work‚Äù for most libraries, including things like CSS. We compile the CSS‚Ä¶ https://t.co/Y9v0RIuAD3
1176499557351313400,Tue Sep 24 14:12:07 +0000 2019,@capajj @RollupJS We omit node_modules by default for library builds, but you can disable that or provide a whitelist.
1176223654499115000,Mon Sep 23 19:55:47 +0000 2019,@philwalton FYI https://t.co/jQhV8iycec
1176169412371464200,Mon Sep 23 16:20:14 +0000 2019,This should result in significantly reduced bundle sizes for ES module targets. No module runtime or bundle loader‚Ä¶ https://t.co/JZXWvUT3Fh
1176168419999137800,Mon Sep 23 16:16:18 +0000 2019,For browsers, we automatically take care of adjusting Babel transforms when we see an ES module target. And we incl‚Ä¶ https://t.co/jh7hUWLgXO
1176167768174973000,Mon Sep 23 16:13:42 +0000 2019,This PR also enables much improved library bundling support in Parcel. Just point your ‚Äúmain‚Äù and ‚Äúmodule‚Äù fields i‚Ä¶ https://t.co/K3prEBD0vm
1176165932655235000,Mon Sep 23 16:06:25 +0000 2019,HUGE thanks to @googlechrome for sponsoring Parcel‚Äôs work on differential bundling! üò≤  @addyosmani @stubbornella ‚ù§Ô∏è‚Ä¶ https://t.co/0kZwmt12it
1175894568182546400,Sun Sep 22 22:08:06 +0000 2019,@VZWSupport I did manage to get some help via phone support. Thanks.
1175850913166020600,Sun Sep 22 19:14:38 +0000 2019,Really bad iOS 13 bug: it restored 6.2 GB of music to my new phone over cellular data. My @verizon bill is going to‚Ä¶ https://t.co/hQVefh5P99
1175644253042729000,Sun Sep 22 05:33:26 +0000 2019,@aaronmeder Pro
1175505126557044700,Sat Sep 21 20:20:36 +0000 2019,RT @devongovett: iPhone 11 night mode is pretty insane! üò≤  Yes, those are actual stars in the sky. Crazy what‚Äôs possible to capture hand he‚Ä¶
1175460314160066600,Sat Sep 21 17:22:32 +0000 2019,@brian_d_vaughn Interesting. Yeah I noticed that when measuring. Didn‚Äôt realize it was only when docked. Doesn‚Äôt se‚Ä¶ https://t.co/z4b4C9O7xI
1175443888657453000,Sat Sep 21 16:17:16 +0000 2019,@brian_d_vaughn ReactDOM.flushSync seems to help quite a bit too. Learned about that from your code.  Haven't teste‚Ä¶ https://t.co/sHdHFT5Obs
1175443440907120600,Sat Sep 21 16:15:29 +0000 2019,@brian_d_vaughn Managed to get it working almost perfectly, even with 6x CPU throttling enabled in dev tools. I'm c‚Ä¶ https://t.co/rZP8fMnwzA
1175281886844706800,Sat Sep 21 05:33:32 +0000 2019,iPhone 11 night mode is pretty insane! üò≤  Yes, those are actual stars in the sky. Crazy what‚Äôs possible to capture‚Ä¶ https://t.co/aehTP3iabo
1175237944195465200,Sat Sep 21 02:38:55 +0000 2019,@seminioni Had an iPhone X before.
1175171144720085000,Fri Sep 20 22:13:29 +0000 2019,New phone time! üòÜ   Excited to try out the new camera. And I hear the battery life is much better too. https://t.co/tzndJRE6sn
1175132626601963500,Fri Sep 20 19:40:25 +0000 2019,Turns out there's a setting in Chrome to disable threaded scrolling, and it makes windowed scrolling muuuch smoothe‚Ä¶ https://t.co/jFrgpI8u6Y
1175121676255686700,Fri Sep 20 18:56:54 +0000 2019,@Runspired @brian_d_vaughn That's what display locking is supposed to solve: https://t.co/zVBpqad7rB
1175120783925923800,Fri Sep 20 18:53:22 +0000 2019,@brian_d_vaughn If I'm understanding correctly, with display lock you could theoretically pre-render a much larger‚Ä¶ https://t.co/PStt1FOIG8
1175117466374066200,Fri Sep 20 18:40:11 +0000 2019,@PierB The gif is slowed down quite a bit to illustrate the problem. In real life it's not nearly that bad, but it is quite noticeable.
1175116935073124400,Fri Sep 20 18:38:04 +0000 2019,@brian_d_vaughn Nice! The `hidden` attribute would already cause React to render at lower priority today right? Or‚Ä¶ https://t.co/W2qyXUWGpN
1175114314832732200,Fri Sep 20 18:27:39 +0000 2019,@Runspired Ah, that's a good idea. Gonna try it. Thanks!
1175113672412164000,Fri Sep 20 18:25:06 +0000 2019,@brian_d_vaughn Interesting. Would love to hear more about that when you're ready to share!
1175100377533804500,Fri Sep 20 17:32:16 +0000 2019,@maxharris9 Looks cool! I worked on a similar text layout engine here: https://t.co/qo8QBXYrcv. It's used by react-‚Ä¶ https://t.co/fnhrExDHKJ
1175097850591449000,Fri Sep 20 17:22:14 +0000 2019,@fregante It's a tradeoff between scroll perf and rendering a large amount to the DOM, which can take seconds for e‚Ä¶ https://t.co/6OixW01Dnr
1175094567273500700,Fri Sep 20 17:09:11 +0000 2019,Ideally there would be some way to tell the browser to fire scroll events synced to the frame rate rather than send‚Ä¶ https://t.co/SbzfbuCSCC
1175094566531125200,Fri Sep 20 17:09:11 +0000 2019,The only way I've found to get rid of lag completely is to reimplement scrolling from scratch using wheel and touch‚Ä¶ https://t.co/q9mBrV3ZPr
1175094565847437300,Fri Sep 20 17:09:11 +0000 2019,Many implementations try to counteract this by rendering some extra rows outside the visible area, which helps some‚Ä¶ https://t.co/WyKCxYrooD
1175094564362829800,Fri Sep 20 17:09:11 +0000 2019,Working on virtual scrolling/windowing again. Is there any modern way of getting scroll events that are synced with‚Ä¶ https://t.co/pMJPjQ1akO
1175071318833651700,Fri Sep 20 15:36:48 +0000 2019,@seldo @H4N4W4LT Congrats!
1174391111172808700,Wed Sep 18 18:33:54 +0000 2019,Gonna start handing out tickets for typography violations now üòÇ https://t.co/xpvP2cUhwS
1173715935330324500,Mon Sep 16 21:51:00 +0000 2019,It finally happened last week, and I forgot to tweet about it‚Ä¶  Thanks @adobe for sponsoring @parceljs! üôåüéâ https://t.co/cDkGVqZs9n
1173489275934920700,Mon Sep 16 06:50:20 +0000 2019,Scored a last minute ticket to Elton John‚Äôs goodbye tour tonight! Absolutely incredible.  @eltonofficial is a legen‚Ä¶ https://t.co/y1yFtT6TTK
1172322187220410400,Fri Sep 13 01:32:44 +0000 2019,@arcanis @github Yeah, with the visual editor you could start and read no documentation and actually build somethin‚Ä¶ https://t.co/ChPxVSKdA1
1172250801382789000,Thu Sep 12 20:49:05 +0000 2019,Did @github get rid of the visual editor for Github Actions? That was the best part! Now it's the same as every oth‚Ä¶ https://t.co/mizAfJwoRC
1171656861797499000,Wed Sep 11 05:28:58 +0000 2019,RT @nytimes: Breaking News: A new law in California will require Uber and Lyft to treat contract workers as employees. It may influence oth‚Ä¶
1170903602249924600,Mon Sep 09 03:35:47 +0000 2019,Postmates support says it's due to delivery staff being contractors, who can work for multiple delivery apps simult‚Ä¶ https://t.co/DAjgyQMvBO
1170903601637548000,Mon Sep 09 03:35:47 +0000 2019,The delivery guy didn‚Äôt even bother to go to my building, just parked in a side street and I had to go outside and‚Ä¶ https://t.co/7S00PNGnao
1170903601020993500,Mon Sep 09 03:35:47 +0000 2019,Just had the worst experience using @postmates that I‚Äôve ever had. My food was delivered 1.5 HOURS after I placed t‚Ä¶ https://t.co/8I2YAVvpf1
1170756047033651200,Sun Sep 08 17:49:27 +0000 2019,Just transferred the `browserify-zlib` package that I wrote many years ago to the @browserify org on Github!‚Ä¶ https://t.co/tNtAlpOe2z
1170528547942781000,Sun Sep 08 02:45:27 +0000 2019,@treerao Haha oh no ü§¶‚Äç‚ôÇÔ∏è
1170351342365184000,Sat Sep 07 15:01:18 +0000 2019,@AdamRackis @mjackson @parceljs Alpha!
1170349624311173000,Sat Sep 07 14:54:29 +0000 2019,@mjackson @parceljs No reason Parcel can‚Äôt be used to build libraries too! Especially v2. üôÇ
1170345053144830000,Sat Sep 07 14:36:19 +0000 2019,@mjackson Did you try @parceljs yet? I hear it‚Äôs pretty good. üòâ
1169485062649208800,Thu Sep 05 05:39:01 +0000 2019,RT @GarthDB: Design system engineering at a large company: https://t.co/TQPOhePwtx
1168915783336038400,Tue Sep 03 15:56:54 +0000 2019,Had a great time in NYC last week! Checked out the Adobe NYC offices, saw some Broadway shows, did lots of walking‚Ä¶ https://t.co/x83f01L4YA
1168907226733580300,Tue Sep 03 15:22:54 +0000 2019,@brian_d_vaughn Same dude. I mostly just end up working on side projects.
1168236600280715300,Sun Sep 01 18:58:04 +0000 2019,@JetBlue It's also broken on the website from a different computer.
1168236453660377000,Sun Sep 01 18:57:29 +0000 2019,@JetBlue Just tried and got the same result...
1168224081218560000,Sun Sep 01 18:08:20 +0000 2019,@JetBlue I‚Äôm having an issue checking into my flight. I get an error both in the iOS app and on the website. Tried‚Ä¶ https://t.co/qwfo4I1gSY
1167579290411688000,Fri Aug 30 23:26:10 +0000 2019,@GrawlCore @andrey_sitnik Import specifiers are urls, so query params are permissible according to the spec.
1167556382981312500,Fri Aug 30 21:55:08 +0000 2019,RT @devongovett: We're considering supporting query parameters to import specifiers in Parcel 2! This would allow importing different repre‚Ä¶
1167502906951635000,Fri Aug 30 18:22:38 +0000 2019,@GrawlCore @andrey_sitnik Trying not to! Query params are at least standard vs webpack's loader syntax. üòÄ
1167459509499060200,Fri Aug 30 15:30:12 +0000 2019,Note that this would only apply to ES module imports, and NOT CommonJS requires. ES module specifiers are URLs, whe‚Ä¶ https://t.co/pFmxfce4bT
1167459093923192800,Fri Aug 30 15:28:32 +0000 2019,We're considering supporting query parameters to import specifiers in Parcel 2! This would allow importing differen‚Ä¶ https://t.co/81szWA9cEQ
1167447317785526300,Fri Aug 30 14:41:45 +0000 2019,@jaffathecake Here's an RFC for querystring support in Parcel 2. Let us know if you have any feedback, or if it wou‚Ä¶ https://t.co/H6cr6fJdOI
1167071795708616700,Thu Aug 29 13:49:33 +0000 2019,Working with a view from the Adobe NYC office today. üò≤  In the city until Sunday. Anyone want to meet up? https://t.co/kVsE6QXIhg
1163843579661475800,Tue Aug 20 16:01:47 +0000 2019,@philwalton This is probably the closest, though it‚Äôs a bit broader. https://t.co/qlM1QiUuch
1163792519764877300,Tue Aug 20 12:38:53 +0000 2019,@philwalton We are planning to support module output by default in Parcel 2. You‚Äôll be able to use module/nomodule‚Ä¶ https://t.co/e1AcFliw5O
1163468681319518200,Mon Aug 19 15:12:04 +0000 2019,RT @ReactEurope: Our first speakers so far include @CompuIves, @shrutikapoor08, @devongovett and @timneutkens!  More cool news coming soon.
1162886518610026500,Sun Aug 18 00:38:46 +0000 2019,@partheseas Correct! TSX should be automatic now.
1161762126299406300,Wed Aug 14 22:10:50 +0000 2019,@roman01la Yeah that probably accounts for a lot of it. You could try a custom .parcelrc without Babel.
1161759920024240000,Wed Aug 14 22:02:04 +0000 2019,@roman01la Also what kind of optimization are you doing in the prod bundle? Parcel does tree shaking and minifying‚Ä¶ https://t.co/yMrNNM38pL
1161759312961630200,Wed Aug 14 21:59:39 +0000 2019,@roman01la Would be interesting to hear more about your project so we can optimize. Like what plugins you‚Äôre using, etc.
1161666810522960000,Wed Aug 14 15:52:05 +0000 2019,RT @devongovett: üö®üöÄ Parcel 2 alpha 1 is HERE! üéâüî•  Parcel 2 is a ground up rewrite that we've been working on for over a year, and I couldn'‚Ä¶
1161655028899168300,Wed Aug 14 15:05:16 +0000 2019,@faergeek Not yet but the infrastructure is there for it in the future.
1161486791213559800,Wed Aug 14 03:56:45 +0000 2019,@cactusanddove Oh it wants money? Huh? I didn‚Äôt see anything like that...
1161437106457075700,Wed Aug 14 00:39:19 +0000 2019,@MattMackay Not yet, but that's the goal. The cache has been designed to be distributed. We'll have an implementation of that in the future.
1161419065220427800,Tue Aug 13 23:27:37 +0000 2019,@flybayer https://t.co/i12c1cRn1w
1161410222641959000,Tue Aug 13 22:52:29 +0000 2019,@eclecticjohny @cktang_88 There's a TSC plugin for Parcel 2 if you wanna stick with it. At this point though, Babel‚Ä¶ https://t.co/aKbrwc8677
1161409796165083100,Tue Aug 13 22:50:48 +0000 2019,@cactusanddove can you not access it?
1161408331434451000,Tue Aug 13 22:44:58 +0000 2019,@cktang_88 Then it can be combined with other babel plugins, e.g. future syntax, preset-env for browserslist based compilation, etc.
1161394294856409000,Tue Aug 13 21:49:12 +0000 2019,@CasseyLottman https://t.co/EPpThSzHEV
1161394128107626500,Tue Aug 13 21:48:32 +0000 2019,@Syynth I think we'll probably support some kind of query parameters before the final release.
1161393990018592800,Tue Aug 13 21:47:59 +0000 2019,@CasseyLottman it's on the npm registry, yarn is just an installer.
1161391781327433700,Tue Aug 13 21:39:12 +0000 2019,@CasseyLottman It's mostly compatible out of the box. There are a few small differences that we'll document in more‚Ä¶ https://t.co/cB9ePEacIw
1161386896825573400,Tue Aug 13 21:19:48 +0000 2019,@Syynth webpack loader syntax is non-standard so we don't support it unfortunately.
1161380591847166000,Tue Aug 13 20:54:45 +0000 2019,Some other small details about Parcel 2:  üå≥ Tree shaking is turned on by default in production! üê† TypeScript is com‚Ä¶ https://t.co/p6LNCB9AVX
1161359411324960800,Tue Aug 13 19:30:35 +0000 2019,@programstinator The feature you‚Äôre quoting is to automatically do that. Externals are manually configured. They ar‚Ä¶ https://t.co/CDQ6CHarRD
1161355480356147200,Tue Aug 13 19:14:58 +0000 2019,@benedyktdryl And yes, Babel compiling typescript is the default in v2. There is also a plugin for type checking if‚Ä¶ https://t.co/ad4K37YEwX
1161355286960988200,Tue Aug 13 19:14:12 +0000 2019,@benedyktdryl On the large projects I've tried, I've seen a ~2x speedup on uncached builds due to workers. On cache‚Ä¶ https://t.co/ebdGYH0xPe
1161349917874348000,Tue Aug 13 18:52:51 +0000 2019,@phils_cents @parceljs I‚Äôm not sure what you‚Äôre referring to
1161347129236807700,Tue Aug 13 18:41:47 +0000 2019,@jaffathecake We will probably end up supporting querystrings before the final release. The asset reference syntax is too early.
1161342541121253400,Tue Aug 13 18:23:33 +0000 2019,@_developit @jaffathecake or ideally actual ES syntax. @sebmarkbage proposed https://t.co/fSOsnEC1Z5 which would solve this really nicely.
1161338632210243600,Tue Aug 13 18:08:01 +0000 2019,@kristoferbaxter yeah! For example, our dev server and HMR servers are reporters.
1161338005409263600,Tue Aug 13 18:05:31 +0000 2019,@jaffathecake Yeah. I‚Äôm wary of custom syntax in import specifiers though. It locks people into specific tools. For‚Ä¶ https://t.co/5abjphwjlb
1161333094114189300,Tue Aug 13 17:46:00 +0000 2019,@jaffathecake Sure, or a runtime plugin could do it at build time within Parcel.
1161332779688181800,Tue Aug 13 17:44:45 +0000 2019,@jaffathecake yep!
1161332742065279000,Tue Aug 13 17:44:36 +0000 2019,@jaffathecake Service workers so far, but ideally everything we can parse statically.  There isn‚Äôt really a standar‚Ä¶ https://t.co/hvLszEmpcS
1161331498743505000,Tue Aug 13 17:39:40 +0000 2019,@jaffathecake I think you could do that with a resolver plugin, which would resolve `consts:version` to a real location.
1161329840982638600,Tue Aug 13 17:33:05 +0000 2019,@jaffathecake Plugins can also call `asset.addURLDependency`, which will return an id that will be replaced automat‚Ä¶ https://t.co/5lY5748slb
1161329576338813000,Tue Aug 13 17:32:02 +0000 2019,@jaffathecake For workers specifically, you can just  new Worker(‚Äò./worker/index.js‚Äô);  and it will create a worker bundle automatically.
1161322121542246400,Tue Aug 13 17:02:24 +0000 2019,@pixelkritzel @github it‚Äôs a symlink‚Ä¶ not sure why github doesn‚Äôt render it
1161313976480751600,Tue Aug 13 16:30:02 +0000 2019,@arcanis there‚Äôs some basics in the post ^. The more detailed stuff is in the readme of v2: https://t.co/xHog8nqjTj
1161306667385905200,Tue Aug 13 16:01:00 +0000 2019,If you'd like to help us out by contributing, check out the "Parcel 2" label on Github for some good first issues.‚Ä¶ https://t.co/z5pe761kA1
1161306666555469800,Tue Aug 13 16:00:59 +0000 2019,This is an early alpha. There will be bugs, and not all features have been ported over yet.  Please try it out and‚Ä¶ https://t.co/4dK9AJP6C2
1161306665334931500,Tue Aug 13 16:00:59 +0000 2019,HUGE thanks to the core team, who have been working tirelessly to build Parcel 2! It would not have happened withou‚Ä¶ https://t.co/N7VHcygecj
1161306664617705500,Tue Aug 13 16:00:59 +0000 2019,Parcel 2 is fast! ‚ö°Ô∏è  We store the entire graph on disk when Parcel stops, and can restore it quickly when it start‚Ä¶ https://t.co/lOLncXAuQY
1161306662768009200,Tue Aug 13 16:00:59 +0000 2019,Parcel 2 supports multi-target builds. Just set them up in your package.json, and Parcel will build multiple versio‚Ä¶ https://t.co/Swv3JQRVPg
1161306658242347000,Tue Aug 13 16:00:58 +0000 2019,Parcel core is now incredibly small. Everything is a plugin! üîå  The default config includes everything from Parcel‚Ä¶ https://t.co/qlPTr5Sitc
1161306650872934400,Tue Aug 13 16:00:56 +0000 2019,üö®üöÄ Parcel 2 alpha 1 is HERE! üéâüî•  Parcel 2 is a ground up rewrite that we've been working on for over a year, and I‚Ä¶ https://t.co/EhPol2S3tN
1161306515812176000,Tue Aug 13 16:00:24 +0000 2019,RT @parceljs: üöÄ Parcel 2 alpha 1 is here! üéâ  It incorporates everything we‚Äôve learned building Parcel 1, and it‚Äôs far more:  üéõ Extensible‚Ä¶
1161138308329513000,Tue Aug 13 04:52:00 +0000 2019,So excited for tomorrow. üòÜ
1161060585951256600,Mon Aug 12 23:43:09 +0000 2019,@toptensoftware nice! actually that would be useful at some point. üòÄ
1160951236897542100,Mon Aug 12 16:28:38 +0000 2019,Big week! üòÜüò≤üòâ
1160936436012466200,Mon Aug 12 15:29:50 +0000 2019,@toptensoftware No problem, I‚Äôm glad it was helpful.
1160002839986393000,Sat Aug 10 01:40:03 +0000 2019,@brian_d_vaughn Yeah!
1159540121428885500,Thu Aug 08 19:01:22 +0000 2019,@_developit Agreed. Parcel supports tilde paths to reference the nearest package root (dir with package.json), e.g.‚Ä¶ https://t.co/xoyEpVTDA1
1158418237589037000,Mon Aug 05 16:43:24 +0000 2019,@dagda1 @SaukkonenVille @sebmarkbage See next tweet. Flow typed has support for converting TS type definitions now.
1158417160428851200,Mon Aug 05 16:39:08 +0000 2019,@ISbitnev @SaukkonenVille @kangax You need to disable the TS checking of JS files for the flow support to work prop‚Ä¶ https://t.co/mDD6vdpcIi
1158125789360971800,Sun Aug 04 21:21:19 +0000 2019,@swyx Seems like the perfect spot for a state machine üòâ
1158123681375121400,Sun Aug 04 21:12:57 +0000 2019,RT @SaukkonenVille: @devongovett 4. Flow team is very responsive in Discord: https://t.co/nWuwF8fRwA 5. Flow Typed has now an option to mak‚Ä¶
1158123663373136000,Sun Aug 04 21:12:52 +0000 2019,RT @SaukkonenVille: @devongovett I think there is a lot of outdated information about Flow: 1. Flow is not any slower than TS anymore, actu‚Ä¶
1158058140614549500,Sun Aug 04 16:52:31 +0000 2019,@SleepyDaddySoft @steida They are the default settings, so by definition you are opting in to strict mode, not out.‚Ä¶ https://t.co/o0XUhyVXud
1157380406724849700,Fri Aug 02 19:59:26 +0000 2019,@zenowwww I think they recently abstracted this in flow as well.
1157378337947304000,Fri Aug 02 19:51:13 +0000 2019,@zenowwww I agree in most cases but sometimes it‚Äôs nice for small things
1157358484926562300,Fri Aug 02 18:32:20 +0000 2019,@acutmore yeah and you still do need to do so for exported functions in flow, which is good for documentation purpo‚Ä¶ https://t.co/Ipsp3sGdKZ
1157356057913487400,Fri Aug 02 18:22:41 +0000 2019,@kingdaro_ yeah that's good e.g. for documentation of publicly exported functions. it's pretty nice for small utils though
1157355904552988700,Fri Aug 02 18:22:04 +0000 2019,@acutmore not really avoided, you still have to annotate it unlike flow.
1157298999566618600,Fri Aug 02 14:35:57 +0000 2019,@steida @kirillgroshkov I highly doubt that. What killed flow was poor community interaction, worse third party lib‚Ä¶ https://t.co/zLGng5w9LT
1157298660666835000,Fri Aug 02 14:34:36 +0000 2019,@steida What‚Äôs the next sentence of your tweet? ‚ÄúGet over it?‚Äù No, I don‚Äôt think I will. We don‚Äôt have to settle. T‚Ä¶ https://t.co/4KCPI1sNpi
1157297770509660200,Fri Aug 02 14:31:04 +0000 2019,@steida Still need an annotation, even with strict mode.
1157297692919255000,Fri Aug 02 14:30:46 +0000 2019,@steida Except it‚Äôs not the default, so I doubt it. The behavior in that tweet should not exist. It‚Äôs the type syst‚Ä¶ https://t.co/Kg4nTju3V8
1157251422590652400,Fri Aug 02 11:26:54 +0000 2019,@TitianCernicova I‚Äôm aware, but it‚Äôs also one of the most important. Null check bugs are some of the most common in‚Ä¶ https://t.co/S5csHEpFYR
1157250950899236900,Fri Aug 02 11:25:02 +0000 2019,@TitianCernicova No. Exported functions must have type annotations, and flow will error if you don‚Äôt. That‚Äôs good f‚Ä¶ https://t.co/mntDNiqqFJ
1157250532970389500,Fri Aug 02 11:23:22 +0000 2019,@ReasonableCoder @SeaRyanC @fwouts @code I‚Äôm sure it was. Should definitely be the default though. With flow you ca‚Ä¶ https://t.co/xVa36RrXZe
1157249681421824000,Fri Aug 02 11:19:59 +0000 2019,@ovidiubute I am aware of strict mode. It should be the default, and arguably, weak mode should not exist. It‚Äôs lit‚Ä¶ https://t.co/miEXQlPgzu
1157248958583857200,Fri Aug 02 11:17:07 +0000 2019,@kirillgroshkov Third is still applicable. Still required an annotation, where flow does not.
1157248716832563200,Fri Aug 02 11:16:09 +0000 2019,@Xopsy I think that‚Äôs unsafe because for in loops also loop over enumerable prototype properties. Flow can‚Äôt know t‚Ä¶ https://t.co/7VewyQQZ3f
1157131821370359800,Fri Aug 02 03:31:39 +0000 2019,@noderaider Yeah they haven‚Äôt been great at interacting with the community for sure. Seem mostly focused on FB usec‚Ä¶ https://t.co/Tuuag2cu7H
1157118598231388200,Fri Aug 02 02:39:06 +0000 2019,@SeaRyanC @fwouts Bump a major, turn it on by default. üòâ
1157117183987552300,Fri Aug 02 02:33:29 +0000 2019,@noderaider I don‚Äôt think that issue is really related to what you‚Äôre talking about. It‚Äôs about extending existing‚Ä¶ https://t.co/FOB6DD2T7t
1157116568184115200,Fri Aug 02 02:31:02 +0000 2019,@noderaider Point is it‚Äôs inconsistent. TS doesn‚Äôt allow extra properties in most places, but does some. Flow allow‚Ä¶ https://t.co/MOktxfXJyt
1157115371754680300,Fri Aug 02 02:26:17 +0000 2019,@noderaider Interfaces work the same way. It should error because there are extra properties on the object that aren‚Äôt allowed by Bar.
1157063771250024400,Thu Aug 01 23:01:14 +0000 2019,@fwouts There is a strict mode setting for it - you probably have it enabled. I'm arguing it should be the default.
1157056421722071000,Thu Aug 01 22:32:02 +0000 2019,@_rrdelaney Yeah the vs code language server support might still be experimental, but works pretty well for me.
1157055431870578700,Thu Aug 01 22:28:06 +0000 2019,@_rrdelaney I haven't had the performance problems people mention with flow. Maybe it's gotten better recently.  TS‚Ä¶ https://t.co/HCm4z3NRSa
1157053599165210600,Thu Aug 01 22:20:49 +0000 2019,@mileswjohnson Yeah the point with strict mode is that it shouldn't be a mode, but the default. The type system's j‚Ä¶ https://t.co/aZBbbS3wFH
1157051159648989200,Thu Aug 01 22:11:08 +0000 2019,@_rrdelaney Oh great, more annotations. Please just get this crazy syntax out of my code. üòú  Point here is that Flo‚Ä¶ https://t.co/VCEfWXHrMn
1157050755443904500,Thu Aug 01 22:09:31 +0000 2019,@_rrdelaney Third one would still require an annotation, even in strict mode. But I get the sentiment. I felt it wa‚Ä¶ https://t.co/hZzqeGlUwL
1157049916222369800,Thu Aug 01 22:06:11 +0000 2019,@spion Yeah I can see that. It could also be dangerous though. Unless you know to turn all of that extra stuff on,‚Ä¶ https://t.co/YA7LisPzuf
1157046284559122400,Thu Aug 01 21:51:45 +0000 2019,@spion Makes sense I guess. Kinda strange though.
1157046066094604300,Thu Aug 01 21:50:53 +0000 2019,@spion Yeah... I know. It just seems really strange that the default is not strict. Like... what does that even exi‚Ä¶ https://t.co/mlnwwdrzaN
1157045740285251600,Thu Aug 01 21:49:36 +0000 2019,@spion oh whoa, it has to be const though? so strange!
1157042847851278300,Thu Aug 01 21:38:06 +0000 2019,@mileswjohnson some examples in this thread: https://t.co/T69V3jffYG
1157042774572617700,Thu Aug 01 21:37:48 +0000 2019,@itsmadou some examples in this thread: https://t.co/T69V3jffYG
1157042460733743000,Thu Aug 01 21:36:34 +0000 2019,@7WP @85Alrahahleh see examples in this thread: https://t.co/T69V3jffYG
1157042281993519000,Thu Aug 01 21:35:51 +0000 2019,@pkelleter87 see thread: https://t.co/T69V3jffYG
1157040338160062500,Thu Aug 01 21:28:08 +0000 2019,@TypeS Posted some examples of where Flow is great compared to TS in this thread: https://t.co/T69V3jffYG
1157039755537731600,Thu Aug 01 21:25:49 +0000 2019,@brunolemos Tweeted some examples in this thread: https://t.co/T69V3jffYG
1157039469184180200,Thu Aug 01 21:24:40 +0000 2019,* The best technical solution doesn't always win. Sometimes, it's the things around it. Community, tool integration‚Ä¶ https://t.co/UaVcOO2uiF
1157039468118864000,Thu Aug 01 21:24:40 +0000 2019,Here are the overall takeaways:  * We don't need syntax noise in our code to get good type errors. The less we have‚Ä¶ https://t.co/uHrQSozYNe
1157039465245757400,Thu Aug 01 21:24:39 +0000 2019,String union types in TypeScript have very bad inference. In this example, destructuring with a default value requi‚Ä¶ https://t.co/f6C8V91xdG
1157039457037512700,Thu Aug 01 21:24:37 +0000 2019,TypeScript is inconsistent about allowing unknown properties in objects. It does not allow extra properties on obje‚Ä¶ https://t.co/BlNN4vBiTG
1157039449978445800,Thu Aug 01 21:24:36 +0000 2019,TypeScript's React support is also lacking. It does not correctly error based on element types, even with an annota‚Ä¶ https://t.co/TmaRQuDXWo
1157039444324577300,Thu Aug 01 21:24:34 +0000 2019,In TypeScript, untyped parameters have an implicit `any` type. In Flow, the type is inferred from the calls to that‚Ä¶ https://t.co/uFK6wMYtXn
1157039418231808000,Thu Aug 01 21:24:28 +0000 2019,The same example in Flow will error as expected. Flow has optional types as well, which allow null or undefined, bu‚Ä¶ https://t.co/rt4u1HhC2P
1157039412020052000,Thu Aug 01 21:24:27 +0000 2019,Everything in TS is nullable by default. Yes I know about `strictNullChecks`, but not checking for null is one of t‚Ä¶ https://t.co/yEH1oKcTRR
1157039408043815000,Thu Aug 01 21:24:26 +0000 2019,Here are some examples where Flow is great compared to TypeScript.  I was asked by many people after my tweet yeste‚Ä¶ https://t.co/VbGOnxowmZ
1156964698027253800,Thu Aug 01 16:27:34 +0000 2019,@JosuGoi1 @spion @felixfbecker Flow does exactly the same thing but without me writing any extra code. I don‚Äôt like‚Ä¶ https://t.co/yjnUNXJ0Eb
1156955160834220000,Thu Aug 01 15:49:40 +0000 2019,@dan_abramov That‚Äôs called TypeScript.
1156952030952353800,Thu Aug 01 15:37:13 +0000 2019,@sallar @ForbesLindesay I have not experienced this and use flow on some very large projects.
1156951313101410300,Thu Aug 01 15:34:22 +0000 2019,@kumarharsh @CallMeBerzerker @sseraphini @19emtuck @reasonml Flows TS language server support isn‚Äôt bad these days.
1156950715467591700,Thu Aug 01 15:32:00 +0000 2019,@swyx Yeah it could happen. They‚Äôd need to really step up their game outside the type system itself. Make a really‚Ä¶ https://t.co/uIHf2WD9em
1156948636313378800,Thu Aug 01 15:23:44 +0000 2019,@ForbesLindesay Exactly my point. They gained their popularity based on things around the type system rather than the type system itself.
1156947469265014800,Thu Aug 01 15:19:06 +0000 2019,@vict_shevchenko I don‚Äôt think it particularly matters...
1156947114892464000,Thu Aug 01 15:17:41 +0000 2019,@chris_07734 Both TS and flow are typed, so I think either would help there. I think TS won because they invested i‚Ä¶ https://t.co/oB1hNBOA3R
1156946648884375600,Thu Aug 01 15:15:50 +0000 2019,@spion @felixfbecker But look how much syntax you have to write. In flow, it would figure out that the object is a‚Ä¶ https://t.co/qIcAIFkLPt
1156945859231150000,Thu Aug 01 15:12:42 +0000 2019,@fregante @85Alrahahleh Yup, another example is with event targets. You have to cast to HTMLElement in a lot of cas‚Ä¶ https://t.co/X0uF8VrqJ3
1156945229099856000,Thu Aug 01 15:10:12 +0000 2019,@sompylasar @85Alrahahleh I‚Äôm literally talking about the type system just being dumb. Like, the information is alr‚Ä¶ https://t.co/PcjAqje0TD
1156761008943161300,Thu Aug 01 02:58:10 +0000 2019,@mileswjohnson Yeah it can be hard to tweet examples out of context. I‚Äôll try to make some tomorrow.
1156760902810534000,Thu Aug 01 02:57:45 +0000 2019,@edygarDeLima @michaelvillar I don‚Äôt think it‚Äôs been bad lately. Not many breaking changes if any. Upgrades have been easy.
1156759009803718700,Thu Aug 01 02:50:14 +0000 2019,@mileswjohnson I‚Äôm generally ok with that. Good for documentation. However, I‚Äôve found that I have needed to explic‚Ä¶ https://t.co/cZQlN5XYZM
1156748881167708200,Thu Aug 01 02:09:59 +0000 2019,@85Alrahahleh lol of course someone would tell me I‚Äôm doing it wrong. ü§¶‚Äç‚ôÇÔ∏è  My experience is that you can either ty‚Ä¶ https://t.co/3ZLBMdlkdk
1156712729727492000,Wed Jul 31 23:46:20 +0000 2019,@mileswjohnson disagree. so much unnecessary syntax in my code!
1156666785979965400,Wed Jul 31 20:43:46 +0000 2019,@michaelvillar I'm working with both on different projects right now, and found flow's inference and refinements va‚Ä¶ https://t.co/8NIXJdneOY
1156665968166232000,Wed Jul 31 20:40:31 +0000 2019,@felixfbecker Hard to tweet examples out of context, but we've come across a lot of situations where we need to ann‚Ä¶ https://t.co/ywSxhjjHZb
1156663316254564400,Wed Jul 31 20:29:59 +0000 2019,RT @devongovett: @robpalmer2 Yeah, I think it was due to everything around the type system itself. The community of types packages, better‚Ä¶
1156663022732972000,Wed Jul 31 20:28:49 +0000 2019,@GieselaarD @satya164 @sseraphini @19emtuck Yeah in VS code TS doesn't typecheck files you don't have open, which i‚Ä¶ https://t.co/3s2BUs4bwc
1156661914060988400,Wed Jul 31 20:24:24 +0000 2019,@arcanis @code_punkt @TypeS Yeah, totally. I think everything about TS is better, except the type system itself. Wi‚Ä¶ https://t.co/z8QOsg7Xlr
1156661507221930000,Wed Jul 31 20:22:47 +0000 2019,@satya164 @sseraphini @19emtuck Yeah just the actual type system is inferior and you have to write more silly synta‚Ä¶ https://t.co/unD7i9hX8H
1156661309502439400,Wed Jul 31 20:22:00 +0000 2019,@satya164 @sseraphini @19emtuck Yeah I don't disagree. Everything about TS aside from the actual type system is bet‚Ä¶ https://t.co/vrNjT3TYH9
1156661120976818200,Wed Jul 31 20:21:15 +0000 2019,@sseraphini @19emtuck @reasonml yeah I agree with this. everything around the type actual system was better in TS.‚Ä¶ https://t.co/JxvrqHwnhU
1156660725160403000,Wed Jul 31 20:19:41 +0000 2019,@robpalmer2 Yeah, I think it was due to everything around the type system itself. The community of types packages,‚Ä¶ https://t.co/mrgarcdKRm
1156660234292625400,Wed Jul 31 20:17:44 +0000 2019,@code_punkt @arcanis @TypeS Absolutely. Flow's type system was superior, but everything around it didn't move as fa‚Ä¶ https://t.co/4EWu8tcFSI
1156659772692680700,Wed Jul 31 20:15:54 +0000 2019,@sseraphini @19emtuck Why do you think TS has better DX? My tweet was about how it has an inferior DX...
1156659413765070800,Wed Jul 31 20:14:28 +0000 2019,I think one of the main reasons TS won was the @types ecosystem created by the community. Tons of popular JS librar‚Ä¶ https://t.co/TMtMPzcZFP
1156658983110754300,Wed Jul 31 20:12:45 +0000 2019,@arcanis Yeah we can discuss why TS got a bigger market share. One of the main reasons was the @types ecosystem IMO‚Ä¶ https://t.co/wBpv8VXJfx
1156657855937671200,Wed Jul 31 20:08:17 +0000 2019,Flow is so much better than TypeScript it‚Äôs crazy.  I‚Äôve used both on large projects, and the amount of type casts‚Ä¶ https://t.co/jxVPrJaR8h
1154842103890894800,Fri Jul 26 19:53:08 +0000 2019,@elijahmanor Just add 1000 more!
1154792932173439000,Fri Jul 26 16:37:44 +0000 2019,@cheeaun @parceljs @opencollect ‚ù§Ô∏è thank you so much!
1154614233918656500,Fri Jul 26 04:47:39 +0000 2019,@swyx That‚Äôs true, but it‚Äôs a lot more boilerplate for every modal. You‚Äôd need 2 render props for this - one for tr‚Ä¶ https://t.co/YhrqJTCKgc
1154545962188075000,Fri Jul 26 00:16:22 +0000 2019,@WrocTypeScript All of that should be possible with native CSS syntax as well. It's possible to generate TypeScript‚Ä¶ https://t.co/scc1AH5rJB
1154516116045099000,Thu Jul 25 22:17:46 +0000 2019,@evangoer yeah totally, e.g. &lt;List&gt; and &lt;ListItem&gt;. Problem is that as soon as someone wraps &lt;ListItem&gt; in a custom‚Ä¶ https://t.co/Oqsp83KTDX
1154514420543950800,Thu Jul 25 22:11:02 +0000 2019,@markdalgleish @Tibfib Many big companies are dropping ie11. The more sites that do so, the more people are forced‚Ä¶ https://t.co/wBzEwbXEdJ
1154513163481538600,Thu Jul 25 22:06:02 +0000 2019,@Tibfib @markdalgleish I‚Äôd encourage you to drop it or offer a more limited experience, eg no themes.
1154511227457925000,Thu Jul 25 21:58:21 +0000 2019,@markdalgleish I get why it's a separate file, but CSS is also a separate file with fewer footguns. For theming, CS‚Ä¶ https://t.co/pnkl2V4Vcw
1154486861001306000,Thu Jul 25 20:21:31 +0000 2019,@sincerely_tegan Totally. That's what I meant by being careful about it.
1154484056362328000,Thu Jul 25 20:10:22 +0000 2019,However, you have to be careful with this too, or those props will also end up at nested components as well. I real‚Ä¶ https://t.co/gped3W2bAv
1154484055586402300,Thu Jul 25 20:10:22 +0000 2019,A better solution might be to use context to pass the intended props through to the intended element. This ensures‚Ä¶ https://t.co/HS2RH5Nq03
1154484053648658400,Thu Jul 25 20:10:22 +0000 2019,A concrete example is a ModalTrigger component, which adds an `onClick` handler to a trigger element, and an `onClo‚Ä¶ https://t.co/YMZYxRdyCi
1154484049559187500,Thu Jul 25 20:10:21 +0000 2019,If someone wraps the intended element with their own component, they have to ensure that the props you add with `cl‚Ä¶ https://t.co/o5WsDXOXXM
1154484048787468300,Thu Jul 25 20:10:21 +0000 2019,Starting to think that `React.cloneElement` is an antipattern...  Adding props to an unknown element is dangerous!‚Ä¶ https://t.co/a2nqB2lqJH
1154458642994720800,Thu Jul 25 18:29:23 +0000 2019,Next in a long line of JS features CoffeeScript had in 2010. üòâ  Honestly I'm super excited about this! It was perha‚Ä¶ https://t.co/SHGD2rjT8o
1154453683217678300,Thu Jul 25 18:09:41 +0000 2019,RT @mohsen____: @devongovett The useStyle hook particularly dangerous because people can use props to override styles and break the static‚Ä¶
1154453613780951000,Thu Jul 25 18:09:24 +0000 2019,@mohsen____ Yup, exactly!
1154452720461287400,Thu Jul 25 18:05:51 +0000 2019,To me, CSS modules solves all of the same issues, but with native CSS syntax. You can easily get TS types and autoc‚Ä¶ https://t.co/6gopkFzjmE
1154451362911932400,Thu Jul 25 18:00:28 +0000 2019,@kylemathews CSS modules gets pretty close in VS code. It's pretty easy to automatically create TS definitions for‚Ä¶ https://t.co/XFZFuNxdtu
1154449559726067700,Thu Jul 25 17:53:18 +0000 2019,This is interesting, but I‚Äôm curious why the JS part if it has to be in a separate file from the rest of your JS an‚Ä¶ https://t.co/a3WVLaRTOZ
1154440606690660400,Thu Jul 25 17:17:43 +0000 2019,About to drop the next batch of @parceljs stickers in the mail! üíå  This is fun! Haven‚Äôt done this much hand writing‚Ä¶ https://t.co/3ysFOGexOI
1154179162464116700,Wed Jul 24 23:58:50 +0000 2019,@Jen_L_Gray hey Jen. I'm trying to track down who owned the Adobe Open Collective account, and someone mentioned th‚Ä¶ https://t.co/5T3iAXb76e
1153857827582042000,Wed Jul 24 02:41:58 +0000 2019,@bradgarropy @kentcdodds @Adobe @magento absolutely! send me a slack :)
1153851148530360300,Wed Jul 24 02:15:25 +0000 2019,@zachcodes @kentcdodds It's like enzyme's mount mode, but with an intentionally limited set of methods. e.g. no que‚Ä¶ https://t.co/JQMPgoIzKN
1153846132507680800,Wed Jul 24 01:55:30 +0000 2019,We are currently rewriting many of our components. Our strategy is to first convert the tests to run against both i‚Ä¶ https://t.co/vhWuhTUpKV
1153846131589173200,Wed Jul 24 01:55:29 +0000 2019,We just switched from Enzyme to React Testing Library for the Adobe design system, and I really like it so far. Bee‚Ä¶ https://t.co/TlJp74FAdv
1153702969247842300,Tue Jul 23 16:26:37 +0000 2019,RT @devongovett: Just landed a PR to @parceljs v2 which improves cached builds to insane speeds. ‚ö°Ô∏è  ~400ms from process start to build com‚Ä¶
1153435032976945200,Mon Jul 22 22:41:56 +0000 2019,@jorilallo @samccone @parceljs It has taken longer than we originally hoped, but we'd love to have a first alpha out very soon. üòÄ
1153434790789447700,Mon Jul 22 22:40:58 +0000 2019,@tbranyen @padmaia Yeah that's the goal!
1153425779209863200,Mon Jul 22 22:05:10 +0000 2019,Our new watcher also has a super fast way to detect file changes that occurred even while Parcel is not running.  T‚Ä¶ https://t.co/SpTcneHfJX
1153425778341625900,Mon Jul 22 22:05:09 +0000 2019,This is the result of some hard work the team has been doing for the last few months.  @padmaia built an asset grap‚Ä¶ https://t.co/w6nZ0MtMWU
1153425777288810500,Mon Jul 22 22:05:09 +0000 2019,Just landed a PR to @parceljs v2 which improves cached builds to insane speeds. ‚ö°Ô∏è  ~400ms from process start to bu‚Ä¶ https://t.co/B77HMOhRds
1153356521582944300,Mon Jul 22 17:29:57 +0000 2019,About to mail out the first batch of new @parceljs stickers! üì¨  Still have some left. DM your address if you want o‚Ä¶ https://t.co/YAq5KNOb4x
1153012522900869000,Sun Jul 21 18:43:02 +0000 2019,@dan_abramov @acdlite I think the syntax you were using might be compilable to generators today with sufficient typ‚Ä¶ https://t.co/Dd0c7WiZw5
1153011389130137600,Sun Jul 21 18:38:31 +0000 2019,@acdlite @dan_abramov Yeah but if we‚Äôre talking about adding this to JS, we‚Äôre talking about an untyped language. I‚Ä¶ https://t.co/eEn7pq5WnG
1153006684639387600,Sun Jul 21 18:19:50 +0000 2019,@dan_abramov The same could easily be true with the effect syntax you‚Äôre describing. It‚Äôs hard to know what has eff‚Ä¶ https://t.co/BFSwYLjCpm
1153005190498271200,Sun Jul 21 18:13:53 +0000 2019,@dan_abramov I think one of the issues with try/catch is unhandled exceptions. It‚Äôs impossible to know from reading‚Ä¶ https://t.co/848B3buaVW
1153004590859612200,Sun Jul 21 18:11:30 +0000 2019,@dan_abramov Nice post! I‚Äôm not sure that just using generators for this is the worst idea. Yeah it requires everyt‚Ä¶ https://t.co/aytK5EY0B3
1152630558574334000,Sat Jul 20 17:25:14 +0000 2019,@seldo 10 days. We stayed in Canmore and drove around Banff National Park and a bit of Yoho and Jasper from there.‚Ä¶ https://t.co/K159o3eTdA
1152627044020174800,Sat Jul 20 17:11:16 +0000 2019,@seldo just got back from there. it was amazing! https://t.co/ENcENb40hA
1152350580599164900,Fri Jul 19 22:52:42 +0000 2019,RT @devongovett: New roll of @parceljs stickers came today! Design matches our recent t-shirts. üéâ  DM me your address if you want one! üì¨  (‚Ä¶
1152255514912256000,Fri Jul 19 16:34:57 +0000 2019,@mikesherov https://t.co/cr5x80Zlft
1152253614619889700,Fri Jul 19 16:27:24 +0000 2019,@quinnirill The contents of the registry is npm‚Äôs main value. As long as they have most of the packages, many peopl‚Ä¶ https://t.co/gbUbhWLURG
1152253255914647600,Fri Jul 19 16:25:58 +0000 2019,@mjackson @robpalmer2 Yeah exactly. Making Github and npm more integrated is a win all around. If it happens to be‚Ä¶ https://t.co/OF1W6dmtyh
1152252529142485000,Fri Jul 19 16:23:05 +0000 2019,@cheeaun @parceljs Feel free to send a donation! üòâ
1152000976133341200,Thu Jul 18 23:43:30 +0000 2019,New roll of @parceljs stickers came today! Design matches our recent t-shirts. üéâ  DM me your address if you want on‚Ä¶ https://t.co/fRgikRFv8u
1151965643421282300,Thu Jul 18 21:23:06 +0000 2019,I think the beginning of the end was when they brought in a "professional" to be CEO, 6 months ago.  https://t.co/Qw1iFAlMka
1151965504044535800,Thu Jul 18 21:22:33 +0000 2019,As far as I can tell, most of the team that was working on the CLI has left the company and the founder is now dire‚Ä¶ https://t.co/QJzSEUPbtS
1151963188847509500,Thu Jul 18 21:13:21 +0000 2019,At this point, I'm counting down the days until npm is acquired by Microsoft and integrated into Github... ‚è≤Ô∏è  https://t.co/JkcSunfrbI
1150882551206043600,Mon Jul 15 21:39:17 +0000 2019,@NicoloRibaudo @sebmck Awesome, I'll check it out!
1150881291799167000,Mon Jul 15 21:34:16 +0000 2019,@sebmck hmm we use location information from babel's AST, and babel-code-frame for the formatting... should be the‚Ä¶ https://t.co/kO8Jm4dP2M
1150857183908597800,Mon Jul 15 19:58:29 +0000 2019,Spent a week on vacation in Banff National Park, Alberta exploring lakes, woods, and mountains. Totally turned off‚Ä¶ https://t.co/RmTNOJpgrm
1150850235893084200,Mon Jul 15 19:30:52 +0000 2019,@TheLarkInn @sebmarkbage Oh for sure. Haydn wrote over 100 symphonies. I think Bach had something like 1200 works,‚Ä¶ https://t.co/UqkNI0EjvV
1150849105976942600,Mon Jul 15 19:26:23 +0000 2019,@TheLarkInn @sebmarkbage Dude, Telemann. He wrote over 3000 works. üòÆ https://t.co/9HYI737zn9
1150570157871259600,Mon Jul 15 00:57:56 +0000 2019,@sebmck Interesting. Do you traverse the whole fs on startup to create that in memory representation?
1150531105398722600,Sun Jul 14 22:22:46 +0000 2019,@sebmck Yeah making file extensions mandatory is pretty great for performance. I once profiled parcel on a pretty l‚Ä¶ https://t.co/8jeOSY1i9G
1145171406625345500,Sun Jun 30 03:25:14 +0000 2019,@ken_wheeler https://t.co/jKg55dFLkn
1144125007250935800,Thu Jun 27 06:07:13 +0000 2019,@stroughtonsmith Probably not practical in the short term without much expanded underlying browser APIs, e.g. DOM a‚Ä¶ https://t.co/NkEyi8UNYg
1143681340505612300,Wed Jun 26 00:44:14 +0000 2019,@tomdale @robpalmer2 @humphd @mathias interesting, thanks!
1143650928144212000,Tue Jun 25 22:43:23 +0000 2019,@mathias Interesting. We found that parsing large ASTs serialized to JSON (e.g. disk cache in Parcel) was faster us‚Ä¶ https://t.co/htt4aQC1ad
1143630382765490200,Tue Jun 25 21:21:45 +0000 2019,@ckknight @mjackson If you don't write any flow annotations at all, flow can still infer all of the types in a plai‚Ä¶ https://t.co/hK1cYpraJr
1143001390391840800,Mon Jun 24 03:42:22 +0000 2019,@mjackson So‚Ä¶ flow?
1142604868227440600,Sun Jun 23 01:26:43 +0000 2019,@sebmck I found out recently that TS types are nullable by default unless you enable the `strictNullChecks` option.‚Ä¶ https://t.co/Fdm5fme8Pf
1142100408174698500,Fri Jun 21 16:02:11 +0000 2019,@sebmck Sometimes also to help people migrate from other tools
1141964119014174700,Fri Jun 21 07:00:37 +0000 2019,RT @devongovett: Help us fully fund the @parceljs core team! Thanks to a new @opencollect feature, you can now sponsor @JasperDeMoor and @m‚Ä¶
1141887582978003000,Fri Jun 21 01:56:29 +0000 2019,RT @Rich_Harris: https://t.co/g3X3XMrmRz
1141795398899531800,Thu Jun 20 19:50:11 +0000 2019,@sebmck Yeah flow‚Äôs errors are much nicer
1141791529616339000,Thu Jun 20 19:34:48 +0000 2019,RT @xdamman: Some backstory might be required here (thread) https://t.co/UnE2jCrKSU
1141791473525874700,Thu Jun 20 19:34:35 +0000 2019,RT @piamancini: BOOM: New feature is out in stealth mode. It allows you to sponsor a core maintainer‚Äôs work on @parceljs directly! Help fun‚Ä¶
1141763792696516600,Thu Jun 20 17:44:35 +0000 2019,Help us fully fund the @parceljs core team! Thanks to a new @opencollect feature, you can now sponsor @JasperDeMoor‚Ä¶ https://t.co/YmagqroWGj
1141603239302840300,Thu Jun 20 07:06:36 +0000 2019,@trueadm @acdlite @necolas Right but it‚Äôs explicit about which elements you‚Äôre listening for events on. The hooks A‚Ä¶ https://t.co/igjhuDcbam
1141555956561535000,Thu Jun 20 03:58:43 +0000 2019,@acdlite @trueadm @necolas This API feels a bit backwards to me. Data is now flowing up the tree as well as down. N‚Ä¶ https://t.co/VQz9SVSSoH
1141227827083087900,Wed Jun 19 06:14:51 +0000 2019,@ryanflorence That place is great
1140844600141086700,Tue Jun 18 04:52:03 +0000 2019,I wrote a very early tutorial on building a real-time Twitter client with Node 0.1 back in 2010. Crazy! Wonder if t‚Ä¶ https://t.co/h9iHHgEdv4
1140498514876620800,Mon Jun 17 05:56:50 +0000 2019,@probablyup The names might need some work - I'm not sure it makes sense to map them directly. Events are momentary‚Ä¶ https://t.co/sHE9eDiZ2r
1140497779912953900,Mon Jun 17 05:53:54 +0000 2019,@robcresswell Both mobile and desktop behave the same way, except the trick to remove :active styles when the point‚Ä¶ https://t.co/FUgyqsT2Pp
1140494719694204900,Mon Jun 17 05:41:45 +0000 2019,@robcresswell Actually, this behavior is also present on desktop. :active applies as long as your finger/mouse is d‚Ä¶ https://t.co/73fawvEkGh
1140492047809257500,Mon Jun 17 05:31:08 +0000 2019,Is it actually impossible to correctly style a touchable button in pure CSS? :active doesn't work correctly.  Nativ‚Ä¶ https://t.co/xJnn8Ox3T0
1140478015777804300,Mon Jun 17 04:35:22 +0000 2019,@mjackson Nice, I'd be into that.
1140475306177790000,Mon Jun 17 04:24:36 +0000 2019,@mjackson What about decentralized? Why do we need a registry at all? I'm liking the way deno works more and more l‚Ä¶ https://t.co/CGPkq9SWlj
1140310248130936800,Sun Jun 16 17:28:43 +0000 2019,@rauchg That was a great post. I remember where I was when I first read it. üëç
1140307528766521300,Sun Jun 16 17:17:55 +0000 2019,@dan_abramov That‚Äôs exactly how @parceljs started. üòâ  I didn‚Äôt go off with the aim of writing a bundler just for fu‚Ä¶ https://t.co/YkCxCDeU6n
1140068026860990500,Sun Jun 16 01:26:13 +0000 2019,RT @dan_abramov: Excited about potential of @devongovett‚Äôs work in RFC and proof of concept for new React focus management primitives (in c‚Ä¶
1140016097904586800,Sat Jun 15 21:59:52 +0000 2019,I use the Twitter PWA on macOS, and it‚Äôs great! Even has notification badges in the dock. Feels like a real app. ‚ù§Ô∏è‚Ä¶ https://t.co/RWlc1WubUP
1139976834529894400,Sat Jun 15 19:23:51 +0000 2019,@natebirdman @souporserious Sounds neat! I‚Äôll check it out later (docs website doesn‚Äôt work on mobile).
1139967525259632600,Sat Jun 15 18:46:52 +0000 2019,@jacobrask Yeah I was thinking a native vscode panel for switching between stories, and maybe auto switching based‚Ä¶ https://t.co/i9XrovULdq
1139964898752905200,Sat Jun 15 18:36:26 +0000 2019,Has anyone made a VSCode extension to view storybook stories (or similar) alongside your code? SwiftUI style. Would‚Ä¶ https://t.co/fji9figzK2
1139957929392480300,Sat Jun 15 18:08:44 +0000 2019,We need to stop reinventing the wheel as an industry. Reusable UI frameworks =&gt; better productivity =&gt; better UX. https://t.co/7EfCnX02HQ
1139957062626992100,Sat Jun 15 18:05:17 +0000 2019,@ryanflorence The power of rich UI frameworks. Most web devs have to build the entire UI from scratch, including th‚Ä¶ https://t.co/EPVgrG1hbs
1139948131917766700,Sat Jun 15 17:29:48 +0000 2019,@daringfireball Dropbox Paper is amazing though. Way better UX than Google Docs. Lots of unique features like markd‚Ä¶ https://t.co/gnMvRqzPlJ
1139551553063231500,Fri Jun 14 15:13:56 +0000 2019,Thanks everyone! https://t.co/wYFZDksuUc
1139550342117351400,Fri Jun 14 15:09:08 +0000 2019,How did this discussion of microfrontends start? I missed the impetus - just suddenly everyone is arguing about them. ü§î
1139546683417587700,Fri Jun 14 14:54:35 +0000 2019,@dan_abramov It can be dangerous to nest them though. I remember adding React to a jQuery app back in the day, and‚Ä¶ https://t.co/42gbxSIOCP
1139002577171898400,Thu Jun 13 02:52:30 +0000 2019,@oriSomething What do you mean by zombie files?
1139002527008010200,Thu Jun 13 02:52:18 +0000 2019,@SteveByerly Ah I didn‚Äôt realize vs code worked this way. Seems pretty unintuitive.
1138996141326913500,Thu Jun 13 02:26:56 +0000 2019,Next they‚Äôll be generating SwiftUI views from HTML and will have recreated the browser üòú https://t.co/gMcM9icEnq
1138988931964330000,Thu Jun 13 01:58:17 +0000 2019,@EliGundry What do you use instead? Text editor without TS plugin?
1138988523791347700,Thu Jun 13 01:56:40 +0000 2019,@sebmck @AdamRackis Right, we‚Äôre really starting to hit the boundaries of these terms. At this point, I‚Äôm not sure‚Ä¶ https://t.co/DMV31jtjJd
1138986220237680600,Thu Jun 13 01:47:30 +0000 2019,@AdamRackis @sebmck What about tests? Should a bundler run them for you too? Tests are another form of code checkin‚Ä¶ https://t.co/tHMDH1aidn
1138981531500798000,Thu Jun 13 01:28:53 +0000 2019,@sebmck yeah editor not being configured when contributing to someone else's project is a fair point
1138979885907468300,Thu Jun 13 01:22:20 +0000 2019,@sebmck i.e see errors in both editor AND terminal/browser console? But maybe not block the build so you can hack a‚Ä¶ https://t.co/J3qyhnALQg
1138974258791473200,Thu Jun 13 00:59:59 +0000 2019,@minieggs40 but you already have to have a tsconfig.json for your IDE, so you're already halfway there. Not really‚Ä¶ https://t.co/StlxPHlXkg
1138973200119808000,Thu Jun 13 00:55:46 +0000 2019,@tolmasky Yeah I guess so... In this case they also need to setup a tsconfig.json in order to get their editor work‚Ä¶ https://t.co/KcxsEihFtj
1138972198343827500,Thu Jun 13 00:51:47 +0000 2019,We're having a hard time justifying supporting type checking/linting in Parcel 2. It feels out of scope. I know it'‚Ä¶ https://t.co/O7H5fnR0HU
1138971648378302500,Thu Jun 13 00:49:36 +0000 2019,If you use a build tool that includes type checking along with bundling (e.g. webpack + ts-loader without transpile‚Ä¶ https://t.co/hbPkHvQwan
1138909437794562000,Wed Jun 12 20:42:24 +0000 2019,@Rich_Harris @mjackson @TheLarkInn @kristoferbaxter @adamdbradley @_developit They recently added chatroom like fun‚Ä¶ https://t.co/8zJ8ndOt66
1138875659915124700,Wed Jun 12 18:28:11 +0000 2019,@Rich_Harris @mjackson @TheLarkInn @kristoferbaxter @adamdbradley @_developit https://t.co/77cctr05lV
1138871448519319600,Wed Jun 12 18:11:27 +0000 2019,@Rich_Harris @TheLarkInn @adamdbradley @_developit Sure. The point here is just that it's easy to defeat optimizati‚Ä¶ https://t.co/xwsSlMwIdz
1138869876229955600,Wed Jun 12 18:05:12 +0000 2019,@Rich_Harris @TheLarkInn @adamdbradley @_developit That definitely shouldn't be an antipattern. There are lots of l‚Ä¶ https://t.co/f9QftVxzGj
1138868093097091100,Wed Jun 12 17:58:07 +0000 2019,@kristoferbaxter @adamdbradley @_developit @Rich_Harris @TheLarkInn happy to give access to the repo to anyone who wants to work on it
1138866406831714300,Wed Jun 12 17:51:25 +0000 2019,@Rich_Harris @TheLarkInn @adamdbradley @_developit Ok, I'll simplify it. The function isn't even necessary. I don't‚Ä¶ https://t.co/x2puKumn2g
1138866133195296800,Wed Jun 12 17:50:19 +0000 2019,@kristoferbaxter @adamdbradley @_developit @Rich_Harris @TheLarkInn Heh - revive https://t.co/NYfxZL7IPS? üòâ
1138865597221965800,Wed Jun 12 17:48:12 +0000 2019,@adamdbradley @Rich_Harris @TheLarkInn @_developit I don't think this is a CommonJS vs ESM problem. I think this is‚Ä¶ https://t.co/cRSRLPbvs1
1138864809133297700,Wed Jun 12 17:45:04 +0000 2019,@Rich_Harris @TheLarkInn @adamdbradley @_developit Same types of things can be done in ESM though. Rollup doesn't t‚Ä¶ https://t.co/8ztbe9bZ3D
1138859477262688300,Wed Jun 12 17:23:53 +0000 2019,@TheLarkInn @Rich_Harris @adamdbradley @_developit Yeah we handle all of those cases. We do sometimes have to bail‚Ä¶ https://t.co/GY2GJQBrEW
1138854591494123500,Wed Jun 12 17:04:28 +0000 2019,@TheLarkInn @Rich_Harris @adamdbradley @_developit It's just JS, same as ESM. Yeah you can have dynamic requires, b‚Ä¶ https://t.co/bL9F8nN4NO
1138853519291588600,Wed Jun 12 17:00:12 +0000 2019,@Rich_Harris @adamdbradley @TheLarkInn @_developit Also not sure what you mean by not fully reliable.
1138853108522528800,Wed Jun 12 16:58:34 +0000 2019,@Rich_Harris @adamdbradley @TheLarkInn @_developit Meh, seems unrealistic for a long time and I don't really see th‚Ä¶ https://t.co/A1mvW8HuBU
1138852034319269900,Wed Jun 12 16:54:18 +0000 2019,@adamdbradley @TheLarkInn @Rich_Harris @_developit Parcel supports treeshaking CommonJS. It‚Äôs a common misconceptio‚Ä¶ https://t.co/2ngXLoGgLN
1138655587959361500,Wed Jun 12 03:53:42 +0000 2019,@lazdnet @thekitze Haha nope! I think not a lot of people know about that spot.
1138639676103774200,Wed Jun 12 02:50:28 +0000 2019,@thekitze Pro tip: Go to montparnasse tower for a look the other way üòâ https://t.co/2vcOE7EuOr
1138132644154134500,Mon Jun 10 17:15:42 +0000 2019,Made my first React core PR, wherein I take a first pass at implementing an experimental FocusManager API, based on‚Ä¶ https://t.co/xmpqjrdgAO
1137834250101641200,Sun Jun 09 21:29:59 +0000 2019,@sebmck I've definitely been in situations where I'm constantly  telling people ‚Äúit‚Äôs not done yet‚Äù, but not really‚Ä¶ https://t.co/eGf0SJB0KS
1137834021642129400,Sun Jun 09 21:29:05 +0000 2019,@sebmck I think you should generally release when you are ready to open the floodgates to feedback both positive an‚Ä¶ https://t.co/26hKrSdqdQ
1137827084129058800,Sun Jun 09 21:01:31 +0000 2019,@drewtoddsby Yup, it worked on Node 10. I was using Node 12. Thanks for the tip!
1137825014307123200,Sun Jun 09 20:53:17 +0000 2019,@sebmarkbage @dan_abramov Ah ok, it worked on Node 10. I was using Node 12 when I got the error.
1137794402087186400,Sun Jun 09 18:51:39 +0000 2019,@AndaristRake Yeah it‚Äôs weird. I just cloned today and looks like CI is passing...
1137789770682159100,Sun Jun 09 18:33:15 +0000 2019,@v1rtl @_developit @parceljs @preactjs @RollupJS Hmm what does rollup do for you in terms of code splitting that parcel doesn‚Äôt?
1137785298094395400,Sun Jun 09 18:15:28 +0000 2019,Anyone have experience getting React to build from master? I‚Äôm getting errors‚Ä¶ Can‚Äôt tell if it‚Äôs something I‚Äôm doi‚Ä¶ https://t.co/YNOFYDaMWr
1137534161986641900,Sun Jun 09 01:37:33 +0000 2019,@chockenberry @gruber @stroughtonsmith Seems like the web is the actual obvious choice - it already renders on all of those platforms. üòâ
1137421880019677200,Sat Jun 08 18:11:23 +0000 2019,@_developit @drewtoddsby @parceljs TBH I haven‚Äôt done a lot of research into http2 but I‚Äôd love to see an http2 awa‚Ä¶ https://t.co/kjeVND7HVG
1137421360953565200,Sat Jun 08 18:09:19 +0000 2019,@_developit @drewtoddsby @parceljs Yeah. Parcel 2 has the idea of bundle groups, which are groups of bundles that m‚Ä¶ https://t.co/HAqujsrz2v
1137420618494644200,Sat Jun 08 18:06:22 +0000 2019,@_developit @drewtoddsby @parceljs Yep totally. In a prod app I was helping with at Adobe, the number of bundles we‚Ä¶ https://t.co/ObZXjUEKTd
1137419546757697500,Sat Jun 08 18:02:06 +0000 2019,@_developit @drewtoddsby @parceljs Sure. That would work. But bundler plugins in Parcel 2 don‚Äôt rely on import() ne‚Ä¶ https://t.co/a01tGGg83E
1137419264917291000,Sat Jun 08 18:00:59 +0000 2019,@_developit @drewtoddsby @parceljs We detect duplicated assets across bundles (eg react and other common deps), and‚Ä¶ https://t.co/vqkRJdljBE
1137419185670115300,Sat Jun 08 18:00:40 +0000 2019,@_developit @drewtoddsby @parceljs The default bundler plugin will be pretty smart already though. We have manual i‚Ä¶ https://t.co/nDvbGV9Ra7
1137418427532959700,Sat Jun 08 17:57:39 +0000 2019,@_developit @drewtoddsby @parceljs I don‚Äôt think it‚Äôs quite as automatic as you‚Äôre thinking yet. Still requires imp‚Ä¶ https://t.co/rSq1NVv1Jc
1136835788354646000,Fri Jun 07 03:22:27 +0000 2019,@ryanflorence @trueadm @ArrowoodTech @DavidKPiano Btw, if you want to read about some of the issues with using posi‚Ä¶ https://t.co/z52A3w1e7S
1136676817522135000,Thu Jun 06 16:50:46 +0000 2019,RT @devongovett: Currently building an internationalized and accessible date picker component in React with Hooks. Things are so much bette‚Ä¶
1136641995726680000,Thu Jun 06 14:32:24 +0000 2019,@tobie Actually, it is. &lt;input type=‚Äúdate‚Äù&gt; has a very similar UI to this is some browsers, but unfortunately since‚Ä¶ https://t.co/BGmBKzjSbR
1136641157620854800,Thu Jun 06 14:29:04 +0000 2019,@robknight_ Yeah definitely doing that too. Good tip.
1136452620279722000,Thu Jun 06 01:59:53 +0000 2019,@Foocux Not yet but soon üòâ
1136410383097319400,Wed Jun 05 23:12:03 +0000 2019,RT @devongovett: Some recommendations in case you ever have to build a date picker:  1. Assume nothing about the date format or the calenda‚Ä¶
1136402645059493900,Wed Jun 05 22:41:18 +0000 2019,5. Support displaying a calendar in a popover for more of a browsing experience, but don't make it required. Enteri‚Ä¶ https://t.co/JoSXFEyhMt
1136402644212125700,Wed Jun 05 22:41:18 +0000 2019,4. Automatically advance the user to the next segment when no more digits can be entered in the current segment. Th‚Ä¶ https://t.co/MB0kwMbadq
1136402643146817500,Wed Jun 05 22:41:18 +0000 2019,3. In addition to entering numbers, enable the up and down arrow keys to increment and decrement each date segment.‚Ä¶ https://t.co/6HgRUt5gKU
1136402640886042600,Wed Jun 05 22:41:17 +0000 2019,2. Don't try to parse user input dates from a text field - it's impossible to internationalize correctly. Instead,‚Ä¶ https://t.co/agHSXU1ztX
1136402637761368000,Wed Jun 05 22:41:16 +0000 2019,Some recommendations in case you ever have to build a date picker:  1. Assume nothing about the date format or the‚Ä¶ https://t.co/QI9gnXZtFn
1136402636754673700,Wed Jun 05 22:41:16 +0000 2019,Currently building an internationalized and accessible date picker component in React with Hooks. Things are so muc‚Ä¶ https://t.co/Y5eO1Hs7Ov
1136297166488592400,Wed Jun 05 15:42:10 +0000 2019,RT @sebmck: @ljharb @BenLesh Yup, @parceljs supports tree shaking CJS
1135946373151375400,Tue Jun 04 16:28:14 +0000 2019,@JosuGoi1 But... why? We already have div. not having higher level primitives than that is the problem.
1135933000875569200,Tue Jun 04 15:35:06 +0000 2019,In particular, their APIs for handling virtualized lists and navigation controllers look super simple to use:‚Ä¶ https://t.co/dxu2wfYPWb
1135932998715449300,Tue Jun 04 15:35:06 +0000 2019,Apple‚Äôs SwiftUI looks really cool! It‚Äôs like they took the best ideas from React, CSS layout, HMR, Storybook, Frame‚Ä¶ https://t.co/XkU56PiRJD
1135747347944575000,Tue Jun 04 03:17:23 +0000 2019,@ken_wheeler Doesn‚Äôt seem like that much of a stretch anymore with the security model and portability of web assembly‚Ä¶
1135739961662103600,Tue Jun 04 02:48:02 +0000 2019,Finally got to write some code at work today, after ~5 months of mostly writing documents, and it feels great! üòç
1135241398909694000,Sun Jun 02 17:46:55 +0000 2019,RT @remyguercio: @devongovett @sevki did exactly that with a React PWA!  https://t.co/g6u4bBwv35
1135240740982759400,Sun Jun 02 17:44:19 +0000 2019,@remyguercio @sevki Awesome!
1135233711870341100,Sun Jun 02 17:16:23 +0000 2019,Another cool thing about Cloudflare Workers is that the API is based on the Service Worker API from browsers. Seems‚Ä¶ https://t.co/ekDJmNRJbL
1135231069194559500,Sun Jun 02 17:05:53 +0000 2019,@kylemathews https://t.co/gS7YW4AmLU
1135229331775508500,Sun Jun 02 16:58:58 +0000 2019,@mjackson *timeline
1135229022495887400,Sun Jun 02 16:57:45 +0000 2019,@mjackson I‚Äôve seen a bunch of random tweets in my time,one from people that lost twitter data today‚Ä¶ Followers, li‚Ä¶ https://t.co/wJZbwrrxeo
1135228521834459100,Sun Jun 02 16:55:45 +0000 2019,Oh yeah, and also they‚Äôre super cheap. 100,000 requests per day for free! üí∞
1135228074897711100,Sun Jun 02 16:53:59 +0000 2019,Cloudflare workers look awesome! They run as v8 Isolates instead of VMs or containers, so are super fast to start u‚Ä¶ https://t.co/CwdSfAmaIh
1135222121112657900,Sun Jun 02 16:30:19 +0000 2019,RT @kosamari: I made a zine on passive event listeners üìñ   Take one at @jsconfeu Chrome booth or find me around the venue‚ú®  (You get to kno‚Ä¶
1134267906756292600,Fri May 31 01:18:37 +0000 2019,@mbleigh @parceljs ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è
1134253490744619000,Fri May 31 00:21:20 +0000 2019,@tolmasky @_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron‚Ä¶ https://t.co/TKCwOblFVe
1134253173332332500,Fri May 31 00:20:04 +0000 2019,@tolmasky @_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron‚Ä¶ https://t.co/72vu7LU8D3
1134248277522518000,Fri May 31 00:00:37 +0000 2019,@tolmasky @_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron‚Ä¶ https://t.co/pPugzQpwv8
1134246036682055700,Thu May 30 23:51:43 +0000 2019,@_developit @tolmasky @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron @hdjirdeh also JSX
1134243931502202900,Thu May 30 23:43:21 +0000 2019,@tolmasky @_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron‚Ä¶ https://t.co/ypVmCR5Z7l
1134243495701409800,Thu May 30 23:41:37 +0000 2019,@tolmasky @_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron‚Ä¶ https://t.co/0KqNU4dZE4
1134242711957979100,Thu May 30 23:38:30 +0000 2019,@tolmasky @_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron‚Ä¶ https://t.co/vdeDtkYWq9
1134242169055719400,Thu May 30 23:36:20 +0000 2019,@tolmasky @_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron‚Ä¶ https://t.co/fvx6CZ9cEz
1134241773495021600,Thu May 30 23:34:46 +0000 2019,@tolmasky @_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron‚Ä¶ https://t.co/gbos6a7TZW
1134238987437002800,Thu May 30 23:23:42 +0000 2019,@tolmasky @_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron‚Ä¶ https://t.co/Azxo6jZGrP
1134234085381906400,Thu May 30 23:04:13 +0000 2019,@_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron @hdjirdeh Y‚Ä¶ https://t.co/FVhbbqVpId
1134232451092324400,Thu May 30 22:57:44 +0000 2019,@_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron @hdjirdeh Y‚Ä¶ https://t.co/8vWAyvPPn8
1134232125677350900,Thu May 30 22:56:26 +0000 2019,@_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron @hdjirdeh C‚Ä¶ https://t.co/k9alZzh3bn
1134231879240962000,Thu May 30 22:55:27 +0000 2019,@_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron @hdjirdeh I‚Ä¶ https://t.co/PQ09fQKHmV
1134231333486489600,Thu May 30 22:53:17 +0000 2019,@_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron @hdjirdeh F‚Ä¶ https://t.co/XLuWJIQHxF
1134231234605830100,Thu May 30 22:52:53 +0000 2019,@_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron @hdjirdeh T‚Ä¶ https://t.co/rhp0sngzGZ
1134229860862136300,Thu May 30 22:47:26 +0000 2019,@rb30 @_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron‚Ä¶ https://t.co/F7agM1k4NB
1134206227217412100,Thu May 30 21:13:31 +0000 2019,@_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron @hdjirdeh I‚Ä¶ https://t.co/a1T5EWLVdV
1134206041346850800,Thu May 30 21:12:47 +0000 2019,@_developit @nomadtechie @kristoferbaxter @seldo @shubhie @stubbornella @mathias @FredKSchott @rwaldron @hdjirdeh P‚Ä¶ https://t.co/Hrsgwacdb8
1134148038136492000,Thu May 30 17:22:18 +0000 2019,RT @devongovett: Just updated the React focus management RFC to simplify, clarify, and reduce scope slightly. Incorporates some feedback on‚Ä¶
1133903932818722800,Thu May 30 01:12:19 +0000 2019,@timneutkens Yes! ü§©
1133879128027885600,Wed May 29 23:33:45 +0000 2019,Just updated the React focus management RFC to simplify, clarify, and reduce scope slightly. Incorporates some feed‚Ä¶ https://t.co/loLsUSJezw
1133825691810533400,Wed May 29 20:01:25 +0000 2019,RT @sitnikcode: Just finished new @amplifr landing page.  We refreshed the design, replaced webpack to @parceljs and Preact with SSR to sta‚Ä¶
1133812316498063400,Wed May 29 19:08:16 +0000 2019,So @github @natfriedman when is dark mode coming? üòé
1133805170557476900,Wed May 29 18:39:52 +0000 2019,I must say, I'm very surprised by the results of this poll. Almost no one still on Babel 6, at least in the Parcel‚Ä¶ https://t.co/26tVvN3hp7
1133467299896127500,Tue May 28 20:17:17 +0000 2019,@AdamRackis Except possibly backward compatibility for existing projects... We do want to make upgrading to Parcel‚Ä¶ https://t.co/wx2AFBTGSg
1133464090335109100,Tue May 28 20:04:32 +0000 2019,Poll: If you use Parcel with a custom Babel config, are you using Babel 6 or Babel 7?  (We are considering dropping‚Ä¶ https://t.co/nan67DffdU
1133190306667491300,Tue May 28 01:56:37 +0000 2019,RT @auchenberg: Time for another update to Browser Preview for @code üéâüí™  Introducing Inspect, a new way to inspect elements and go directly‚Ä¶
1132147185502392300,Sat May 25 04:51:37 +0000 2019,@gvpmahesh The goal is to optimize for code size. It would be used like a minifier. Output has the same effect as i‚Ä¶ https://t.co/W00EIjgcMc
1132028510627745800,Fri May 24 21:00:03 +0000 2019,Whoa, already got a PR from @github dependabot to fix a security vulnerability. Didn't have to enable anything. Pre‚Ä¶ https://t.co/mQO3LT4gT2
1131987402455638000,Fri May 24 18:16:42 +0000 2019,@arcanis not prepack, but similar ideas. optimizing for file size rather than initial runtime perf (though it can also help with that).
1131987145462206500,Fri May 24 18:15:41 +0000 2019,@RReverser similar in some ideas, but not at all in implementation.
1131987145462206500,Fri May 24 18:15:41 +0000 2019,@RReverser similar in some ideas, but not at all in implementation.
1131986328520781800,Fri May 24 18:12:26 +0000 2019,JS optimizer coming along... ü§Øü§Øü§Ø https://t.co/0q60rgdoJl
1131614324697342000,Thu May 23 17:34:14 +0000 2019,@github oops... üôà https://t.co/blrYZJnc6a
1131610747266486300,Thu May 23 17:20:01 +0000 2019,Just enabled @github's awesome new Sponsor button for @parceljs with a link to our @opencollect! üòç https://t.co/DJnPAtahne
1131326570038083600,Wed May 22 22:30:47 +0000 2019,@MacLemon Sure, not a problem!
1131322979487367200,Wed May 22 22:16:31 +0000 2019,@MacLemon I did it when working on https://t.co/F2PZRShG7u, which can be used to read the data for the state machin‚Ä¶ https://t.co/7XKlU9NgFe
1131320257476304900,Wed May 22 22:05:42 +0000 2019,@MacLemon yeah I generated it programmatically from the font data
1130896258996944900,Tue May 21 18:00:53 +0000 2019,@ArcVRArthur I believe it has to be an actual PWA
1130591552340877300,Mon May 20 21:50:06 +0000 2019,@gobinathco_ @markdalgleish "..." menu in the top-right of the toolbar
1130586125737685000,Mon May 20 21:28:32 +0000 2019,Thanks for the support everyone! ‚ù§Ô∏è  Last free Parcel shirt, for whoever claims this code: 78HHWDD848  https://t.co/FMrVDhNISZ
1130581880678391800,Mon May 20 21:11:40 +0000 2019,@RReverser @benadam11 I think both have their places. Apps that are always open l prefer to have as separate window‚Ä¶ https://t.co/UOwtlEfStj
1130578413868085200,Mon May 20 20:57:53 +0000 2019,@shumailxyz It's in the "..." menu in the top right of the toolbar, if you're in a website that supports it.
1130578275581870100,Mon May 20 20:57:20 +0000 2019,Now I want way more websites to be PWAs. Examples of things I use all the time that I want to install as apps:  1.‚Ä¶ https://t.co/EL0k4IdpSn
1130571246058364900,Mon May 20 20:29:24 +0000 2019,Chrome supports installing PWAs on macOS now, which is pretty awesome. https://t.co/s0s39FEVPc is really good as a‚Ä¶ https://t.co/7B0o1Aif71
1130568388982349800,Mon May 20 20:18:03 +0000 2019,Only need 1 more now! üòç https://t.co/Wvx6VGunLf
1130530244748750800,Mon May 20 17:46:29 +0000 2019,@ifyoumakeit @parceljs ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è
1130527871347224600,Mon May 20 17:37:03 +0000 2019,üö® ONLY A FEW HOURS LEFT!! ‚è≥   https://t.co/FMrVDhNISZ  We need just 4 MORE ORDERS for @parceljs to get $1 more prof‚Ä¶ https://t.co/mVJRwolMHA
1130304937944965100,Mon May 20 02:51:11 +0000 2019,RT @parceljs: Two days left to get a Parcel shirt! If you were holding out, don‚Äôt forget. üòú  https://t.co/9LJSqBaGCo  Free shirt for whoeve‚Ä¶
1130281149563936800,Mon May 20 01:16:40 +0000 2019,Finally saw Endgame. ü§Ø
1130217125975547900,Sun May 19 21:02:15 +0000 2019,@gimenete One statement.
1130215402728898600,Sun May 19 20:55:25 +0000 2019,My compiler just optimized a 900 line JS file to 1 line. üò≤
1129547823433769000,Sat May 18 00:42:41 +0000 2019,RT @devongovett: Reminder: You have just one week left to get a @parceljs T-Shirt or hoodie. All proceeds support us via Open Collective! üôè‚Ä¶
1129525766868197400,Fri May 17 23:15:03 +0000 2019,The Parcel team is killing it lately. Just updated https://t.co/dN6mTpnsyf! Big jump in tests passing.  Recently me‚Ä¶ https://t.co/DfH6PAWsN2
1129055611138654200,Thu May 16 16:06:49 +0000 2019,@chuangyu0 @parceljs @cottonbureau yeah looks like you can!
1128027172784861200,Mon May 13 20:00:10 +0000 2019,RT @mathias: üî• `globalThis` makes it easy to access the global `this` value in any JavaScript environment.  ü§î Surprisingly, polyfilling it‚Ä¶
1128002274804920300,Mon May 13 18:21:14 +0000 2019,@wSokra I think it will be complementary to terser, not a replacement for it. ie you‚Äôd probably run both.
1127993134858870800,Mon May 13 17:44:55 +0000 2019,@robpalmer2 It‚Äôs closer to prepack. Performing much more advanced optimizations than possible with pure static analysis.
1127984388312932400,Mon May 13 17:10:09 +0000 2019,Update: Made some progress on my optimizing compiler project this weekend. Much more to come! üòâ‚Ä¶ https://t.co/WISspbDnsH
1127978875479183400,Mon May 13 16:48:15 +0000 2019,@hack_nug @parceljs Wow!! Luck guess. Enjoy! üòÇ
1127976018340225000,Mon May 13 16:36:54 +0000 2019,Reminder: You have just one week left to get a @parceljs T-Shirt or hoodie. All proceeds support us via Open Collec‚Ä¶ https://t.co/11KnkdJFEM
1127351859478286300,Sat May 11 23:16:43 +0000 2019,Just got a new 4K OLED TV. Planet Earth II is looking mighty fine right now. Amazing cinematography doesn‚Äôt hurt either! üëç
1126983820396224500,Fri May 10 22:54:15 +0000 2019,@dan_abramov @reactnative Awesome! Let us know if there is anything you need from @parceljs. Would love to see a be‚Ä¶ https://t.co/S6ZQamSSYJ
1126959473761763300,Fri May 10 21:17:31 +0000 2019,I am very excited about this. Looks amazing! Nice job, @github. üòç https://t.co/YViAfVrmtn
1126956058767908900,Fri May 10 21:03:56 +0000 2019,RT @github: Your code. Your packages. One login.  Meet GitHub Package Registry üéÅ  Publish public or private packages next to your source co‚Ä¶
1126915608539353100,Fri May 10 18:23:12 +0000 2019,@oriSomething Related, but more about optimizing for size than perf.
1126873850698854400,Fri May 10 15:37:16 +0000 2019,Had a great idea in the shower for a JS optimizing compiler. Now I know what I‚Äôll be doing all weekend! üòú
1126371092409413600,Thu May 09 06:19:30 +0000 2019,RT @parceljs: Thanks to the fine folks @cottonbureau, Parcel swag is back! üëï  If you want a t-shirt or hoodie featuring Peanut the Parcel c‚Ä¶
1126307889591619600,Thu May 09 02:08:21 +0000 2019,RT @aweary: I see this #a11y problem so frequently. When you use attributes like aria-controls which use an ID reference, the element with‚Ä¶
1125987068625031200,Wed May 08 04:53:31 +0000 2019,@R4verLive @parceljs Yeah they do it by basically including all possible files in all possible directories that the‚Ä¶ https://t.co/3uwT3KXVwo
1125974538422849500,Wed May 08 04:03:44 +0000 2019,@R4verLive @parceljs require calls must be statically analyzable. Your require includes variables which cannot be resolved at build time.
1125953292641525800,Wed May 08 02:39:18 +0000 2019,@tckscz I guess just feeling and experience. It‚Äôs more of an art than a science I‚Äôd say.
1125943856938213400,Wed May 08 02:01:49 +0000 2019,Designing great APIs is incredibly hard, but so rewarding when you get it right. üëå
1125781675781136400,Tue May 07 15:17:22 +0000 2019,@richardiii @parceljs Haha no need to feel bad! üòÇ
1125780578261823500,Tue May 07 15:13:00 +0000 2019,Free @parceljs T-Shirt or hoodie for the first person to redeem this code:  BBRYHZD6WQ  https://t.co/FMrVDhNISZ https://t.co/1Xlc3HV4YX
1125778677164400600,Tue May 07 15:05:27 +0000 2019,RT @MaintainersAnon: Maintainers Anonymous episode with @youyuxi and @left_pad!  üîä Funding One's Freedom  üí¨ complexity of people vs. projec‚Ä¶
1125778322732879900,Tue May 07 15:04:02 +0000 2019,@NikkitaFTW @CompuIves @codesandbox @kleinerperkins @rauchg @koenbok @zoink @biilmann @Chr_Bach @sqs üòç
1125777913847009300,Tue May 07 15:02:25 +0000 2019,RT @CompuIves: I'm so happy to announce that we've raised a Seed Round of $2.4M for @codesandbox, led by @kleinerperkins!! üéâüéâüéâ  Among the i‚Ä¶
1125777518949089300,Tue May 07 15:00:51 +0000 2019,@CompuIves @codesandbox @kleinerperkins @rauchg @koenbok @zoink @biilmann @Chr_Bach @sqs Congrats! üçæ
1125453859650826200,Mon May 06 17:34:44 +0000 2019,Parcel t-shirts are back! üéâ https://t.co/FMrVDhNISZ
1125446902797877200,Mon May 06 17:07:06 +0000 2019,@MarkErickson @parceljs We just relaunched the campaign! üòâ https://t.co/FMrVDhNISZ
1125446645242404900,Mon May 06 17:06:04 +0000 2019,@hansoksendahl @parceljs You‚Äôre in luck! We just relaunched the campaign so now is your chance. üòâ
1124857720262103000,Sun May 05 02:05:54 +0000 2019,@aweary Awesome. Yeah we use react-axe/axe-core as well and have needed to disable it sometimes in order to test pe‚Ä¶ https://t.co/sl7TeluXNM
1124855729351942100,Sun May 05 01:57:59 +0000 2019,@aweary Nice work! Are you using axe-core for that?
1124712643279777800,Sat May 04 16:29:24 +0000 2019,@ryanflorence I miss writing code at work üòê
1124703554193592300,Sat May 04 15:53:17 +0000 2019,@nickemccurdy @swyx @TschinderDaniel @stevendotjs @typescript @pedronauck Yup
1124538303196229600,Sat May 04 04:56:39 +0000 2019,RT @TschinderDaniel: Just released 5.0.0 Beta 1 of react-docgen. üí• üéâ We now have @typescript support, big thanks to @devongovett ‚ù§Ô∏è Re-Lice‚Ä¶
1124341705954644000,Fri May 03 15:55:26 +0000 2019,Very excited to see the @reactjs team playing around with my focus management RFC in React Flare, the new experimen‚Ä¶ https://t.co/ucpUrdIcyn
1124026555901063200,Thu May 02 19:03:08 +0000 2019,RT @NikkitaFTW: Through the power of parcel and containers on @codesandbox here is rust compiling to web assembly running in CodeSandbox:‚Ä¶
1123486981739221000,Wed May 01 07:19:04 +0000 2019,RT @jaredpalmer: Just added a React template with a parcel playground to `tsdx create`.   https://t.co/lR4rw8QilW https://t.co/yon95QlJxy
1122966331681153000,Mon Apr 29 20:50:11 +0000 2019,@Rich_Harris @AdamRackis @_developit @RollupJS @parceljs Either way, Parcel aims to ensure that any valid code you‚Ä¶ https://t.co/HddxReaazG
1122966137170321400,Mon Apr 29 20:49:25 +0000 2019,@Rich_Harris @AdamRackis @_developit @RollupJS @parceljs Interesting. Somewhat surprising given that most of the we‚Ä¶ https://t.co/2bgvlcY3cf
1122965010815144000,Mon Apr 29 20:44:56 +0000 2019,@Rich_Harris @AdamRackis @_developit @RollupJS @parceljs We don‚Äôt output anything in strict mode I don‚Äôt think. ESM‚Ä¶ https://t.co/Vqyy26bpH6
1122963502170165200,Mon Apr 29 20:38:57 +0000 2019,@AdamRackis @Rich_Harris @_developit @RollupJS @parceljs Parcel 1 can already handle code like this. If a with or o‚Ä¶ https://t.co/GFnHka0zeV
1122904725391675400,Mon Apr 29 16:45:23 +0000 2019,RT @devongovett: Just got TypeScript and Flow generics working in react-docgen! üéâ  It will merge extended interfaces and inline type parame‚Ä¶
1122724651065417700,Mon Apr 29 04:49:50 +0000 2019,@r4tz52 Oops, sorry about that. Didn't see it. I added a couple new maintainers, so they should be able to publish.
1122310726549295100,Sun Apr 28 01:25:03 +0000 2019,Just got TypeScript and Flow generics working in react-docgen! üéâ  It will merge extended interfaces and inline type‚Ä¶ https://t.co/ldoYq1P5cI
1121614913162465300,Fri Apr 26 03:20:08 +0000 2019,@tolmasky Babel 5 did that. They removed it in 6 for spec compatibility. This plugin should do what you want. https://t.co/62sGJTz7le
1121579441597976600,Fri Apr 26 00:59:11 +0000 2019,@ryanseddon @sarah_federman @chriscoyier @allisonacs Dang, this looks very similar to what we're working on. Great‚Ä¶ https://t.co/4q0ROOl2Lc
1121486065980678100,Thu Apr 25 18:48:08 +0000 2019,@bcoops222 @typescript @tmcw I should have clarified. The parsing support is complete, but I didn't add support for‚Ä¶ https://t.co/HpmTUgUgI0
1121466378416844800,Thu Apr 25 17:29:55 +0000 2019,Yay! My PR for @typescript support in documentation.js has been merged and released in v10.1.0! üéâ  Now you can gene‚Ä¶ https://t.co/3xUmKlDwvj
1121084311053094900,Wed Apr 24 16:11:43 +0000 2019,@jasonlaster11 Yeah I like it a lot!
1121072246263402500,Wed Apr 24 15:23:46 +0000 2019,@Luk_Ostrowski Great, if you like reinventing the wheel. But if you‚Äôd like to focus on building a product instead o‚Ä¶ https://t.co/ntt6g2JC1Z
1121071707228270600,Wed Apr 24 15:21:38 +0000 2019,@shaunmstone Read the rest of the thread. Yes, different designs are always going to happen and that‚Äôs partly why p‚Ä¶ https://t.co/xxsfXszKdj
1120881808407613400,Wed Apr 24 02:47:02 +0000 2019,It was super warm in SF today, so I went for a bike ride after work. üö¥üëå https://t.co/Ts7Z3XKsoh
1120808265636384800,Tue Apr 23 21:54:48 +0000 2019,@ryanflorence ... and already tweeted this thread ü§¶‚Äç‚ôÇÔ∏è
1120804621142741000,Tue Apr 23 21:40:19 +0000 2019,@ryanflorence Oh man, did you already give a talk on this? I'll have to watch later.
1120794981617164300,Tue Apr 23 21:02:01 +0000 2019,@shumailxyz Absolutely. Since React's scope is much smaller than other frameworks like Angular, this ends up fallin‚Ä¶ https://t.co/xzOBMVqtOe
1120783827259932700,Tue Apr 23 20:17:42 +0000 2019,We‚Äôre working on abstracting away the Adobe-specific design into a reusable, accessibility-first library of React H‚Ä¶ https://t.co/4Z6XJmnnFz
1120783826517499900,Tue Apr 23 20:17:42 +0000 2019,This is what my team is currently working on at Adobe. We‚Äôve spent years building our design system to support acce‚Ä¶ https://t.co/YYiPVhvo5b
1120783825749987300,Tue Apr 23 20:17:41 +0000 2019,Rather than starting your design system from scratch and using divs, you should be able to use a library with some‚Ä¶ https://t.co/FIwBQ5wDpb
1120783825007603700,Tue Apr 23 20:17:41 +0000 2019,We can fix this though. Short of the web platform adding an entire component library to the browser, we can solve t‚Ä¶ https://t.co/0oEzrT6Dku
1120783824244265000,Tue Apr 23 20:17:41 +0000 2019,This is why the web is still perceived as an inferior app platform. Since it is so hard to build high quality compo‚Ä¶ https://t.co/8HrCvTekHR
1120783823363428400,Tue Apr 23 20:17:41 +0000 2019,Supporting accessibility is not just adding role and aria props. It‚Äôs proper focus and tab management, keyboard nav‚Ä¶ https://t.co/bhIwtDH97X
1120783822440681500,Tue Apr 23 20:17:41 +0000 2019,If you absolutely must build your own components from scratch, this is the spec you should be following:‚Ä¶ https://t.co/AjkhYgnIOf
1120783821652127700,Tue Apr 23 20:17:40 +0000 2019,Even if you do use a pre-built component library, which one would you choose? Did you know that most of the super p‚Ä¶ https://t.co/7I9PiK2kuK
1120783820842684400,Tue Apr 23 20:17:40 +0000 2019,Seriously. Multiply the salaries of your company's engineers working on design systems across the whole industry. W‚Ä¶ https://t.co/Lne1oFivyV
1120783819978629100,Tue Apr 23 20:17:40 +0000 2019,React is amazing because it makes building components so easy. But it's a double edged sword: everyone is building‚Ä¶ https://t.co/hI7qazPehG
1120741839894564900,Tue Apr 23 17:30:51 +0000 2019,@HenrikJoreteg Hmm I thought that was already the case... https://t.co/beY7Ew5VGx
1120725955348066300,Tue Apr 23 16:27:44 +0000 2019,RT @nodejs: üéâ Node.js v 12 is here!! Read more at the blog ---&gt; https://t.co/yAYhKxU4DM
1120722637410328600,Tue Apr 23 16:14:33 +0000 2019,@b0neskull Anyway, yes there is a light theme, but the idea is that people should be able to build their own themes pretty easily as well.
1120722051398950900,Tue Apr 23 16:12:13 +0000 2019,@b0neskull Are you even a developer? üòú
1120721846985314300,Tue Apr 23 16:11:24 +0000 2019,@HenrikJoreteg I believe it works correctly if you name it with a .webmanifest extension already, but we‚Äôll look in‚Ä¶ https://t.co/WvXuG3W2sL
1120720520410832900,Tue Apr 23 16:06:08 +0000 2019,@amcdnl Lol that‚Äôs because it is. üòâ
1120538132636676100,Tue Apr 23 04:01:24 +0000 2019,@anmolm_ @ryanflorence Indeed, the one shining example! üòú
1120536460506161200,Tue Apr 23 03:54:45 +0000 2019,Amazing that most of the libraries people responded with are completely non-accessible. Most didn't even have keybo‚Ä¶ https://t.co/lVsV7M2ykK
1120468387950420000,Mon Apr 22 23:24:15 +0000 2019,@juarezpaf @gatsbyjs Yeah probably. documentationjs handles pretty much any JavaScript, but for things like Vue you‚Ä¶ https://t.co/LCSZPma0TU
1120454166088945700,Mon Apr 22 22:27:44 +0000 2019,@BrianRosamilia I did look at it, but I think you had to download the entire index locally which wouldn‚Äôt work well‚Ä¶ https://t.co/GkmdeSdB6d
1120446127910924300,Mon Apr 22 21:55:48 +0000 2019,Everything is powered by @gatsbyjs, with documentationjs and react-docgen for parsing. I'm hoping to open source th‚Ä¶ https://t.co/kjCKws3vyJ
1120446125633413100,Mon Apr 22 21:55:47 +0000 2019,Another nice feature is support for mdx with inline examples. If you just add a .mdx file named the same as your co‚Ä¶ https://t.co/5WXIZQwXH5
1120446117483876400,Mon Apr 22 21:55:45 +0000 2019,Here's what the documentation generator I'm working on currently looks like.  Supports Flow, TypeScript, and JSDoc.‚Ä¶ https://t.co/h9QyIo9uuG
1120423140864266200,Mon Apr 22 20:24:27 +0000 2019,@seldo Oh right yeah that makes sense
1120419157676372000,Mon Apr 22 20:08:38 +0000 2019,@seldo Oh ok. What explains the discrepancy between users and downloads then? Caching?
1120417722838519800,Mon Apr 22 20:02:56 +0000 2019,@seldo Interesting‚Ä¶ I find it hard to believe that only 0.08% of npm registry users would find bundling useful. ü§î
1120390541424902100,Mon Apr 22 18:14:55 +0000 2019,One question for those of you that write more React in TypeScript than me: Do you use type aliases or interfaces to define your prop types?
1120390535720648700,Mon Apr 22 18:14:54 +0000 2019,I'm working on TypeScript support for react-docgen. Soon, you'll be able to easily generate prop documentation for‚Ä¶ https://t.co/ybXdWGsafz
1119677180538044400,Sat Apr 20 19:00:17 +0000 2019,@ryanflorence Yeah sorry that‚Äôs what I meant.
1119674815575543800,Sat Apr 20 18:50:53 +0000 2019,RT @AndrewKoltyakov: Experimenting with relatively large #TypeScript/#React code base and build pipeline with multiple entry points, where‚Ä¶
1119666257513439200,Sat Apr 20 18:16:52 +0000 2019,@ryanflorence Can you not have an aria-label on a role="tooltip"?
1119665251987800000,Sat Apr 20 18:12:53 +0000 2019,@ryanflorence I think you can do that without an extra DOM node though. If an aria-label is present, it will be read instead of children.
1119635795470475300,Sat Apr 20 16:15:50 +0000 2019,@ryanflorence Why is the ariaLabel prop rendered to a separate element and not just using the aria-label prop on th‚Ä¶ https://t.co/Dva5dGV7f7
1119435207956766700,Sat Apr 20 02:58:46 +0000 2019,@tusharmath Nothing afaik, but it only supports TypeScript. I also need to support JSDoc and Flow, which documentation.js already supports.
1119301583999647700,Fri Apr 19 18:07:47 +0000 2019,@satya164 @babeljs Yeah true but usually the symbol name is good enough to link them together
1119297736325513200,Fri Apr 19 17:52:30 +0000 2019,@satya164 @babeljs Why would it be different?
1119281965679566800,Fri Apr 19 16:49:50 +0000 2019,I'll add that this is all possible because Babel 7 supports TypeScript parsing now. It would have been waaay harder‚Ä¶ https://t.co/NRJrIRnktI
1119280974188044300,Fri Apr 19 16:45:54 +0000 2019,Working with the AST nodes is an interesting way to learn a language, btw. üòú  If you're more familiar with TypeScri‚Ä¶ https://t.co/n6zVb3L7rl
1119280973009391600,Fri Apr 19 16:45:53 +0000 2019,For the internal documentation site I‚Äôm building, we need TypeScript support in addition to JSDoc and Flow.  I‚Äôm wo‚Ä¶ https://t.co/mwi7ChrU1A
1119132641490374700,Fri Apr 19 06:56:28 +0000 2019,RT @_brianhan: OSS FTW: https://t.co/EqIDbQIvR9 Thanks for publishing this! Really helped me out today! ‚ù§
1119132620183359500,Fri Apr 19 06:56:23 +0000 2019,RT @_brianhan: Me: "I just need this React app to work on Koa! Why can't I just bring @parceljs to the server?"  @cdaringe: `npm install ko‚Ä¶
1118959772814831600,Thu Apr 18 19:29:33 +0000 2019,@seldo @MagnoliaJSconf If you use the Adobe XD web UI, you are using WebAssembly as well. üòâ
1118765051349880800,Thu Apr 18 06:35:48 +0000 2019,@dan_abramov @swyx @iansu Separate issue, but I also don‚Äôt think NODE_PATH or other overrides to node_modules resol‚Ä¶ https://t.co/0G1EnSrToP
1118758256933949400,Thu Apr 18 06:08:48 +0000 2019,@dan_abramov @swyx @iansu Oh hmm, I was not aware of that.  Even so, I don‚Äôt think propagating that config file fur‚Ä¶ https://t.co/orD4FL9VNV
1118755125256843300,Thu Apr 18 05:56:21 +0000 2019,@swyx @iansu No offense but this is a horrible idea IMO. If you must add it, it should be craconfig.json. jsconfig‚Ä¶ https://t.co/Yu6XeD5cil
1118555644640936000,Wed Apr 17 16:43:42 +0000 2019,Very interesting results to my poll about how linting and type checking relate to bundling.  Seems that about half‚Ä¶ https://t.co/zzEfnZImDL
1118188031855353900,Tue Apr 16 16:22:56 +0000 2019,Poll: Where should linting and type checking be in a build system?
1117832480839483400,Mon Apr 15 16:50:06 +0000 2019,@kylemathews @gatsbyjs @chrisbiscardi Very cool. I‚Äôll check it out!
1117830868448362500,Mon Apr 15 16:43:41 +0000 2019,@kylemathews @gatsbyjs Hmm no tell me more...
1117830489258115100,Mon Apr 15 16:42:11 +0000 2019,@haroenv @gatsbyjs Haha yeah, I‚Äôm actually already using Algolia for search as well. üëç
1117699283052978200,Mon Apr 15 08:00:49 +0000 2019,@boriscoder Vue support for mdx is already in alpha! https://t.co/OZzybkLyRy
1117584689609359400,Mon Apr 15 00:25:28 +0000 2019,@kylemathews @gatsbyjs Awesome. That would be amazing! I‚Äôve been wanting to build a similar distributed worker system for Parcel too. üëå
1117566029872242700,Sun Apr 14 23:11:19 +0000 2019,@theKashey Reading the raw source from type definitions is far from the ideal interface for reading documentation I‚Ä¶ https://t.co/KoeRU7vFLC
1117550599782813700,Sun Apr 14 22:10:00 +0000 2019,@_hagnerd Very cool.
1117550481268559900,Sun Apr 14 22:09:32 +0000 2019,@theKashey I think both are important. It‚Äôs definitely nice to have API docs and autocomplete in your IDE, but for‚Ä¶ https://t.co/LAP9QrSnnS
1117548000207728600,Sun Apr 14 21:59:40 +0000 2019,@_hagnerd Oh do they have this?
1117547029939417100,Sun Apr 14 21:55:49 +0000 2019,@tolmasky Right. I think you‚Äôd want to explicitly mark which examples to display the source for and which to actual‚Ä¶ https://t.co/x40oNL58Ay
1117544380313690100,Sun Apr 14 21:45:17 +0000 2019,I‚Äôm currently building an internal documentation site/package registry that generates API docs and supports .mdx ex‚Ä¶ https://t.co/tTWKhNNddT
1117542706341797900,Sun Apr 14 21:38:38 +0000 2019,Imagine if https://t.co/3y54eX58jC had a built in API documentation generator for all code on the registry.  And wh‚Ä¶ https://t.co/UaCl116LvL
1116924739077824500,Sat Apr 13 04:43:03 +0000 2019,RT @4lpine: I'm beyond excited to announce MDX v1. It's been a year in the making! üöÄ  Markdown and JSX have never been happier together.  ‚Ä¢‚Ä¶
1116712866399187000,Fri Apr 12 14:41:09 +0000 2019,RT @left_pad: üéß Announcing the Maintainers Anonymous podcast!  I'd like to chat about the _how_ of maintenance.  Site: https://t.co/RDU056j‚Ä¶
1116088729385308200,Wed Apr 10 21:21:03 +0000 2019,What is the best JavaScript API documentation site you‚Äôve seen?
1115988514968035300,Wed Apr 10 14:42:50 +0000 2019,RT @xdamman: Join us this Thursday 6pm in San Francisco at @GitHub for a #SustainOSS community event with @devonzuegel, @DuaneOBrien, @lenc‚Ä¶
1115861898577285100,Wed Apr 10 06:19:42 +0000 2019,@swyx @ThePracticalDev @bendhalpern More like ‚Äúdim‚Äù
1115860953529311200,Wed Apr 10 06:15:57 +0000 2019,@Yurick_ Yeah that works great until one of your components imports a CSS file. Then you have to make a mock import‚Ä¶ https://t.co/S3IgLvMoca
1115825356492222500,Wed Apr 10 03:54:30 +0000 2019,RT @devongovett: @tsriram It‚Äôs way to hard to set them up. Even though I use Parcel to bundle with zero config, I still ended up needing lo‚Ä¶
1115825253962387500,Wed Apr 10 03:54:06 +0000 2019,@tsriram It‚Äôs way to hard to set them up. Even though I use Parcel to bundle with zero config, I still ended up nee‚Ä¶ https://t.co/kZnoAzAUJT
1115822435624861700,Wed Apr 10 03:42:54 +0000 2019,Just had to set up tests for a new project, and now I want to write my own testing framework. üôÉ  JS tooling still has a LONG way to go.
1115794220634140700,Wed Apr 10 01:50:47 +0000 2019,@EricVicenti We implement our watchers with the same underlying OS APIs so it‚Äôs mostly the same. One thing that wat‚Ä¶ https://t.co/BNgERbV9Jj
1115770144913903600,Wed Apr 10 00:15:07 +0000 2019,@JosuGoi1 Yeah you gotta use the right tool for the job üòÑ
1115763619835273200,Tue Apr 09 23:49:11 +0000 2019,@EricVicenti Well we didn‚Äôt want to require installing watchman but will use it if available. Otherwise, we wanted‚Ä¶ https://t.co/Kp0GMksdxe
1115669396960059400,Tue Apr 09 17:34:47 +0000 2019,RT @devongovett: Super excited about the new watcher we‚Äôve been building for Parcel 2! üëÄ  It‚Äôs much more reliable, scalable, and performant‚Ä¶
1115430478926901200,Tue Apr 09 01:45:24 +0000 2019,@rtsao Yeah we don‚Äôt want to require people to install watchman, but will use it automatically when available.
1115358924213874700,Mon Apr 08 21:01:04 +0000 2019,@benedyktdryl Haha I was waiting for someone to ask that. ü§¶‚Äç‚ôÇÔ∏è   This is a very low level module integrating with C‚Ä¶ https://t.co/oCSdJ3uaPM
1115304121727238100,Mon Apr 08 17:23:18 +0000 2019,@parceljs This is the C++ project I was talking about üòâ https://t.co/G9Y45bWYY8
1115302830313627600,Mon Apr 08 17:18:10 +0000 2019,In most build tools including Parcel 1, it can take many seconds just to check what files changed since the last bu‚Ä¶ https://t.co/Ng1jGHnClG
1115302826710712300,Mon Apr 08 17:18:09 +0000 2019,Super excited about the new watcher we‚Äôve been building for Parcel 2! üëÄ  It‚Äôs much more reliable, scalable, and per‚Ä¶ https://t.co/pDJGNHVJkr
1115287828663918600,Mon Apr 08 16:18:34 +0000 2019,RT @tomwarren: Microsoft is releasing its first Edge Chromium build today. Both Canary (daily) and Developer (weekly) builds are available,‚Ä¶
1115038646191571000,Sun Apr 07 23:48:24 +0000 2019,@jaffathecake Sure. I‚Äôm just saying what I‚Äôm hearing. It‚Äôs definitely a focus, and low hanging fruit I guess. Perha‚Ä¶ https://t.co/UKXysEVfvk
1115035889535598600,Sun Apr 07 23:37:27 +0000 2019,@jaffathecake I don‚Äôt disagree with anything you said.  But I think it‚Äôs important for people to know that load tim‚Ä¶ https://t.co/igM1JtXjcg
1115017985775652900,Sun Apr 07 22:26:18 +0000 2019,RT @css: Moving from Gulp to Parcel by @benfrain  https://t.co/hiAt0mY7N0
1114993036730093600,Sun Apr 07 20:47:10 +0000 2019,@vphantom If you render a huge amount of DOM nodes, the browser slows down considerably. By windowing or virtualizi‚Ä¶ https://t.co/bacxtBBmEW
1114961910963654700,Sun Apr 07 18:43:29 +0000 2019,@addyosmani I don‚Äôt mean to diminish the importance of load time perf at all, but like everything it‚Äôs a tradeoff.‚Ä¶ https://t.co/cmoZHdpX3n
1114933334272950300,Sun Apr 07 16:49:56 +0000 2019,Not everything is an e-commerce site. Not everything needs to have the smallest load time possible or it will lose‚Ä¶ https://t.co/7RffbmVgzx
1114933333618651100,Sun Apr 07 16:49:55 +0000 2019,Sometimes more JS is better. Sometimes it takes more code to write an optimized implementation of something, vs a n‚Ä¶ https://t.co/LfSBrC5rdp
1114933332536483800,Sun Apr 07 16:49:55 +0000 2019,I feel like when devrel people on Twitter talk about web perf they are mostly talking about the initial load. Bundl‚Ä¶ https://t.co/vbTphf9ACU
1114632299461505000,Sat Apr 06 20:53:43 +0000 2019,@mikeal buffers are Uint8Arrays though, so theoretically you could only wrap in a buffer in node?
1114620226765590500,Sat Apr 06 20:05:45 +0000 2019,@mikeal Typed arrays + Dataview work everywhere
1114562678029049900,Sat Apr 06 16:17:04 +0000 2019,RT @fastly: üéâIt's here! üéâMeet Lucet, our latest open-source project ‚Äî designed to take WebAssembly beyond the browser + build a platform fo‚Ä¶
1114561733568262100,Sat Apr 06 16:13:19 +0000 2019,RT @solomonstre: If WASM+WASI existed in 2008, we wouldn't have needed to created Docker. That's how important it is. Webassembly on the se‚Ä¶
1114561630723948500,Sat Apr 06 16:12:54 +0000 2019,RT @linclark: You can see this system interface in action with wasmtime (our embeddable WebAssembly runtime) and the browser polyfill  http‚Ä¶
1114560754710016000,Sat Apr 06 16:09:26 +0000 2019,RT @linclark: WebAssembly running outside the web has a huge future. And that future gets one giant leap closer today with...  üì¢ Announcing‚Ä¶
1114252203785515000,Fri Apr 05 19:43:21 +0000 2019,RT @rmondello: Hey web developers! Safari 12.1 has shipped, and it has lots of cool stuff! It comes with iOS 12.2 and macOS Mojave 10.14.4,‚Ä¶
1113262993112846300,Wed Apr 03 02:12:35 +0000 2019,@IvanVilchesB @parceljs https://t.co/eDkmXVRMn8
1112767528667766800,Mon Apr 01 17:23:47 +0000 2019,Excited to announce that Parcel 2 now requires a config file! üéâ  You write it in Java by extending an AbstractConfi‚Ä¶ https://t.co/i1zz1EYuC5
1111663645547593700,Fri Mar 29 16:17:21 +0000 2019,Whoa! Thanks everyone for your support. üòç https://t.co/RipPusWPGS
1111663563234381800,Fri Mar 29 16:17:01 +0000 2019,RT @opencollect: üéâ @parceljs just reached 100 backers!! üôå  Support them too! https://t.co/3a0j3IkXsv
1110958893981524000,Wed Mar 27 17:36:55 +0000 2019,@Mike1stver Redux is just a library, so it should work with any bundler!
1110730555920801800,Wed Mar 27 02:29:35 +0000 2019,@DNeighly hmm no this would only affect javascript, not html
1109951262445850600,Sun Mar 24 22:52:57 +0000 2019,16,000 people for @BernieSanders in SF today! üòç #BernieInSF #FeelTheBern https://t.co/HKQRC895gj
1109201209410240500,Fri Mar 22 21:12:30 +0000 2019,Dropbox Paper is an incredibly well designed and executed product. Been using it a lot lately to write specs, archi‚Ä¶ https://t.co/q6AlW9QifI
1108461138520371200,Wed Mar 20 20:11:44 +0000 2019,PSA: If you are suddenly experiencing strange parsing errors in Parcel, we released v1.12.3 which downgrades Babel‚Ä¶ https://t.co/44KVXWBAjE
1108126115275526100,Tue Mar 19 22:00:28 +0000 2019,@CompuIves Congrats! Looks amazing. üéâ
1108083685385883600,Tue Mar 19 19:11:52 +0000 2019,@bukharim96 @CasseyLottman @parceljs @webpack @TheLarkInn except it isn‚Äôt a joint effort at all. Sean is the only contributor.
1108044804179451900,Tue Mar 19 16:37:22 +0000 2019,@brian_d_vaughn react-docgen reads defaultProps for documentation but not destructring
1107134750701961200,Sun Mar 17 04:21:08 +0000 2019,@AdamRackis @parceljs You could do it with with a custom packager plugin for HTML. Packagers have full access to the bundle graph.
1107133031079264300,Sun Mar 17 04:14:18 +0000 2019,@AdamRackis @parceljs Parcel 2 has support for multiple targets. Here‚Äôs a slide from a recent talk I gave that show‚Ä¶ https://t.co/GLJcpQyjim
1107066609762340900,Sat Mar 16 23:50:22 +0000 2019,@apidcloud @parceljs yep!
1107064431555440600,Sat Mar 16 23:41:43 +0000 2019,@jkup @parceljs I hadn‚Äôt done it since school tbh. Currently have about 500 tabs open on stack overflow and random cpp reference sites. üòâ
1107064072481079300,Sat Mar 16 23:40:17 +0000 2019,I‚Äôve been writing some C++ recently for a cool new @parceljs feature, and it‚Äôs actually been pretty fun! ü§ì  Side no‚Ä¶ https://t.co/OUnMGUUraH
1106431304315203600,Fri Mar 15 05:45:54 +0000 2019,RT @GabeFromUtah: Zero config is my friend! Amazing live demo of Parcel üì¶ by @devongovett . Thanks @Postmates  and @devonbl for organizing‚Ä¶
1106431233892843500,Fri Mar 15 05:45:37 +0000 2019,Thanks for having me! üòç https://t.co/tiynAYDqQ2
1106397417761439700,Fri Mar 15 03:31:14 +0000 2019,@ryanflorence @devonbl Sooooooonnn! üòâ
1106217192071163900,Thu Mar 14 15:35:05 +0000 2019,@arcanis @madbyk @jotadeveloper @IgorMinar @yarnpkg @npm_support Well no, it should be defined per field not necess‚Ä¶ https://t.co/rIJtSqepyc
1106216856673607700,Thu Mar 14 15:33:45 +0000 2019,@ryanflorence No default styles üòâ
1106216060695412700,Thu Mar 14 15:30:36 +0000 2019,@arcanis @madbyk @jotadeveloper @IgorMinar @yarnpkg @npm_support Things that could be reasonably expected to work a‚Ä¶ https://t.co/5YqeX9W26H
1106213995881480200,Thu Mar 14 15:22:23 +0000 2019,@madbyk @jotadeveloper @arcanis @IgorMinar @yarnpkg @npm_support Haha yeah but npm has been pretty clear that they‚Ä¶ https://t.co/uKQEGl4er0
1105916749147328500,Wed Mar 13 19:41:14 +0000 2019,@mathias @kristoferbaxter Or variants before we moved to the yearly system, like ES5 for IE 11?
1105916389850636300,Wed Mar 13 19:39:48 +0000 2019,@mathias @kristoferbaxter What about features that are shipped to browsers before the entire year spec is ready? Eg‚Ä¶ https://t.co/4CBXFbhcH1
1105912801371938800,Wed Mar 13 19:25:33 +0000 2019,@kristoferbaxter @mathias This is very interesting. We could automatically generate this in Parcel. I‚Äôm curious how‚Ä¶ https://t.co/Mt9O7ceeMl
1105848452724940800,Wed Mar 13 15:09:51 +0000 2019,@sebmck It‚Äôs a trade off. Either make it easy for people to get started with good defaults or force everything to be configured by hand.
1105194777824223200,Mon Mar 11 19:52:23 +0000 2019,@TiroTypeworks @Litherum @behdadesfahbod Oh I meant actually removing the glyph not replacing it with a different one.
1105187207524962300,Mon Mar 11 19:22:18 +0000 2019,@TiroTypeworks @Litherum @behdadesfahbod Perhaps ‚Äúinput glyph‚Äù is the operative phrase. Maybe that means you can‚Äôt‚Ä¶ https://t.co/z41udRXSnn
1104923896883556400,Mon Mar 11 01:56:00 +0000 2019,@Litherum It works! Try it on https://t.co/Xgzl6SNZgU. ü§ì  Just had to add support for deleting a glyph in a multipl‚Ä¶ https://t.co/ECyQtek9cK
1104851067693490200,Sun Mar 10 21:06:36 +0000 2019,@eerne @Litherum Oops autocorrect. https://t.co/F2PZRShG7u
1104847356602662900,Sun Mar 10 20:51:51 +0000 2019,@Litherum This is amazing! Nice work. I‚Äôll have to try it with https://t.co/mbLk8uQpGL. üòâ
1104846507189055500,Sun Mar 10 20:48:29 +0000 2019,RT @Litherum: I made a font whose shaping rules add two arbitrarily long numbers. I invented a DSL and wrote a program in it that gets comp‚Ä¶
1104489304187842600,Sat Mar 09 21:09:05 +0000 2019,@kylemathews @vadimdemedes @sindresorhus It looks almost identical to our existing cli but the code is much simpler and less bug prone.
1104449322521788400,Sat Mar 09 18:30:12 +0000 2019,@ken_wheeler For sure, not trying to discourage you at all. I‚Äôve been thinking of doing something like this for a l‚Ä¶ https://t.co/hdKPcp0G9O
1104447939554889700,Sat Mar 09 18:24:43 +0000 2019,@ken_wheeler Yeah and at that point you‚Äôve basically built a browser in a browser. üòâ https://t.co/NoojQRT4u5
1104445357675540500,Sat Mar 09 18:14:27 +0000 2019,@ken_wheeler Really, line wrapping and rich text needs to be supported in canvas natively if you don‚Äôt want to reim‚Ä¶ https://t.co/LI8dZMfGED
1104445241673695200,Sat Mar 09 18:13:59 +0000 2019,@ken_wheeler Even then, since text layout is done at the paragraph level for things like bidirectional text (RTL an‚Ä¶ https://t.co/7rS6O1m3ux
1104444876505014300,Sat Mar 09 18:12:32 +0000 2019,@ken_wheeler You may be able to skip some of those steps and reuse the browsers implementation via canvas. You‚Äôll d‚Ä¶ https://t.co/ugp1J0d1Y6
1104444457271713800,Sat Mar 09 18:10:52 +0000 2019,@ken_wheeler üëç to save you some time, here is an overview of the text layout process that generally needs to be imp‚Ä¶ https://t.co/bAr3S8EBpA
1104441550833016800,Sat Mar 09 17:59:19 +0000 2019,@ken_wheeler Does it support Unicode tho?
1104435418383016000,Sat Mar 09 17:34:57 +0000 2019,@vadimdemedes @kylemathews @sindresorhus The pr for the cli is here: https://t.co/akwIMJLUsp  Need to update to the‚Ä¶ https://t.co/lLuXQrpPB3
1104431194093940700,Sat Mar 09 17:18:10 +0000 2019,@kylemathews @vadimdemedes @sindresorhus Yeah it‚Äôs sweet! I built the CLI for Parcel 2 with it. üëç
1104158789266169900,Fri Mar 08 23:15:44 +0000 2019,New favorite @parceljs sticker placement seen in the wild. üòÇ https://t.co/rMmcnEUR7b
1104124011351466000,Fri Mar 08 20:57:32 +0000 2019,Amazing! The CERN WorldWideWeb project, which recreates the UI of the original web browser for its 30th anniversary‚Ä¶ https://t.co/XTOlPg9ahE
1104118845348827100,Fri Mar 08 20:37:00 +0000 2019,@threepointone @markdalgleish what about an attribute to name a stylesheet: &lt;link name=‚Äúx‚Äù&gt;. Then to reference, &lt;di‚Ä¶ https://t.co/qTAaGlzxPU
1104113993856168000,Fri Mar 08 20:17:44 +0000 2019,@threepointone @markdalgleish Could there be an HTML attribute for this in addition to a JS setter? E.g. &lt;div cssReferences=‚Äú$foo $bar‚Äù&gt;
1104059941470396400,Fri Mar 08 16:42:57 +0000 2019,The price of leading a large open source project. I miss coding. üòê https://t.co/kRkUthhA0o
1104048316403179500,Fri Mar 08 15:56:45 +0000 2019,@threepointone Ah interesting, missed that. üëå
1104047646056955900,Fri Mar 08 15:54:05 +0000 2019,@threepointone You mean assigning references to an element? Isn‚Äôt the same true with css modules, except you are as‚Ä¶ https://t.co/OItCzqFS6T
1104046535329767400,Fri Mar 08 15:49:40 +0000 2019,@threepointone Seems more like css modules than css-in-js‚Ä¶ but I like it!
1103802028260700200,Thu Mar 07 23:38:05 +0000 2019,RT @parceljs: Parcel v1.12.0 is out! üöÄ  üó∫ CSS, SASS, and LESS sourcemaps! üìÉ Markdown support üî• HMR improvements ‚öõÔ∏è Improved automatic JSX s‚Ä¶
1103538774179381200,Thu Mar 07 06:12:01 +0000 2019,@Daniel15 @Rich_Harris @ken_wheeler Yeah I spent years on this stuff. Text rendering is of the hardest problems tha‚Ä¶ https://t.co/kW0ssQU5qc
1103348644827156500,Wed Mar 06 17:36:30 +0000 2019,RT @vadimdemedes: üç≠ I'm extremely excited to finally announce the release of Ink 2 - library that lets you build beautiful and interactive‚Ä¶
1103109743403425800,Wed Mar 06 01:47:12 +0000 2019,@jkup I bet the whole JIRA team feels this way üòÇ
1102613419411234800,Mon Mar 04 16:54:59 +0000 2019,RT @devongovett: Finally finished my focus management RFC for React!  PR: https://t.co/ojkv0dyVM8 Rendered: https://t.co/95QcDIhzLs  The RF‚Ä¶
1102045438641725400,Sun Mar 03 03:18:02 +0000 2019,@kylemathews @shannonb_ux @fk @gatsbyjs üî•üî•üî• blazing fast! üòú
1101646834819248100,Sat Mar 02 00:54:07 +0000 2019,@fasterthanlime Ah that bug is fixed on master. Doing a release next week.
1101525129132032000,Fri Mar 01 16:50:30 +0000 2019,@AdamRackis https://t.co/CZmC2oE6Gk
1101522503623532500,Fri Mar 01 16:40:04 +0000 2019,@AdamRackis lol the point of parcel isn‚Äôt to get features into webpack ü§®
1101150598915743700,Thu Feb 28 16:02:15 +0000 2019,RT @GarthDB: We are hiring! @adobe is looking for a front end developer who wants to work on tools to help with our design system - being n‚Ä¶
1101031805719797800,Thu Feb 28 08:10:13 +0000 2019,@theKashey @neoziro Yeah sure I listed that in the alternatives section. If there were a way to access the React tr‚Ä¶ https://t.co/LOineUJZtB
1101028018670133200,Thu Feb 28 07:55:10 +0000 2019,@neoziro @theKashey Unfortunately it‚Äôs not fully possible in user space. I would not have written the RFC if that were the case.
1100957188787486700,Thu Feb 28 03:13:43 +0000 2019,@sundress @rob_dodson @Vjeux @markdalgleish @domenic üëç I haven‚Äôt prototyped anything for this RFC yet, but planning‚Ä¶ https://t.co/rGacU7j4vG
1100954604764782600,Thu Feb 28 03:03:27 +0000 2019,@sundress @rob_dodson @Vjeux @markdalgleish @domenic There‚Äôs a pretty big disclaimer about it in the readme.‚Ä¶ https://t.co/6efWFnMCzb
1100954149280112600,Thu Feb 28 03:01:38 +0000 2019,@sundress @rob_dodson @Vjeux @markdalgleish @domenic That‚Äôs good feedback. Perhaps we can improve the API.  focusNe‚Ä¶ https://t.co/6Bf4KczzxJ
1100953582822580200,Thu Feb 28 02:59:23 +0000 2019,@sundress @rob_dodson @Vjeux @markdalgleish @domenic The inert polyfill is pretty slow though since it needs to tra‚Ä¶ https://t.co/LfyWbP4frH
1100860759796371500,Wed Feb 27 20:50:32 +0000 2019,@rob_dodson @Vjeux @markdalgleish Yeah. I think eventually React could probably use some of those APIs under the hood.
1100853079702855700,Wed Feb 27 20:20:01 +0000 2019,@Vjeux @markdalgleish That would be nice, but my hopes of getting something into the browser are much lower than in‚Ä¶ https://t.co/pXIjcltkqw
1100829059582292000,Wed Feb 27 18:44:34 +0000 2019,Please leave your feedback on the PR! If you work on a design system or component library in React, I want to hear from you. üòç
1100829058793844700,Wed Feb 27 18:44:34 +0000 2019,FocusScopes can also be used to implement composite components like lists, grids, trees, etc. In these components,‚Ä¶ https://t.co/ictHOfynhx
1100829058013704200,Wed Feb 27 18:44:34 +0000 2019,FocusScopes can be used to lock focus within a scope. For example, the user should not be able to tab outside a dia‚Ä¶ https://t.co/NL5MglXT6B
1100829057304809500,Wed Feb 27 18:44:34 +0000 2019,FocusScopes form a tree. When a FocusScope unmounts it automatically restores focus to the parent FocusScope. This‚Ä¶ https://t.co/ymiKZ9HW6E
1100829054800846800,Wed Feb 27 18:44:33 +0000 2019,Finally finished my focus management RFC for React!  PR: https://t.co/ojkv0dyVM8 Rendered: https://t.co/95QcDIhzLs‚Ä¶ https://t.co/1er4PF0tqN
1100437538680930300,Tue Feb 26 16:48:49 +0000 2019,30,000 ‚≠êÔ∏è @parceljs! ü•≥üéâüòç https://t.co/w6w0cnTCQ3
1100172506898591700,Mon Feb 25 23:15:40 +0000 2019,@cktang_88 @bcoops222 @HackIllinois @cmatthewbell awesome work guys. Benjamin was the one I could find quickly on t‚Ä¶ https://t.co/KaModFM35X
1100144756095475700,Mon Feb 25 21:25:24 +0000 2019,@bcoops222 saw your work on HMR for WASM using Parcel. Very nice work! Would be awesome if you‚Äôd like to contribute‚Ä¶ https://t.co/E5ArCYTWxJ
1100143797093060600,Mon Feb 25 21:21:35 +0000 2019,WASM HMR using @parceljs! üòç https://t.co/B3r0367OpR
1100123735137251300,Mon Feb 25 20:01:52 +0000 2019,@rem @parceljs hmm, not really. You‚Äôd need to preprocess the file with an external tool prior to running parcel, an‚Ä¶ https://t.co/wyQzrfocVi
1100113716568252400,Mon Feb 25 19:22:03 +0000 2019,@rem @parceljs yep, the `fs` module is excluded.
1100102352424468500,Mon Feb 25 18:36:54 +0000 2019,@rem @parceljs import fs from ‚Äòfs‚Äô;  const styleText = fs.readFileSync(__dirname + ‚Äò/styles.scss‚Äô);  The contents o‚Ä¶ https://t.co/Bfm0UuY8bZ
1099810731149557800,Sun Feb 24 23:18:06 +0000 2019,@stommepoes Well, not quite random, but non deterministic. The current behavior relies on the order the portals wer‚Ä¶ https://t.co/jUp2UWqRvf
1099500471654309900,Sun Feb 24 02:45:14 +0000 2019,RT @sebmarkbage: One thing I like about APIs without property names is that I can code in non-English. üá∏üá™ import {useState as anv√§ndTillst√•‚Ä¶
1099500123166363600,Sun Feb 24 02:43:51 +0000 2019,@sebmarkbage Also minimizes better because local variables are mangled while properties typically are not.
1099411075433287700,Sat Feb 23 20:50:01 +0000 2019,Interesting results for my poll about tab order and React portals. People seem pretty divided on how they should wo‚Ä¶ https://t.co/kVrKQBlLVX
1099337824199798800,Sat Feb 23 15:58:56 +0000 2019,@kentcdodds Lol so true üòÇ
1099337293909741600,Sat Feb 23 15:56:50 +0000 2019,@adamwathan @sitnikcode @parceljs This issue has a possible solution on it in the comments. Honestly not sure why n‚Ä¶ https://t.co/Hwn6hD3I0W
1099337111969267700,Sat Feb 23 15:56:06 +0000 2019,RT @satya164: Writing a @parceljs plugin for https://t.co/g9RpxXluds.  It's still a POC, but it's awesome because you just install the plug‚Ä¶
1099327190464815100,Sat Feb 23 15:16:41 +0000 2019,@kryptos_rsa @ryanflorence If there were a native CSS feature like overflow: escape or something, and the portal we‚Ä¶ https://t.co/0zw9x7frae
1099326040327901200,Sat Feb 23 15:12:07 +0000 2019,RT @devongovett: Poll: what would you expect the tab order to be for the example in the previous tweet?
1099326021516517400,Sat Feb 23 15:12:02 +0000 2019,RT @devongovett: Working on a focus management RFC for React. What would you expect the tab order to be when using React portals? Not neces‚Ä¶
1099325302898012200,Sat Feb 23 15:09:11 +0000 2019,@stommepoes Sure, if your users expect randomized tab order. üòâ
1099324751497949200,Sat Feb 23 15:06:59 +0000 2019,@kryptos_rsa @ryanflorence Right. Perhaps I‚Äôve taken this particular question too far out of context. Other parts o‚Ä¶ https://t.co/oC5fRf0cxo
1099088456154673200,Fri Feb 22 23:28:02 +0000 2019,@kryptos_rsa @ryanflorence I‚Äôm aware of the issues with controlling tab order generally, but in this case the corre‚Ä¶ https://t.co/10U1TK56lz
1099088409371369500,Fri Feb 22 23:27:51 +0000 2019,@kryptos_rsa @ryanflorence The reason portals exist is because HTML doesn‚Äôt have primitives that allow escaping ove‚Ä¶ https://t.co/xI8lRTgtD2
1099084369581420500,Fri Feb 22 23:11:48 +0000 2019,@kryptos_rsa @ryanflorence Also, React already handles portals differently from the DOM. Events bubble through port‚Ä¶ https://t.co/LqTHYWXtsb
1099084062180831200,Fri Feb 22 23:10:35 +0000 2019,@kryptos_rsa @ryanflorence I don‚Äôt think people writing React applications necessarily think of it that way since t‚Ä¶ https://t.co/1rD65dPmdM
1099081289716588500,Fri Feb 22 22:59:34 +0000 2019,@kryptos_rsa @ryanflorence The DOM is an implementation detail in a world with JavaScript. The source of truth is i‚Ä¶ https://t.co/gFMkBnm8Dv
1099070354364887000,Fri Feb 22 22:16:06 +0000 2019,@ryanflorence Yes you can always ‚Äúfix‚Äù it by manually focusing things but I‚Äôm trying to come up with a better default behavior.
1099070079679885300,Fri Feb 22 22:15:01 +0000 2019,@ryanflorence That seems like a specific use of popovers. I can imagine others, eg where multiple floating panels a‚Ä¶ https://t.co/VW9chE21xV
1099066622893948900,Fri Feb 22 22:01:17 +0000 2019,@ryanflorence Typically popovers of some kind. They aren‚Äôt necessarily focus trapped. You sometimes want to allow t‚Ä¶ https://t.co/5Ck0ScazPa
1099061138086518800,Fri Feb 22 21:39:29 +0000 2019,@undefinedbuddy @bukharim96 @TheLarkInn @parceljs @webpack You're right about needing to update them.
1099057036648636400,Fri Feb 22 21:23:11 +0000 2019,@undefinedbuddy @TheLarkInn @bukharim96 @parceljs @webpack TodoMVC is not nearly big enough to show anything useful IMO.
1099055992145248300,Fri Feb 22 21:19:02 +0000 2019,@undefinedbuddy @TheLarkInn @bukharim96 @parceljs @webpack Those are real numbers, albeit a bit outdated. They come‚Ä¶ https://t.co/rlSIWbcXDc
1099054850153734100,Fri Feb 22 21:14:30 +0000 2019,@TheLarkInn @undefinedbuddy @bukharim96 @parceljs @webpack Yeah, but we still will support Node 8 so I think the wo‚Ä¶ https://t.co/GkWGhUBpMA
1099054651666624500,Fri Feb 22 21:13:43 +0000 2019,@sompylasar Yep, I agree. Focus locking is a (separate) part of the RFC I'm writing.
1099054280114196500,Fri Feb 22 21:12:14 +0000 2019,@undefinedbuddy @bukharim96 @parceljs @webpack @TheLarkInn Multicore makes a HUGE difference for large apps. I have‚Ä¶ https://t.co/PU28NVuRGE
1099046789364121600,Fri Feb 22 20:42:28 +0000 2019,@ryanflorence Also think about ‚Äúnested‚Äù portals. They aren‚Äôt nested in the DOM but should probably work as if they are.
1099044712281849900,Fri Feb 22 20:34:13 +0000 2019,@ryanflorence The popover might not necessarily close when tabbing out of it I don‚Äôt think.  Also If the input in t‚Ä¶ https://t.co/X0KGeBJapU
1099041055062646800,Fri Feb 22 20:19:41 +0000 2019,RT @devongovett: @wesbos Yeah the problem is that changing the implementation of the Portal component might change the behavior of tabbing‚Ä¶
1099040933520134100,Fri Feb 22 20:19:12 +0000 2019,@ryanflorence Maybe it's in a popover or some kind of dropdown?
1099040645304377300,Fri Feb 22 20:18:03 +0000 2019,@wesbos Yeah the problem is that changing the implementation of the Portal component might change the behavior of t‚Ä¶ https://t.co/OG142k1go9
1099039904325980200,Fri Feb 22 20:15:07 +0000 2019,RT @devongovett: @wesbos Good question! üòâ  That was kind of the point. You don't necessarily know!  In this example, the portal is after th‚Ä¶
1099039808637132800,Fri Feb 22 20:14:44 +0000 2019,@wesbos Good question! üòâ  That was kind of the point. You don't necessarily know!  In this example, the portal is a‚Ä¶ https://t.co/KueNYXOHfK
1099039096867934200,Fri Feb 22 20:11:54 +0000 2019,Poll: what would you expect the tab order to be for the example in the previous tweet?
1099039094150094800,Fri Feb 22 20:11:53 +0000 2019,Working on a focus management RFC for React. What would you expect the tab order to be when using React portals? No‚Ä¶ https://t.co/h1XapvgOWv
1099037201961078800,Fri Feb 22 20:04:22 +0000 2019,@jkup unfollowed
1098322537665114100,Wed Feb 20 20:44:33 +0000 2019,@sawtoothsamo Imagine some code that has conditional logic that checks values that would normally only be known at‚Ä¶ https://t.co/urw4iCNkkr
1098302114625810400,Wed Feb 20 19:23:24 +0000 2019,@radokirov yeah I think a minifier using type info would need to take that into account and bail out for `any` type‚Ä¶ https://t.co/PKFNAlrEdI
1098264555107496000,Wed Feb 20 16:54:09 +0000 2019,RT @humphd: @devongovett Everyone responding to you with "Closure does this, did this years ago!"  But a question I'm left wondering is why‚Ä¶
1098141328842485800,Wed Feb 20 08:44:29 +0000 2019,@quinnirill Like this? https://t.co/vChnNhXdRr
1098115941924106200,Wed Feb 20 07:03:37 +0000 2019,@MarkTheThomas yeah repack is cool. not sure it relies on types though?
1098115788542664700,Wed Feb 20 07:03:00 +0000 2019,@TheLarkInn nice, would love to hear more about this.
1098026658294952000,Wed Feb 20 01:08:50 +0000 2019,@drosenwasser Haha yeah closure had everything. I mean in modern tooling that people actually use. üòâ
1098023144999202800,Wed Feb 20 00:54:52 +0000 2019,I think there is a great unexplored area of research on JS minifiers and optimizers using type systems.  Imagine be‚Ä¶ https://t.co/0KTIfSQwUC
1097655706667208700,Tue Feb 19 00:34:48 +0000 2019,@ryanflorence Now I really want hooks that can *write* to context as well. Having to make library users include you‚Ä¶ https://t.co/yJbLQsKwZR
1097583393443786800,Mon Feb 18 19:47:27 +0000 2019,@piamancini @filmaj @opencollect @richlitt @github Yeah I think so
1097582588703649800,Mon Feb 18 19:44:15 +0000 2019,@piamancini @filmaj @opencollect @richlitt Also could work well for the core team to get help from the community, a‚Ä¶ https://t.co/059fAekr1J
1097582239913717800,Mon Feb 18 19:42:52 +0000 2019,@piamancini @filmaj @opencollect @richlitt I think it could be really important to reward people who aren‚Äôt part of‚Ä¶ https://t.co/IX6qYrzeoU
1097579409140179000,Mon Feb 18 19:31:37 +0000 2019,@xdamman I think people often wonder how they can contribute. For OSS, writing code is the obvious answer. But it w‚Ä¶ https://t.co/g1syK5UfTC
1097578379476316200,Mon Feb 18 19:27:32 +0000 2019,@piamancini @filmaj @opencollect @richlitt The problem is that we have a new version we are working on which is not‚Ä¶ https://t.co/lnsVWdRj3K
1097578109962879000,Mon Feb 18 19:26:28 +0000 2019,@piamancini @filmaj @opencollect @richlitt I think bounties for issues would be valuable (literally üòú), but I‚Äôm not‚Ä¶ https://t.co/crKJmlYg1C
1097406057691996200,Mon Feb 18 08:02:47 +0000 2019,Maintaining the old version of a project while rewriting the new version is pretty frustrating sometimes. Stop sending me PRs! üòú
1097254090898268200,Sun Feb 17 21:58:55 +0000 2019,@undefinedbuddy @swyx @parceljs it mostly works just fine for me, and I have some pretty big parcel projects. pleas‚Ä¶ https://t.co/WcEDtlgfzC
1097248584519409700,Sun Feb 17 21:37:03 +0000 2019,@swyx Yeah it does but we wrap it in a separate process so it can‚Äôt crash the main one, which is also quite a bit f‚Ä¶ https://t.co/w7NqKPGE6j
1097234206214651900,Sun Feb 17 20:39:55 +0000 2019,@swyx Don‚Äôt use it if you need to watch a large number of files. It‚Äôs pretty buggy.
1096912206476718100,Sat Feb 16 23:20:24 +0000 2019,@sarah_federman @ryanflorence @jamiebuilds Yeah Microsoft Azure‚Äôs web interface does this too, and I find it really hard to use.
1096684698779041800,Sat Feb 16 08:16:22 +0000 2019,@theKashey What problem?
1096575662704320500,Sat Feb 16 01:03:06 +0000 2019,More thoughts on a focus management API for React. Thinking about a possible `FocusScope` builtin component, which‚Ä¶ https://t.co/xcl8YzT6qH
1096474063051022300,Fri Feb 15 18:19:22 +0000 2019,Some thoughts on what this API might look like: https://t.co/sDIrEpi7Vg  I think there should be an `activeComponen‚Ä¶ https://t.co/cWDlyp4kAn
1096464405301063700,Fri Feb 15 17:41:00 +0000 2019,I‚Äôm considering writing an RFC for a focus management API in React. If you have experience or opinions on this, or‚Ä¶ https://t.co/ehEYaPpTNC
1096282930341544000,Fri Feb 15 05:39:53 +0000 2019,@jasonlaster11 I‚Äôm considering writing an RFC for a React focus management API. Trying to get feedback from the‚Ä¶ https://t.co/WQgerURnEs
1096192268564754400,Thu Feb 14 23:39:37 +0000 2019,@brandonsheehy_ good questions. I‚Äôm not sure what the API looks like yet, but I think it needs to be in react core‚Ä¶ https://t.co/uPmwlbuIT0
1096181283233755100,Thu Feb 14 22:55:58 +0000 2019,@yawaramin doesn‚Äôt really change much IMO. You still need refs and imperative DOM calls. I‚Äôm looking for a more dec‚Ä¶ https://t.co/k5AW48gU2G
1096180670596931600,Thu Feb 14 22:53:32 +0000 2019,Focus management in react components is like the wild west. It‚Äôs one of the only things where we have to touch the‚Ä¶ https://t.co/p5Hrfl5o4T
1095888406872125400,Thu Feb 14 03:32:11 +0000 2019,@ryanflorence @Oobert @ReactTraining for sure, a default at least as an example is important. people can then refer‚Ä¶ https://t.co/SoFB8ojFI3
1095870495105241100,Thu Feb 14 02:21:00 +0000 2019,@Oobert @ryanflorence @ReactTraining I am thinking that hooks solve this problem perfectly. You can finally separat‚Ä¶ https://t.co/ouA9ZKszM6
1095858328234684400,Thu Feb 14 01:32:40 +0000 2019,@ryanflorence @ReactTraining We should talk. We are basically building the same thing at Adobe, and we have a whole‚Ä¶ https://t.co/TvCqvNcYeS
1095518613300142100,Wed Feb 13 03:02:45 +0000 2019,(I know I‚Äôm late to this. Finally got a chance to play with them today, so I‚Äôm a little excited. üòâ)
1095518197518745600,Wed Feb 13 03:01:06 +0000 2019,Current status: rewriting everything in hooks! ‚öõÔ∏è ‚öìü§Ø  Seriously, this is going to be amazing. My dream UI library is finally possible! üòç
1095490904595427300,Wed Feb 13 01:12:39 +0000 2019,@jkup come to by desk and I‚Äôll fix that for you üòâ
1095373779084156900,Tue Feb 12 17:27:14 +0000 2019,@kosamari @parceljs I‚Äôm glad that came across ok. I wrote it in the middle of the night on some serious jet lag aft‚Ä¶ https://t.co/NWXFIKWPDO
1095285104304214000,Tue Feb 12 11:34:52 +0000 2019,Documentation should be available in as many languages as possible. The barrier to entry cannot include learning En‚Ä¶ https://t.co/hl6MXKI8bk
1094889358220378100,Mon Feb 11 09:22:19 +0000 2019,NRT ‚úàÔ∏è SFO  Skiing in Hokkaido was amazing! We had 3 days of epic waist deep powder on every run. The snow is so li‚Ä¶ https://t.co/k1HgvbMaSU
1094415646614523900,Sun Feb 10 01:59:58 +0000 2019,@iansu @jamiebuilds Haha does it have a wasm target?
1094413748884910100,Sun Feb 10 01:52:25 +0000 2019,@iansu @jamiebuilds Omg this is too much. Someone has way too much free time! üòÜ
1094383024052097000,Sat Feb 09 23:50:20 +0000 2019,@jamiebuilds Emoji based programming language? ü§î
1093802828596944900,Fri Feb 08 09:24:50 +0000 2019,@tbranyen @Rich_Harris Also, functions may have side effects or return non-deterministic results based out outside‚Ä¶ https://t.co/CplJsICnYo
1093802807000526800,Fri Feb 08 09:24:45 +0000 2019,@tbranyen @Rich_Harris Function source isn‚Äôt enough. You also need to external track dependencies like require/impo‚Ä¶ https://t.co/GgJLI9WkuP
1092906617245298700,Tue Feb 05 22:03:37 +0000 2019,@fasterthanlime Awesome. I‚Äôm back in the city on Tuesday. We should meet up!
1092905748760162300,Tue Feb 05 22:00:10 +0000 2019,@fasterthanlime How long are you in town?
1092201175884038100,Sun Feb 03 23:20:27 +0000 2019,@tolmasky @sebmarkbage @ryanflorence I‚Äôm excited to see more experimentation in this space. Parcel 2 has a complete‚Ä¶ https://t.co/FDjuDK4MDJ
1092197008964644900,Sun Feb 03 23:03:53 +0000 2019,@sebmarkbage @ryanflorence @tolmasky Perhaps a sufficiently smart tool could optimize bundles over time rather than‚Ä¶ https://t.co/msVgyojxib
1092194399906259000,Sun Feb 03 22:53:31 +0000 2019,@ryanflorence @tolmasky Yeah for sure, I mean expose it in the CLI after the build finishes along with the bundle size report.
1092193626682056700,Sun Feb 03 22:50:27 +0000 2019,@tolmasky @ryanflorence Seems like an interesting feature for Parcel... ü§î We could pretty easily track which bundles changed across builds.
1092174703001690100,Sun Feb 03 21:35:15 +0000 2019,RT @tolmasky: In a lot of ways, tree-shaking is like optimizing your cold boot times while inadvertently *ensuring* that you almost always‚Ä¶
1092173540013498400,Sun Feb 03 21:30:38 +0000 2019,RT @tolmasky: Tree-shaking could be an anti-optimization. The ideal is for your libraries, which change less often than your app code, to b‚Ä¶
1092062834668650500,Sun Feb 03 14:10:43 +0000 2019,Fancy birthday drink #1. Since I‚Äôm in Japan time, I get to celebrate twice, right? üòâ https://t.co/ukO22btDLQ
1091956357102747600,Sun Feb 03 07:07:37 +0000 2019,RT @dan_abramov: üìùI wrote most of what I know about React on a single page. This is deep dive and not a beginner-friendly post! I don‚Äôt bel‚Ä¶
1091796279007502300,Sat Feb 02 20:31:32 +0000 2019,Enjoying Japan! So far, we visited Tokyo for a night and then headed to Hakuba for some skiing. Next, Matsumoto and‚Ä¶ https://t.co/PpLK9Z61jm
1090684396615553000,Wed Jan 30 18:53:18 +0000 2019,RT @parceljs: Today is the LAST DAY to get a Parcel t-shirt or hoodie during our second print run! üëï   https://t.co/9LJSqBaGCo  We haven‚Äôt‚Ä¶
1090628994104385500,Wed Jan 30 15:13:09 +0000 2019,SFO ‚úàÔ∏è NRT üáØüáµ  Going skiing in Japan!! üéøüòÜ
1090026739374248000,Mon Jan 28 23:20:01 +0000 2019,RT @dan_abramov: Love the honest self-reflection in this @flowtype post. Here‚Äôs what they‚Äôve been up to ‚Äî and why the team has been so busy‚Ä¶
1089621677950955500,Sun Jan 27 20:30:26 +0000 2019,@sebmarkbage @niieani That would be very interesting for sure.
1089610334736834600,Sun Jan 27 19:45:22 +0000 2019,@Rich_Harris Sure. I think I‚Äôd rather go for correctness and disable caching altogether with a warning for users, a‚Ä¶ https://t.co/DKLbVvm2ED
1089609958616789000,Sun Jan 27 19:43:52 +0000 2019,@niieani Yeah possible but complex. And there are still cases where it would t work. JS can have side effects, like‚Ä¶ https://t.co/6ldaOjtgh0
1089607714605428700,Sun Jan 27 19:34:57 +0000 2019,@Rich_Harris Yeah and I‚Äôm sure that‚Äôs why they went with JS for babel.config.js. The problem is that there is no al‚Ä¶ https://t.co/lLBT7vx2lA
1089606839417729000,Sun Jan 27 19:31:29 +0000 2019,@niieani The problem with JS is that it can be non-deterministic. You could return a different object every time.
1089606650510532600,Sun Jan 27 19:30:44 +0000 2019,@tbranyen @Rich_Harris The problem with JS is that it can be non-deterministic. You could return a different object every time.
1089606426450772000,Sun Jan 27 19:29:50 +0000 2019,@Rich_Harris What things would you trade in this case?
1089602107081076700,Sun Jan 27 19:12:40 +0000 2019,@CodingItWrong JSON5 has those https://t.co/0p50RD6RSk
1089599100331319300,Sun Jan 27 19:00:43 +0000 2019,This is why Parcel 2's upcoming `.parcelrc` file is pure JSON and does not allow JavaScript, in addition to encoura‚Ä¶ https://t.co/L9uK1PRQaS
1089598284425916400,Sun Jan 27 18:57:29 +0000 2019,Allowing JavaScript in config files (e.g. `babel.config.js`) is a major design mistake because it makes anything re‚Ä¶ https://t.co/RAL9MKnRCa
1089574856645996500,Sun Jan 27 17:24:23 +0000 2019,RT @parceljs: üì£ Parcel t-shirts and hoodies are back by popular demand (over üíØ requests on @cottonbureau)! If you missed out in the first b‚Ä¶
1089327133158035500,Sun Jan 27 01:00:01 +0000 2019,@rauchg @addyosmani Prepare for ad networks to mark every ad image high priority‚Ä¶ üòê
1088620493991624700,Fri Jan 25 02:12:06 +0000 2019,Flow is better than TypeScript. Fight me.
1088617991623737300,Fri Jan 25 02:02:09 +0000 2019,@tbranyen @padmaia @jasonlaster11 very interesting‚Ä¶
1088555358170144800,Thu Jan 24 21:53:16 +0000 2019,RT @devongovett: Wrote an RFC for the Parcel 2 programmatic API that external tools like framework specific CLIs, SSR tools, etc. could use‚Ä¶
1088510492295872500,Thu Jan 24 18:54:59 +0000 2019,If you were ever confused about CSS selector specificity, this is amazing! üòÇüê† https://t.co/hun4ZawB8R https://t.co/XizLKPU1Cr
1088486560830390300,Thu Jan 24 17:19:53 +0000 2019,Wrote an RFC for the Parcel 2 programmatic API that external tools like framework specific CLIs, SSR tools, etc. co‚Ä¶ https://t.co/HiyPWgBWe8
1088472436826202100,Thu Jan 24 16:23:46 +0000 2019,RT @arcanis: Yarn v2's development officially started. Yarn will become a modular architecture powered by plugins and written in TypeScript‚Ä¶
1088220286753763300,Wed Jan 23 23:41:49 +0000 2019,@a_gain_st If you use require or import for an image file, you will get back a URL to that image. Then you can load‚Ä¶ https://t.co/4s8cs51elG
1088197492737400800,Wed Jan 23 22:11:14 +0000 2019,RT @devongovett: Only a few days left to get a @parceljs t-shirt during the second print run. If you missed out last time, now is your chan‚Ä¶
1088124570433798100,Wed Jan 23 17:21:28 +0000 2019,@tckscz @parceljs Hmmm that seems bad. cc @cottonbureau
1088116463943053300,Wed Jan 23 16:49:15 +0000 2019,Only a few days left to get a @parceljs t-shirt during the second print run. If you missed out last time, now is yo‚Ä¶ https://t.co/OBjkYLXNaG
1088091534694568000,Wed Jan 23 15:10:12 +0000 2019,@neoziro Hmm, maybe. What‚Äôs the usecase for that? I‚Äôd rather not implement non-standard (webpack specific) things i‚Ä¶ https://t.co/Hwbw8yepPG
1088091087011344400,Wed Jan 23 15:08:25 +0000 2019,@a_gain_st What do you mean by this? Would love to help, but need more details.
1087844354998202400,Tue Jan 22 22:48:00 +0000 2019,RT @cottonbureau: ‚ÄúParcel‚Äù still needs 3 orders to deliver a second print run.  https://t.co/iDhsKtq3jy https://t.co/WbrtyhqELX
1087844290028494800,Tue Jan 22 22:47:44 +0000 2019,Just merged support for ‚Äúruntime‚Äù plugins into Parcel 2, which allow you to inject code into bundles at build time.‚Ä¶ https://t.co/4cUhiqah5l
1087165593805942800,Mon Jan 21 01:50:50 +0000 2019,A wet and snowy day at Tahoe. ‚õ∑‚ùÑÔ∏è https://t.co/tccHtZ6efB
1086155709341827100,Fri Jan 18 06:57:55 +0000 2019,RT @github: We're kicking off the conversation on OSS sustainability and talking about: - Scaling projects - Scaling communities - Maintena‚Ä¶
1086106743958954000,Fri Jan 18 03:43:21 +0000 2019,@GarthDB Dang! Get well soon.
1085388557106233300,Wed Jan 16 04:09:32 +0000 2019,Pretty amazing skiing at Whistler this past week. üèî‚õ∑ https://t.co/Zq2N8lp4cb
1085280739082461200,Tue Jan 15 21:01:06 +0000 2019,@vihanbh @wojtekmaj91 @MikeCluck @samccone @dan_abramov @parceljs Yep supports Babel 7 now!
1085246360624844800,Tue Jan 15 18:44:29 +0000 2019,RT @PostCSS: PostCSS 7.0.11 was released. @mischnic found and fix source map bug during his work on the amazing @parceljs builder.  https:/‚Ä¶
1084951628808179700,Mon Jan 14 23:13:20 +0000 2019,RT @devongovett: HUGE thanks to @zeithq for becoming the first GOLD ü•á sponsor of @parceljs! ü§Ø  https://t.co/RNoArxreVK  Your support means‚Ä¶
1084882654921662500,Mon Jan 14 18:39:15 +0000 2019,HUGE thanks to @zeithq for becoming the first GOLD ü•á sponsor of @parceljs! ü§Ø  https://t.co/RNoArxreVK  Your support‚Ä¶ https://t.co/UagjWyfoZ7
1083739095862366200,Fri Jan 11 14:55:10 +0000 2019,@Maarlon1 Could you please file a bug on GitHub?
1083034364949147600,Wed Jan 09 16:14:49 +0000 2019,RT @mweststrate: Late at the party, but after getting stuck in with some errors I didn't comprehend in CRA / webpack, figured to try @parce‚Ä¶
1082410442398539800,Mon Jan 07 22:55:34 +0000 2019,RT @devongovett: üì£ Want to follow along with our progress on @parceljs v2? Now you can, thanks to @padmaia! ü•≥  https://t.co/vLr9yEA5N3  Int‚Ä¶
1082320747635314700,Mon Jan 07 16:59:09 +0000 2019,üì£ Want to follow along with our progress on @parceljs v2? Now you can, thanks to @padmaia! ü•≥‚Ä¶ https://t.co/h8gbhmGW0J
1082011553937936400,Sun Jan 06 20:30:31 +0000 2019,RT @diegomura: ‚ú® Happy to announce #reactpdf 1.0 was just released ‚ú®  It's been a long journey since the project started and I'm excited al‚Ä¶
1081601299127390200,Sat Jan 05 17:20:19 +0000 2019,@CompuIves @bazzjuh Damn, I‚Äôm gonna miss you this time. Have fun!
1081601041207099400,Sat Jan 05 17:19:18 +0000 2019,@jkup @CompuIves @bazzjuh Haha that was crazy üòú
1081336376535195600,Fri Jan 04 23:47:37 +0000 2019,@brian_d_vaughn Add features to the elements panel to match the normal DOM tree panel so you don't have to keep swi‚Ä¶ https://t.co/cC1DjFfCRT
1081261013431976000,Fri Jan 04 18:48:09 +0000 2019,@mxstbr Happy birthday! üéâ
1081163991244857300,Fri Jan 04 12:22:37 +0000 2019,@AdamRackis Have you heard of @parceljs? üòâ
1080589026879524900,Wed Jan 02 22:17:55 +0000 2019,@brockmdavis @holtbt üòçüòçüòç
1080544346485727200,Wed Jan 02 19:20:22 +0000 2019,RT @devongovett: ‚ö°Ô∏è Do you use @electronjs? What would your ideal build tool for Electron look like? We want to make it happen in @parceljs‚Ä¶
1080493698964770800,Wed Jan 02 15:59:07 +0000 2019,‚ö°Ô∏è Do you use @electronjs? What would your ideal build tool for Electron look like? We want to make it happen in‚Ä¶ https://t.co/voQK1BgMaN
1079966621228245000,Tue Jan 01 05:04:41 +0000 2019,Happy new year everyone! Let‚Äôs make 2019 a great one. ü•≥
1079755505579499500,Mon Dec 31 15:05:48 +0000 2018,RT @dan_abramov: üìù New on Overreacted: The Elements of UI Engineering. What makes UI engineering difficult? https://t.co/gh89vKXORQ
1079436471147421700,Sun Dec 30 17:58:04 +0000 2018,Huge thanks to @FrontendMasters and @1Marc for your generous $1,000 donation to @parceljs! Your support means a lot‚Ä¶ https://t.co/MB0e239UC0
1079425314844041200,Sun Dec 30 17:13:44 +0000 2018,RT @mabdullah1171: Yayyy! my first ever contribution in @parceljs and many more to come!  https://t.co/9HtjijlXg6  thanks @devongovett for‚Ä¶
1078125496167268400,Thu Dec 27 03:08:43 +0000 2018,@letsbsocial1 @parceljs Oh no. What happened? We‚Äôd love to fix this! Did you file an issue?
1078026501415751700,Wed Dec 26 20:35:21 +0000 2018,RT @devongovett: Open sourced the code we used to sync our Christmas lights to music! üéÑüí°  https://t.co/8bmwBkUOZM  Includes docs and pictur‚Ä¶
1077949338993729500,Wed Dec 26 15:28:44 +0000 2018,@nsthorat https://t.co/kjfN4gPTnJ
1077949273029951500,Wed Dec 26 15:28:28 +0000 2018,@rawkode @danagovett Haha not yet!
1077949273029951500,Wed Dec 26 15:28:28 +0000 2018,@rawkode @danagovett Haha not yet!
1077947110681649200,Wed Dec 26 15:19:53 +0000 2018,Open sourced the code we used to sync our Christmas lights to music! üéÑüí°  https://t.co/8bmwBkUOZM  Includes docs and‚Ä¶ https://t.co/Wt4faYPIhw
1077740653449228300,Wed Dec 26 01:39:29 +0000 2018,@nsthorat The analysis is pretty simple actually. Just buckets frequency ranges from an FFT into 8 groups, and turn‚Ä¶ https://t.co/ypTiLVoh16
1077726571144851500,Wed Dec 26 00:43:32 +0000 2018,See previous tweets for pics of the wiring process.  https://t.co/sXfwn3HM8E https://t.co/J0GmVRrZLo‚Ä¶ https://t.co/V5rNA43G0k
1077725421356101600,Wed Dec 26 00:38:58 +0000 2018,Synced our Christmas lights to music with @danagovett! üéÑ   Used a raspberry pi, 8 relays, a ton of wiring, and the‚Ä¶ https://t.co/7IdNPwW5K9
1077314977445437400,Mon Dec 24 21:28:00 +0000 2018,RT @dfkaye: @devongovett Arrived, just in time https://t.co/YRqmfWxHwZ
1076872816597848000,Sun Dec 23 16:11:01 +0000 2018,@lfredolo @HenrikJoreteg Coming in Parcel 2! üòâ https://t.co/EyykwHBoD9
1076872475387019300,Sun Dec 23 16:09:40 +0000 2018,@renaudin_yann Parcel has plugins too üòâ
1076860589341884400,Sun Dec 23 15:22:26 +0000 2018,@xdamman I‚Äôm very impressed! The shirts are very soft and high quality, and the printing is crisp. üëç  I didn‚Äôt have‚Ä¶ https://t.co/TcyAnrKSCM
1076721595891281900,Sun Dec 23 06:10:07 +0000 2018,@jamiebuilds Possibly, though idk how well that will run on a raspberry pi üòâ
1076721131149844500,Sun Dec 23 06:08:16 +0000 2018,Anyone know of an implementation of the Web Audio API for Node? Surprised that no one has ported the one from Chrome‚Ä¶
1076588529092911100,Sat Dec 22 21:21:22 +0000 2018,Yay, @parceljs shirts came, just in time for Christmas! üéÑüëï Thanks @cottonbureau. üòç  Send a pic if you got yours. üòâ https://t.co/FtzjYxYWmR
1076372424998993900,Sat Dec 22 07:02:38 +0000 2018,RT @edm00se: My sweet new @parceljs shirt came in the mail today, just in time for Christmas. üéÑ https://t.co/3xV4ByabbI
1076347758284603400,Sat Dec 22 05:24:37 +0000 2018,Built a box and put everything inside for the finished product. üëç https://t.co/v23DUCW7tn
1076316740349542400,Sat Dec 22 03:21:22 +0000 2018,@titanve https://t.co/rMVasGHfZf
1076266905936244700,Sat Dec 22 00:03:21 +0000 2018,It works!! And I didn‚Äôt electrocute myself. ‚ö°Ô∏èüéÑ https://t.co/9Lq8d9n8Xk
1076247155474600000,Fri Dec 21 22:44:52 +0000 2018,Relay connected with raspberry pi. About to connect power. Wish me luck! üò¨‚ö°Ô∏è https://t.co/1nolwESBXR
1076232032148164600,Fri Dec 21 21:44:46 +0000 2018,@ThisIsMissEm Relay controlled outlets for Christmas lights üòä
1076230032106893300,Fri Dec 21 21:36:49 +0000 2018,Trying my hand at a hardware project. üéÑ  If I burn down the house, it was nice knowing you all. üòÇ https://t.co/LcDN0Pgcw6
1075603287473238000,Thu Dec 20 04:06:22 +0000 2018,RT @sindresorhus: I'm very excited to announce AVA 1.0 üöÄ https://t.co/3UIvnjrKWM
1075176908994764800,Tue Dec 18 23:52:05 +0000 2018,RT @parceljs: Parcel v1.11.0 is out! üöÄ  ‚ö°Ô∏è Zero config @kotlin support! üî• HMR for @elmlang üè† Add `--host` CLI option üéÑ Tree shaking improve‚Ä¶
1075104108359540700,Tue Dec 18 19:02:48 +0000 2018,Parcel v1.11.0 is the first release that uses some of the packages we split out for v2! üéâ  https://t.co/Iqyfvqdoea‚Ä¶ https://t.co/I64iOlPqZU
1074801508250574800,Mon Dec 17 23:00:23 +0000 2018,RT @devongovett: In Parcel 2, namer plugins allow creating and sharing custom bundle naming schemes as npm packages. üì¶  The default namer s‚Ä¶
1074790209378611200,Mon Dec 17 22:15:29 +0000 2018,RT @pouyio: How to use @typescriptlang in a @vuejs app with @parceljs in two steps: 1. Use typescript 2. TADAAAA ü§Ø https://t.co/yW9LE3ZEwG
1074755161287843800,Mon Dec 17 19:56:13 +0000 2018,RT @parceljs: We now have a watercooler chat room in Spectrum for general Parcel community chat. Come hang out with us and introduce yourse‚Ä¶
1074728669254275100,Mon Dec 17 18:10:56 +0000 2018,PR for the default namer is coming along if you're curious how easy it will be to create custom plugins! üéâ https://t.co/T588GUy8L0
1074728667178164200,Mon Dec 17 18:10:56 +0000 2018,In Parcel 2, namer plugins allow creating and sharing custom bundle naming schemes as npm packages. üì¶  The default‚Ä¶ https://t.co/1aGa9U4rkA
1074403826625437700,Sun Dec 16 20:40:08 +0000 2018,@_developit haha it‚Äôs probably fine üòâ https://t.co/o2PbYsebpO
1074402816662265900,Sun Dec 16 20:36:07 +0000 2018,@_developit Parsing HTML with regex?! The horror! üò¨
1073661751936278500,Fri Dec 14 19:31:23 +0000 2018,RT @left_pad: Babel holiday apparel, designed (2 yrs ago üòÇ) by @kosamari!  Sorry I lost the original so wasn't able to change the pricing..‚Ä¶
1073660768275447800,Fri Dec 14 19:27:29 +0000 2018,@jamiebuilds CSS is static by definition whereas JS is not.
1073649522402676700,Fri Dec 14 18:42:48 +0000 2018,@sitnikcode I suppose, but I‚Äôd still rather separate it out I think. I prefer small files. üòú
1073643802370265100,Fri Dec 14 18:20:04 +0000 2018,@sitnikcode Better, but I still don‚Äôt know why you would want to write CSS inside JS files rather than separate. Th‚Ä¶ https://t.co/OYPFUg9Yy5
1073631244250796000,Fri Dec 14 17:30:10 +0000 2018,RT @devongovett: CSS is a language specifically designed for styling rather than a general purpose programming language. As a result, it is‚Ä¶
1073631042169270300,Fri Dec 14 17:29:22 +0000 2018,RT @devongovett: CSS-in-JS is bad for the web and needs to be stopped.  The most popular implementations don‚Äôt even support extracting to a‚Ä¶
1073630952100753400,Fri Dec 14 17:29:00 +0000 2018,@jamiebuilds Haha yeah I‚Äôve been saying this for a while https://t.co/JFPysUpcNH
1073263528113463300,Thu Dec 13 17:09:00 +0000 2018,RT @ChromiumDev: üî• Class fields are coming to JavaScript!  Public class fields ship in @v8js v7.2 and Chrome 72, and work is underway to su‚Ä¶
1072999570596974600,Wed Dec 12 23:40:07 +0000 2018,RT @devongovett: PR is up for the code splitting work in Parcel 2! üöÄ  https://t.co/leI0I4tqLL  Wrote some details about the design if you'r‚Ä¶
1072936391867195400,Wed Dec 12 19:29:04 +0000 2018,@mtrebizan haha yeah it seems to die on flow annotations for private properties‚Ä¶
1072911057037877200,Wed Dec 12 17:48:24 +0000 2018,PR is up for the code splitting work in Parcel 2! üöÄ  https://t.co/leI0I4tqLL  Wrote some details about the design i‚Ä¶ https://t.co/DrTcjiRG2n
1072735364433891300,Wed Dec 12 06:10:15 +0000 2018,@jamiebuilds just wait until early next year üòâ
1072555381002551300,Tue Dec 11 18:15:04 +0000 2018,Huge thanks to the community. Without you this would not be even close to a reality. Most of those features were im‚Ä¶ https://t.co/QlfouKhHMz
1072555379517743100,Tue Dec 11 18:15:04 +0000 2018,Realized that I missed the 1 year birthday of @parceljs last week (Dec 5)! üéÇüéÅüéâ  Launch blog post:‚Ä¶ https://t.co/vvyKxfIqEx
1072305497829724200,Tue Dec 11 01:42:07 +0000 2018,@devonbl haha @jamiebuilds that‚Äôll be fun üòú
1072301045156638700,Tue Dec 11 01:24:26 +0000 2018,@devonbl sure, sounds good. pretty much available whenever.
1072297335227641900,Tue Dec 11 01:09:41 +0000 2018,@devonbl I could speak about parcel sometime
1072240614433947600,Mon Dec 10 21:24:18 +0000 2018,RT @babeljs: Cool use of filing a Babel issue with a reproducible example with @runkitdev and the Content Attachments API! https://t.co/Ytp‚Ä¶
1072227872197161000,Mon Dec 10 20:33:40 +0000 2018,@Daniel15 https://t.co/e1Enj0xwnd
1072201692890914800,Mon Dec 10 18:49:38 +0000 2018,RT @_eddieantonio: New blog post! Deploying a @parceljs app on @zeithq's Now 2.0: https://t.co/VgaxmRWMCx  üòª
1072194924961980400,Mon Dec 10 18:22:45 +0000 2018,@ryanflorence We are getting close to an alpha, but it won‚Äôt have many of the features of Parcel 1 yet.  We will ne‚Ä¶ https://t.co/ouhqmP4al1
1072191040902189000,Mon Dec 10 18:07:19 +0000 2018,The best part: it is all automatic with zero configuration! üëè  No manually configuring vendor bundles.  No manual s‚Ä¶ https://t.co/jt29EUfaDy
1072191038964490200,Mon Dec 10 18:07:18 +0000 2018,Really excited about the work we are doing on code splitting in Parcel 2! ‚úÇÔ∏è  Here is an example of a bundle with a‚Ä¶ https://t.co/gXHI8DBK0v
1072176121918087200,Mon Dec 10 17:08:02 +0000 2018,RT @devongovett: I keep seeing people claim that tree shaking CommonJS is impossible. This is false. @parceljs does it, and it works just a‚Ä¶
1072173951021805600,Mon Dec 10 16:59:24 +0000 2018,@_justineo @floydophone @cybwn @BrendanEich @parceljs While this is true, I‚Äôd say 95% of CommonJS modules are also‚Ä¶ https://t.co/GxUlHgV5uN
1071904936860901400,Sun Dec 09 23:10:26 +0000 2018,Framing this tweet. ü§© https://t.co/dA7nKiLDVJ
1071902843940945900,Sun Dec 09 23:02:07 +0000 2018,@AdamRackis @intelligibabble That part wasn‚Äôt specifically directed at you. üòâ  People seem to think it‚Äôs way harder‚Ä¶ https://t.co/iLNSS5YYBS
1071902145241202700,Sun Dec 09 22:59:21 +0000 2018,@satya164 @parceljs true! I believe it bails out (wraps entire module in function) in a lot more cases than parcel though.
1071900668862980100,Sun Dec 09 22:53:29 +0000 2018,@intelligibabble @AdamRackis https://t.co/zsHqOjdJYO
1071899968078667800,Sun Dec 09 22:50:41 +0000 2018,I keep seeing people claim that tree shaking CommonJS is impossible. This is false. @parceljs does it, and it works‚Ä¶ https://t.co/r4C5oFK6Eq
1071827543576068100,Sun Dec 09 18:02:54 +0000 2018,RT @ChromiumDev: üì£Announcing Puppeteer for Firefox ü§πüèª‚Äç‚ôÇÔ∏èüíïü¶ä  An experimental project for controlling Firefox using Puppeteer's API. Still mi‚Ä¶
1071591764253790200,Sun Dec 09 02:26:00 +0000 2018,@intelligibabble @TheLarkInn @jaredpalmer @ryanflorence This is possible by making separate builds for modern/legac‚Ä¶ https://t.co/g4MtM6NQiQ
1071513538298966000,Sat Dec 08 21:15:09 +0000 2018,@jamiebuilds @dan_abramov @ryanflorence Sometimes it requires humans to be involved with upgrading (e.g. changing c‚Ä¶ https://t.co/OaFi7OrOml
1071509462672826400,Sat Dec 08 20:58:58 +0000 2018,@jamiebuilds @dan_abramov @ryanflorence Sometimes multiple versions is ‚Äúintentional‚Äù. Eg two separate teams working‚Ä¶ https://t.co/RDiiT8Ax00
1071492899102064600,Sat Dec 08 19:53:09 +0000 2018,@left_pad You should work with @cottonbureau. They were amazing to work with for the @parceljs shirt. I was really‚Ä¶ https://t.co/Ucn27t1wFx
1070878561886564400,Fri Dec 07 03:11:59 +0000 2018,@sarah_federman WHAAAAAT?! congrats. we‚Äôll miss you.
1070823069051084800,Thu Dec 06 23:31:29 +0000 2018,@jamiebuilds Idk but they have a lot of money in their open collective account...
1070811551018319900,Thu Dec 06 22:45:43 +0000 2018,WOW, blown away by @bower‚Äôs very generous $100/month donation to @parceljs! Thank you so much! üòçüôè  Really cool to s‚Ä¶ https://t.co/cqFqBxuWKD
1070719266029101000,Thu Dec 06 16:39:00 +0000 2018,@kylemathews @RReverser @jordwalke Yup, but it means the settings are not ‚Äúhard coded‚Äù as the original tweet stated‚Ä¶ https://t.co/f0FK9CeOm6
1070702108112900100,Thu Dec 06 15:30:49 +0000 2018,@RReverser @jordwalke Nope, nothing is hard coded. You can override or augment the supported file types just by ins‚Ä¶ https://t.co/bQdLFv8FmQ
1070691433890295800,Thu Dec 06 14:48:24 +0000 2018,@TheLarkInn True but that doesn‚Äôt mean it shouldn‚Äôt be easy to do üòú
1070688677515251700,Thu Dec 06 14:37:27 +0000 2018,RT @devongovett: @jordwalke This is a common misconception. ‚Äúzero-config‚Äù doesn‚Äôt mean non-configurable, or hard coded. It often means conf‚Ä¶
1070688444509151200,Thu Dec 06 14:36:32 +0000 2018,@jordwalke This is a common misconception. ‚Äúzero-config‚Äù doesn‚Äôt mean non-configurable, or hard coded. It often mea‚Ä¶ https://t.co/D6D0m4yGlc
1070584914460893200,Thu Dec 06 07:45:08 +0000 2018,RT @rmondello: Safari Tech Preview 71 is out! Highlights: * Added Web Authentication as an experimental feature with support for USB-based‚Ä¶
1070502573797367800,Thu Dec 06 02:17:57 +0000 2018,@jkup @webpack what is this comment syntax??
1070396668862881800,Wed Dec 05 19:17:07 +0000 2018,@RollupJS @FredKSchott @webpack @parceljs Yeah it‚Äôs currently under the `--experimental-scope-hoisting` flag.
1070392319017283600,Wed Dec 05 18:59:50 +0000 2018,RT @npmjs: join the thousands of developers sharing their thoughts on npm, javascript, and software development. take a little time to comp‚Ä¶
1070384770129907700,Wed Dec 05 18:29:50 +0000 2018,RT @devongovett: @RollupJS @FredKSchott @webpack @parceljs Parcel doesn‚Äôt really convert commonjs to ESM, and takes a different approach to‚Ä¶
1070364008803270700,Wed Dec 05 17:07:20 +0000 2018,@RollupJS @FredKSchott @webpack @parceljs Parcel doesn‚Äôt really convert commonjs to ESM, and takes a different appr‚Ä¶ https://t.co/4ymzM76sKD
1070220978347683800,Wed Dec 05 07:38:59 +0000 2018,@FredKSchott @webpack @RollupJS @parceljs Yep, when you turn tree shaking on it is supported for both ESM and Commo‚Ä¶ https://t.co/P3r8cFqo8w
1070218750048198700,Wed Dec 05 07:30:08 +0000 2018,RT @devongovett: @FredKSchott @webpack @RollupJS @parceljs Slight correction: parcel can also tree shake CommonJS modules! ESM syntax is no‚Ä¶
1070218319368609800,Wed Dec 05 07:28:25 +0000 2018,@FredKSchott @webpack @RollupJS @parceljs Slight correction: parcel can also tree shake CommonJS modules! ESM synta‚Ä¶ https://t.co/tMI40iLZ40
1069787307983564800,Tue Dec 04 02:55:44 +0000 2018,Crazy town. https://t.co/7iu5tapcVW
1069787139708076000,Tue Dec 04 02:55:04 +0000 2018,RT @zacbowden: EXCLUSIVE: Microsoft is building a Chromium-powered web browser that will replace Edge on Windows 10 https://t.co/zsybM9ZfRq
1069716781428748300,Mon Dec 03 22:15:29 +0000 2018,Making good progress on Parcel 2! ‚ö°Ô∏è  Just made a PR for the new @babeljs transformer. https://t.co/wuGmy6ag9N  It‚Ä¶ https://t.co/X43Fe4QYZ6
1069714992218308600,Mon Dec 03 22:08:23 +0000 2018,üëï Free code is gone, but here‚Äôs a 10% off one for just my closest friends on Twitter. üòú  WWD9CNJ9GJ  Only 6 hours l‚Ä¶ https://t.co/fMTvFDdEFR
1069641146442235900,Mon Dec 03 17:14:56 +0000 2018,‚è∞ Only a few hours left to get a @parceljs shirt before they are gone! üëï  https://t.co/FMrVDhNISZ  Not sure when th‚Ä¶ https://t.co/Kic7Xkgm9v
1069628962232401900,Mon Dec 03 16:26:31 +0000 2018,RT @cottonbureau: Don't say we didn't warn you! All campaign tees end at midnight ET! So make a list and check it twice, cuz this is your l‚Ä¶
1069469621982351400,Mon Dec 03 05:53:22 +0000 2018,RT @parceljs: Only 1 DAY left to order a Parcel t-shirt or hoodie! üëï   We are almost at 75 orders! If we hit that number, Parcel gets $1 of‚Ä¶
1069367994113916900,Sun Dec 02 23:09:32 +0000 2018,@oskarhane @parceljs Awesome, thank you! üôè
1069354455924060200,Sun Dec 02 22:15:44 +0000 2018,Only 1 DAY left to order a @parceljs shirt! üëï   We are almost at 75 orders! If we hit that number, Parcel gets $1 o‚Ä¶ https://t.co/pXohkYfeDZ
1069353950527123500,Sun Dec 02 22:13:44 +0000 2018,@youyuxi Yeah all that sounds good, and Flow is certainly a bit buggy, but the other things I tweeted about still keep me away.
1069347844752953300,Sun Dec 02 21:49:28 +0000 2018,@youyuxi What changed for you?
1069328274629701600,Sun Dec 02 20:31:42 +0000 2018,@mgechev @CompuIves @kylemathews @mjesun @rafeca @Jakeherringbone I‚Äôm fairly free this week.
1069323266701967400,Sun Dec 02 20:11:48 +0000 2018,@mgechev @CompuIves @kylemathews @mjesun @rafeca Let‚Äôs chat about this sometime! üòä
1069322345439944700,Sun Dec 02 20:08:08 +0000 2018,@ken_wheeler Yeah flow is also pretty nice in vs code for autocomplete.
1069322030871339000,Sun Dec 02 20:06:53 +0000 2018,@jamiebuilds Oh, what changed?
1069320589867765800,Sun Dec 02 20:01:10 +0000 2018,@CompuIves @kylemathews @mgechev @mjesun @rafeca Nifty. Glad to see people tackling this problem. I‚Äôve been wanting‚Ä¶ https://t.co/UkZkJA55Jp
1069317992960290800,Sun Dec 02 19:50:51 +0000 2018,Time for a new lightweight JS type system? üòú
1069317992096268300,Sun Dec 02 19:50:50 +0000 2018,TL;DR I want to write JS, with optional types. Not some other language.  Flow is currently a way to do that. I‚Äôm no‚Ä¶ https://t.co/THvTqmQ8OG
1069317991282561000,Sun Dec 02 19:50:50 +0000 2018,- Despite what they say, TS is NOT a superset of JS. It changes the semantics of JS in subtle ways. - The community‚Ä¶ https://t.co/8Lx3Wwuzyf
1069317990435311600,Sun Dec 02 19:50:50 +0000 2018,Reasons I‚Äôm not using TypeScript:  - It‚Äôs a whole separate language with its own compiler and other tooling. At lea‚Ä¶ https://t.co/zNh2sz9vPz
1069315816007458800,Sun Dec 02 19:42:12 +0000 2018,@threepointone That was a genuine question. I didn‚Äôt tell them they had to use parcel.
1069314736381059100,Sun Dec 02 19:37:54 +0000 2018,@threepointone I don‚Äôt go around telling people using webpack that they have to use parcel or they‚Äôre doing it wron‚Ä¶ https://t.co/o7Ap2MkARD
1069310312287895600,Sun Dec 02 19:20:19 +0000 2018,So inevitably after I literally said ‚Äúdon‚Äôt tell me to use typescript‚Äù I got tons of people telling me to use types‚Ä¶ https://t.co/uhaZ9a29Ce
1069081708891258900,Sun Dec 02 04:11:56 +0000 2018,@TheLarkInn that‚Äôs interesting! might have to check it out.
1069077433729445900,Sun Dec 02 03:54:57 +0000 2018,@amasad yeah flow does seem a bit buggy‚Ä¶
1069077297976631300,Sun Dec 02 03:54:24 +0000 2018,@TheLarkInn but the jsdocs don‚Äôt do actual type checking though right? just for documentation?
1069070440029597700,Sun Dec 02 03:27:09 +0000 2018,And please don‚Äôt tell me to use typescript instead. I don‚Äôt think that‚Äôs the issue here at all.
1069069765681995800,Sun Dec 02 03:24:29 +0000 2018,Parcel 2 is my first real project using a JS type system (flow). Feels like I‚Äôm spending most of my time fighting t‚Ä¶ https://t.co/9YqKRzfA7h
1069024362412396500,Sun Dec 02 00:24:04 +0000 2018,If @reactjs supported the Accessibility Object Model as a first-class citizen, perhaps it could look like this. Wha‚Ä¶ https://t.co/Axn9p6fVhJ
1069001873963663400,Sat Dec 01 22:54:42 +0000 2018,Explicit accessibility events could also be really interesting in order to provide different optimized experiences‚Ä¶ https://t.co/CcDXQ8eRYW
1069001873141588000,Sat Dec 01 22:54:42 +0000 2018,Having a separate accessibility tree is really awesome. We often have a very complicated DOM tree in order to rende‚Ä¶ https://t.co/ZN5Hyqyizr
1069001872252366800,Sat Dec 01 22:54:42 +0000 2018,‚ôøÔ∏è Excited about the Accessibility Object Model spec: https://t.co/QRrushFv73  Allows rendering a parallel accessib‚Ä¶ https://t.co/kUl1KWjwYe
1068935348007227400,Sat Dec 01 18:30:21 +0000 2018,@jamiebuilds Happy birthday! üéâ
1068923446292176900,Sat Dec 01 17:43:03 +0000 2018,RT @opencollect: Profits go to support the parcel community on https://t.co/3a0j3IkXsv üôå  (selling t-shirts and other goodies is a great wa‚Ä¶
1068784207328030700,Sat Dec 01 08:29:46 +0000 2018,RT @andywritescode: I dare to say: Running code in a browser for testing has never been easier üî•  Good bye, karma. Welcome, puppet-run! ü§ñ‚Ä¶
1068700801722331100,Sat Dec 01 02:58:21 +0000 2018,RT @devongovett: ‚ö°Ô∏è Only 3 days left to get a @parceljs t-shirt or hoodie! üëï  We just hit 50 orders, which is super awesome. üëè If we hit 75‚Ä¶
1068560279863091200,Fri Nov 30 17:39:58 +0000 2018,‚ö°Ô∏è Only 3 days left to get a @parceljs t-shirt or hoodie! üëï  We just hit 50 orders, which is super awesome. üëè If we‚Ä¶ https://t.co/DnXSzj5BVX
1068558329000022000,Fri Nov 30 17:32:13 +0000 2018,@mxstbr whoa, congrats @mxstbr @superbryntendo @brian_lovin! üëè
1068558184791531500,Fri Nov 30 17:31:38 +0000 2018,RT @mxstbr: üéâüéâüéâ Spectrum is now part of GitHub!! üéâüéâüéâ  I joined @superbryntendo and @brian_lovin‚Äôs quest to build Spectrum because I needed‚Ä¶
1068181230632370200,Thu Nov 29 16:33:45 +0000 2018,‚ú® Thanks to decaffeinate, PDFKit has FINALLY been converted from CoffeeScript to ES6! üî•üëè https://t.co/y38R7Yldds  ‚úÖ‚Ä¶ https://t.co/rkV9nynZIZ
1068169405991796700,Thu Nov 29 15:46:46 +0000 2018,RT @Rich_Harris: What if JavaScript were a truly reactive programming language?  let a = 1; let b &lt;= a * 2;  a = 2; console.log(b); // 4  W‚Ä¶
1067936454414786600,Thu Nov 29 00:21:06 +0000 2018,@rauchg haha nice. glad to see that package still works. üòâ
1067936286512623600,Thu Nov 29 00:20:26 +0000 2018,RT @rauchg: Brought to you by pdfkit! https://t.co/vGCQuApzgv https://t.co/lShHf2jPLk
1067936223958691800,Thu Nov 29 00:20:11 +0000 2018,RT @rauchg: Serverless PDF generation with Now https://t.co/jCGPzzSzER https://t.co/MoojgbB7GX
1067921077630718000,Wed Nov 28 23:20:00 +0000 2018,RT @devongovett: Up to 42 orders! üî• Thanks everyone. üôè   Only 8 more to get to 50. We can do it! üòç  https://t.co/FMrVDhNISZ https://t.co/q6‚Ä¶
1067821585745174500,Wed Nov 28 16:44:39 +0000 2018,Flight landed 15 minutes early at SFO, so naturally we sat on the tarmac for OVER AN ENTIRE HOUR AND 15 MINUTES bef‚Ä¶ https://t.co/dB1axk9rnE
1067809045313028100,Wed Nov 28 15:54:49 +0000 2018,RT @ryanchenkie: Wanted!  10x rockstar developer üî•  Responsibilities include: * Merging PRs immediately * Making new features on demand * F‚Ä¶
1067803869332168700,Wed Nov 28 15:34:15 +0000 2018,RT @reactjs: We wrote a roadmap for the next React 16.x releases! You might have heard about "Hooks", "Suspense", and "Concurrent Mode" fro‚Ä¶
1067801858931023900,Wed Nov 28 15:26:16 +0000 2018,Up to 42 orders! üî• Thanks everyone. üôè   Only 8 more to get to 50. We can do it! üòç  https://t.co/FMrVDhNISZ https://t.co/q6FPUttatr
1067598396590968800,Wed Nov 28 01:57:47 +0000 2018,@ryanflorence 0.14 still for some projects üòê
1067597258382692400,Wed Nov 28 01:53:16 +0000 2018,RT @dan_abramov: This is a nice in-depth overview of what happens inside the React reconciler. You don‚Äôt need to know it to use React, but‚Ä¶
1067511198713692200,Tue Nov 27 20:11:17 +0000 2018,The California coast is crazy beautiful. ‚òÄÔ∏è https://t.co/TxYXA84a3k
1067488426163753000,Tue Nov 27 18:40:48 +0000 2018,@wesbos Yep, you need to `import ‚Äòbabel-polyfill‚Äô` in your app though. We don‚Äôt enable `useBuiltIns: ‚Äòusage‚Äô` be de‚Ä¶ https://t.co/icH8hpffi2
1067484809516081200,Tue Nov 27 18:26:26 +0000 2018,OK, done with the promotional content for today! üòâ
1067484605521977300,Tue Nov 27 18:25:37 +0000 2018,In addition to supporting @parceljs, if you order a t-shirt or hoodie from @cottonbureau using code ALLTHETEES, you‚Ä¶ https://t.co/ZgB5ojKBGE
1067481281103978500,Tue Nov 27 18:12:24 +0000 2018,Your daily reminder to buy a @parceljs t-shirt or hoodie! üòú  https://t.co/FMrVDhNISZ  Only 6 days left. We‚Äôre at 33‚Ä¶ https://t.co/O4rXJFlv3Z
1067231311767646200,Tue Nov 27 01:39:07 +0000 2018,RT @cottonbureau: ‚ÄúParcel T-Shirt‚Äù is delivering! 30+ orders for @parceljs!  https://t.co/nZTYlWVBH3? https://t.co/FKl0nZ6j5E
1067210518362869800,Tue Nov 27 00:16:30 +0000 2018,@Maarlon1 @parceljs We would be happy to help you out! Please file an issue on Github or post on https://t.co/9KJfiqCP8Z for help. üòâ
1067195174416089100,Mon Nov 26 23:15:31 +0000 2018,@timneutkens @rauchg @zeithq Yeah sure but parcel also does a lot more. Most of that is probably Babel. Parcel 2 wi‚Ä¶ https://t.co/iSCL1ukqqL
1067165042909429800,Mon Nov 26 21:15:47 +0000 2018,@rauchg @zeithq Yeah that‚Äôs kinda the idea of Parcel‚Äôs zero config philosophy. Parcel already supports most of the‚Ä¶ https://t.co/UGkaPUepjH
1067137334443831300,Mon Nov 26 19:25:41 +0000 2018,RT @devongovett: @zeithq Isn‚Äôt this the same as `parcel build main.js --target=node --bundle-node-modules`?
1067136675640311800,Mon Nov 26 19:23:04 +0000 2018,@zeithq Isn‚Äôt this the same as `parcel build main.js --target=node --bundle-node-modules`?
1067126235338162200,Mon Nov 26 18:41:35 +0000 2018,Winner has been DMed. Thanks for your contributions everyone! üôè  I‚Äôll have another code to give out when we hit 50‚Ä¶ https://t.co/X5VKBqkaCM
1066807917569990700,Sun Nov 25 21:36:42 +0000 2018,@jkup Yep! üëç
1066807593941663700,Sun Nov 25 21:35:25 +0000 2018,Wine tasting with the family in Napa. üç∑ https://t.co/EvZI6FmLHA
1066761680850309100,Sun Nov 25 18:32:58 +0000 2018,Funding open source projects is hard but necessary. We give you 1000s of hours of work for free, but this is not su‚Ä¶ https://t.co/PZ6iVVq4oK
1066759273231736800,Sun Nov 25 18:23:24 +0000 2018,@MartinLClifford Sorry, funding open source is hard. üòê
1066751608241832000,Sun Nov 25 17:52:57 +0000 2018,Yay, we passed 25 @parceljs shirt orders! üëïüëè  I have one more promo code for a FREE shirt. ü•≥  If you have contribut‚Ä¶ https://t.co/QOO6CeQckR
1066511726030479400,Sun Nov 25 01:59:44 +0000 2018,RT @devongovett: Winner has been randomly selected and DMed. Thanks for the retweets everyone! üòä  Remember, once we hit 25 orders I‚Äôll give‚Ä¶
1066364660465598500,Sat Nov 24 16:15:21 +0000 2018,Winner has been randomly selected and DMed. Thanks for the retweets everyone! üòä  Remember, once we hit 25 orders I‚Äô‚Ä¶ https://t.co/47abN4Fsa0
1066232406359691300,Sat Nov 24 07:29:49 +0000 2018,RT @devongovett: I have a promo code for one FREE @parceljs t-shirt or hoodie, which I will give away to someone who retweets this today. ‚ú®‚Ä¶
1066023939200020500,Fri Nov 23 17:41:27 +0000 2018,I have a promo code for one FREE @parceljs t-shirt or hoodie, which I will give away to someone who retweets this t‚Ä¶ https://t.co/zyjNp3koky
1065845009604202500,Fri Nov 23 05:50:27 +0000 2018,RT @left_pad: Thankful for this open source community: this online neighborhood of friends that continually teaches me to give and receive‚Ä¶
1065787385726754800,Fri Nov 23 02:01:28 +0000 2018,RT @devongovett: Today I'm thankful for open source! ü•∞ It's incredible what we have accomplished in just 1 year on @parceljs. üëè  To show my‚Ä¶
1065694768527663100,Thu Nov 22 19:53:27 +0000 2018,Thank you @babeljs, @left_pad, @loganfsmyth, @sindresorhus, @hughskennedy, @mafintosh, @feross, @yoshuawuyts,‚Ä¶ https://t.co/Al26ciHOS5
1065690272137265200,Thu Nov 22 19:35:35 +0000 2018,Today I'm thankful for open source! ü•∞ It's incredible what we have accomplished in just 1 year on @parceljs. üëè  To‚Ä¶ https://t.co/sDUNhKQe22
1065492714467156000,Thu Nov 22 06:30:33 +0000 2018,@xxxTy3uKxxx @cottonbureau @parceljs @timkim Looks like it‚Äôs possible! Did you try putting in your address on the checkout screen?
1065479910314041300,Thu Nov 22 05:39:40 +0000 2018,RT @devongovett: üì£ I am super excited to announce that we are working with @cottonbureau to produce @parceljs t-shirts and hoodies featurin‚Ä¶
1065424114121236500,Thu Nov 22 01:57:58 +0000 2018,It was https://t.co/YcknzlVMAf
1065422839363207200,Thu Nov 22 01:52:54 +0000 2018,RT @parceljs: Come get your Parcel swag!! üî•üî•  https://t.co/9LJSqBaGCo https://t.co/tf5jw1ArZZ
1065341240969850900,Wed Nov 21 20:28:39 +0000 2018,RT @xxxTy3uKxxx: @devongovett @parceljs @cottonbureau @timkim Animals in boxes are super cute! Pug joins to the party! https://t.co/MIG5Dor‚Ä¶
1065332210973139000,Wed Nov 21 19:52:46 +0000 2018,All proceeds are automatically sent to our @opencollect account, so you can feel good supporting the development of‚Ä¶ https://t.co/6R4ZiJYTnP
1065332111589048300,Wed Nov 21 19:52:22 +0000 2018,üì£ I am super excited to announce that we are working with @cottonbureau to produce @parceljs t-shirts and hoodies f‚Ä¶ https://t.co/MtN4LoHUH7
1065292029670768600,Wed Nov 21 17:13:06 +0000 2018,RT @dany0w: @devongovett @parceljs We‚Äôre switching parts of the https://t.co/i6iSNPqs1h packaging to parcel üî•
1065292013426233300,Wed Nov 21 17:13:02 +0000 2018,@dany0w @parceljs Oh that‚Äôs awesome! ü•≥
1065285126647468000,Wed Nov 21 16:45:40 +0000 2018,Got a super exciting announcement in the works for @parceljs... üòú
1065264260207435800,Wed Nov 21 15:22:45 +0000 2018,Amazing to see a program manager from Microsoft Azure Pipelines open an issue on @parceljs to improve reporting, an‚Ä¶ https://t.co/OlOhTovBpy
1064725342395322400,Tue Nov 20 03:41:17 +0000 2018,@jamiebuilds Lol right after we moved parcel onto flow haha üòÇ
1064691514255695900,Tue Nov 20 01:26:52 +0000 2018,@jkup @parceljs December 5th! https://t.co/C5TqCmfmi2
1064587189143560200,Mon Nov 19 18:32:19 +0000 2018,@HenrikJoreteg We‚Äôre currently focused on getting Parcel 2 out the door but I‚Äôd love to see an RFC for this!
1064556255815983100,Mon Nov 19 16:29:24 +0000 2018,For a tool that‚Äôs only been out for less than a year, @parceljs placed pretty well on the 2018 State of JS survey!‚Ä¶ https://t.co/ANcHQemqeG
1064300751520849900,Sun Nov 18 23:34:07 +0000 2018,Wildfire smoke seen from my flight back to SF.üò∑ https://t.co/uUHLb2kNbF
1064237308105285600,Sun Nov 18 19:22:01 +0000 2018,Pretty glad to have spent the weekend in Salt Lake City, away from the bad air in SF. üò∑   Also unreasonably excited‚Ä¶ https://t.co/YPWeUcXZdt
1063812996869177300,Sat Nov 17 15:15:57 +0000 2018,@ramlmn Please file an issue if you have suggestions to improve parcel!
1063601928888705000,Sat Nov 17 01:17:15 +0000 2018,@sebmck Would love to meet and chat about this sometime. I think we have many of the same goals. üòâ
1063562118711062500,Fri Nov 16 22:39:03 +0000 2018,Parcel‚Äôs tree shaking implementation works exactly like this. We concatenate the modules together in a smart way (r‚Ä¶ https://t.co/eDjiefVNmh
1063467266371543000,Fri Nov 16 16:22:09 +0000 2018,RT @devongovett: The CSS implementation for Spectrum, our design system at @Adobe, just went open source! Really excited about this. üòÜ http‚Ä¶
1063215404426772500,Thu Nov 15 23:41:20 +0000 2018,The CSS implementation for Spectrum, our design system at @Adobe, just went open source! Really excited about this.‚Ä¶ https://t.co/dHDauvahY1
1063188581127077900,Thu Nov 15 21:54:45 +0000 2018,@kentcdodds @Adobe Haha yeah I was giving a talk on Parcel right after you or I would have caught you!
1063186338881560600,Thu Nov 15 21:45:50 +0000 2018,@kentcdodds @Adobe Great talk man! üòä
1062776185405374500,Wed Nov 14 18:36:02 +0000 2018,RT @HenrikJoreteg: Regularly scheduled reminder that @parceljs is an incredible bundler   But, be warned, it will be very hard to go back t‚Ä¶
1062744983491436500,Wed Nov 14 16:32:03 +0000 2018,lol @GarthDB üòÇ https://t.co/qFS0SoKGPy
1062565210861367300,Wed Nov 14 04:37:42 +0000 2018,This is pretty cool, but in my extensive experience building virtual scrollers, if it doesn‚Äôt support customizable‚Ä¶ https://t.co/DPbBMFhVIY
1062212090587373600,Tue Nov 13 05:14:31 +0000 2018,RT @webkit: Introducing the Web High Level Shading Language, allowing for next-generation graphics with the WebGPU API! https://t.co/PflQDR‚Ä¶
1062211267971219500,Tue Nov 13 05:11:15 +0000 2018,Great new site from Google @ChromiumDev about building faster, more reliable web apps. Noticed some @parceljs shout‚Ä¶ https://t.co/x6XAMNm3eu
1061495684925317100,Sun Nov 11 05:47:47 +0000 2018,RT @seldo: Cloudflare is burying the lede here a bit: they have built a cloud platform that costs a third of what AWS costs and can run any‚Ä¶
1060938342693400600,Fri Nov 09 16:53:06 +0000 2018,San Francisco currently has an air quality index of 177, which is considered unhealthy and is very noticeable.  Tha‚Ä¶ https://t.co/p8cDaEpcx0
1060935657747435500,Fri Nov 09 16:42:26 +0000 2018,Pretty crazy sunrise this morning due to wildfires over 150 miles away. https://t.co/n6UsZP3ulz
1060641133938696200,Thu Nov 08 21:12:06 +0000 2018,Multi-target builds in Parcel 2 are starting to come together! üôå  This graph shows what it would look like to have‚Ä¶ https://t.co/f5d0C3xKGX
1060413772316082200,Thu Nov 08 06:08:39 +0000 2018,@npmjs @npm_support your download stats seem a bit low across all packages the past few days. Is there a known issue?
1059810675231346700,Tue Nov 06 14:12:09 +0000 2018,USA people: please go vote today. It‚Äôs really important and you will feel good doing it! üá∫üá∏ https://t.co/O34nTcRqX3
1059638177399365600,Tue Nov 06 02:46:43 +0000 2018,RT @AndreasPizsa: Writing a PWA and want automatic updates for your app? Your `manifest` file needs the stay under the same URL.  Just subm‚Ä¶
1059471988429713400,Mon Nov 05 15:46:20 +0000 2018,@richardiii This is already supported. We have a raw asset which can represent any file to link to.
1059469781798010900,Mon Nov 05 15:37:34 +0000 2018,Parcel 2 also supports "connected files", which are files that affect assets in the graph, but are not assets thems‚Ä¶ https://t.co/ubVNk4rpPe
1059469781798010900,Mon Nov 05 15:37:34 +0000 2018,Parcel 2 also supports "connected files", which are files that affect assets in the graph, but are not assets thems‚Ä¶ https://t.co/ubVNk4rpPe
1059469781093384200,Mon Nov 05 15:37:34 +0000 2018,Parcel 2 will also support building for multiple targets simultaneously!  You could have a target for modern browse‚Ä¶ https://t.co/SIgCAcCGfm
1059469779226914800,Mon Nov 05 15:37:34 +0000 2018,Parcel 2 will enable even faster rebuilds for file types with multiple parts (e.g. Vue, HTML). üî•  If you had a Vue‚Ä¶ https://t.co/n7mAlh0YJG
1059469778786500600,Mon Nov 05 15:37:33 +0000 2018,Really excited about the Parcel 2 asset graph and what it will enable. üßµ
1058186095345594400,Fri Nov 02 02:36:39 +0000 2018,Hackathon dinner with team @parceljs! Made some pretty awesome progress on Parcel 2 this week. üî•üòä https://t.co/qqw9POuj6I
1057025426986491900,Mon Oct 29 21:44:35 +0000 2018,Parcel v2 hackathon number 2 commences! A whole week with most of the core team together in SF. Super excited. üòÇ https://t.co/pXHvIyko0l
1056577952186478600,Sun Oct 28 16:06:28 +0000 2018,@shellscape https://t.co/tCShN9eKGt
1055447962464088000,Thu Oct 25 13:16:18 +0000 2018,RT @macstoriesnet: Safari Technology Preview Allows Websites to Switch Themes Based on Mojave‚Äôs Dark Mode https://t.co/sRVotisKkl
1055089635829796900,Wed Oct 24 13:32:26 +0000 2018,@dan_abramov Function components in particular have some pretty big missing features compared to class components,‚Ä¶ https://t.co/eYrz1X6b8L
1055089559338311700,Wed Oct 24 13:32:08 +0000 2018,@dan_abramov Hah yeah that‚Äôs another issue IMO, just the number of component types there are now. Of course there a‚Ä¶ https://t.co/wgFg41xF3k
1055086068121296900,Wed Oct 24 13:18:15 +0000 2018,@sebmarkbage @dan_abramov IMO api ease of use is more important than accommodating for react‚Äôs internals. Preact ju‚Ä¶ https://t.co/0EhZAuyeZn
1054967839428354000,Wed Oct 24 05:28:27 +0000 2018,@dan_abramov What‚Äôs different about memo from a general memoize function?
1054962192297197600,Wed Oct 24 05:06:01 +0000 2018,@dan_abramov 1. Anything that could be done in userland. memo, pure component‚Ä¶  2. Children - just use arrays. I kn‚Ä¶ https://t.co/NIcj5LL5s8
1054956002146172900,Wed Oct 24 04:41:25 +0000 2018,React has too many features in core now. The API used to be so simple! üòê https://t.co/pdVcnHKSPH
1054955824513204200,Wed Oct 24 04:40:43 +0000 2018,RT @reactjs: React 16.6 is hot off the presses! üò± ‚Äì React.memo (like PureComponent but for function components) ‚Äì React.lazy (code splittin‚Ä¶
1054859655355088900,Tue Oct 23 22:18:34 +0000 2018,@jamiebuilds @AdamRackis @padmaia @JasperDeMoor Coming to the hackathon next week?
1054859126885429200,Tue Oct 23 22:16:28 +0000 2018,@jamiebuilds @AdamRackis @padmaia @JasperDeMoor We could always use more help üòâ
1054570989554552800,Tue Oct 23 03:11:31 +0000 2018,@ryanflorence @sarah_federman haha that it is not üòÖ
1054561487140741100,Tue Oct 23 02:33:45 +0000 2018,Great article on the future of WebAssembly by @linclark. We‚Äôve really only scratched the surface so far! üî• https://t.co/cQUg1hMuA1
1054008880026382300,Sun Oct 21 13:57:54 +0000 2018,@yeukang @parceljs Will be possible using plugins in Parcel 2
1053705264422019100,Sat Oct 20 17:51:26 +0000 2018,@tweetbot audio playback (eg overcast) seems to pause when switching to Tweetbot in the latest version. Tried turni‚Ä¶ https://t.co/Jse9y0uDr2
1053649310569574400,Sat Oct 20 14:09:06 +0000 2018,New pure black dark ui in @tweetbot on iPhone X is üî•. More like this please. Where is native dark mode for iOS, @Apple?
1053304228867825700,Fri Oct 19 15:17:52 +0000 2018,@HarrisFreddy @dan_abramov yeah I understand that, I‚Äôm wondering why they aren‚Äôt pure by default.
1053276572998717400,Fri Oct 19 13:27:58 +0000 2018,@dan_abramov Oh wow I assumed that function components were already pure by default. Why is that not the case?
1053268207325204500,Fri Oct 19 12:54:44 +0000 2018,Always fun to catch up with Henry! üòä https://t.co/l0XjsaTWTN
1053268164304236500,Fri Oct 19 12:54:33 +0000 2018,RT @left_pad: Didn't eat here, but it's nice! Thanks to @devongovett for lunch yesterday, always a pleasure to visit good ol Adobe üòÅ (only‚Ä¶
1052949390132883500,Thu Oct 18 15:47:52 +0000 2018,Parcel 2 monorepo is starting to come together! Already extracted the worker farm and logger from Parcel 1 into the‚Ä¶ https://t.co/v2OUCbLkog
1052912078967660500,Thu Oct 18 13:19:36 +0000 2018,@behdadesfahbod Awesome, congrats! üëè
1052662132288806900,Wed Oct 17 20:46:24 +0000 2018,@CompuIves @code congrats, amazing work! üî•
1052662027737419800,Wed Oct 17 20:45:59 +0000 2018,RT @CompuIves: I'm so proud to finally release VSCode in CodeSandbox!  We now run a big chunk of @code directly in the browser, so you get:‚Ä¶
1052553485747552300,Wed Oct 17 13:34:41 +0000 2018,Super awesome intro to @parceljs from @andrew_j_mead. üëè Thanks for the ‚ù§Ô∏è. Check it out: https://t.co/jDUOJD17e0 https://t.co/lEfa7fv5NH
1052529148403507200,Wed Oct 17 11:57:58 +0000 2018,Whaaaat! This is going to be amazing. üî•ü§Ø https://t.co/GLfRvqzDue
1052275222009663500,Tue Oct 16 19:08:57 +0000 2018,@GrzegorzSzeliga What would you like to see?
1052219111797743600,Tue Oct 16 15:26:00 +0000 2018,@samccone yeah this plugin uses the graph to visualize bundle contents for example: https://t.co/4wZug3UcXB
1052214033607082000,Tue Oct 16 15:05:49 +0000 2018,RT @andrew_j_mead: My free mini-course ‚ÄúParcel: A Zero-Configuration Webpack Alternative‚Äù is now live! You‚Äôll learn how to setup Parcel and‚Ä¶
1052003185206878200,Tue Oct 16 01:07:59 +0000 2018,@boheekim Not sure. Maybe around Christmas or New Years?
1051906835555311600,Mon Oct 15 18:45:07 +0000 2018,RT @devongovett: @immatthamlin yeah! There is the RFC doc which is pretty detailed about the architecture of Parcel 2. https://t.co/tONLfwH‚Ä¶
1051906799509504000,Mon Oct 15 18:44:59 +0000 2018,@Yurick_ always things to learn! we are happy for contributions big and small. :)
1051906689182527500,Mon Oct 15 18:44:32 +0000 2018,@immatthamlin yeah! There is the RFC doc which is pretty detailed about the architecture of Parcel 2. https://t.co/tONLfwH05C
1051906676628938800,Mon Oct 15 18:44:29 +0000 2018,@Am_Vasi check out the RFC! It‚Äôs pretty detailed about the architecture for Parcel 2. https://t.co/tONLfwH05C
1051860443508006900,Mon Oct 15 15:40:47 +0000 2018,Started creating tickets for Parcel 2 on Github! ‚ö°Ô∏è https://t.co/MnjPXYOEGI  Feel free to follow along as we are im‚Ä¶ https://t.co/thR3raahwS
1051833432739696600,Mon Oct 15 13:53:27 +0000 2018,@boheekim @nytimes congrats!
1051436232318705700,Sun Oct 14 11:35:07 +0000 2018,Up at 4am. I love jet lag. üòê
1050802751930859500,Fri Oct 12 17:37:53 +0000 2018,RT @LogRocket: Switching to Parcel from Webpack https://t.co/8m8H6F2AnC #webdevelopment
1050647646690373600,Fri Oct 12 07:21:33 +0000 2018,Wish GitHub supported the --follow flag on git log so file moves and renames would be tracked in the history/blame‚Ä¶ https://t.co/B5t46gmNO3
1050508755539042300,Thu Oct 11 22:09:39 +0000 2018,@jamiebuilds yeah yeah‚Ä¶ we‚Äôve struggled to come up with the right API though. hard to be declarative at a component‚Ä¶ https://t.co/GQaf7X0N2f
1050508407092973600,Thu Oct 11 22:08:16 +0000 2018,Super excited about the work @padmaia is doing on the core for @parceljs v2! üî•  The asset graph data structures are‚Ä¶ https://t.co/C1Lk5c4Fbb
1050507334332616700,Thu Oct 11 22:04:00 +0000 2018,@jamiebuilds 1058 ‚Äî still could be way better IMO. Having to use refs in every component to manage focus is not gre‚Ä¶ https://t.co/EnW2xj5YxX
1049739139288043500,Tue Oct 09 19:11:28 +0000 2018,Enjoying Paris so far! üëç https://t.co/iDJ9WVVKkP
1049704826857300000,Tue Oct 09 16:55:07 +0000 2018,This is crazy. I‚Äôm getting 60fps on my iPhone! ü§Ø https://t.co/kEwYM7AYP1
1049704382881824800,Tue Oct 09 16:53:22 +0000 2018,RT @phoboslab: Ported the JSMpeg MPEG1 and MP2 decoders to WebAssembly. Not that it's a good idea, but you can now decode 4k MPEG1 videos i‚Ä¶
1049420862242390000,Mon Oct 08 22:06:45 +0000 2018,Super awesome that the new version of @FrontendMasters ‚ÄúComplete Intro to React‚Äù course is using @parceljs! üî•   Loo‚Ä¶ https://t.co/cgnf9iJoTm
1048875000516812800,Sun Oct 07 09:57:41 +0000 2018,RT @parceljs: üîé The Parcel website now has documentation search, powered by @algolia! üî•  Works across all available translations. Try it ou‚Ä¶
1048686908669415400,Sat Oct 06 21:30:17 +0000 2018,@greweb Sounds good! I will DM you. üòä
1048620448366415900,Sat Oct 06 17:06:11 +0000 2018,RT @parceljs: Parcel v1.10.2 is out, including some bugfixes and improvements. üöÄ  üèó Fix loading WASM inside Web Workers üñº Fix detection of‚Ä¶
1048492614918570000,Sat Oct 06 08:38:14 +0000 2018,Hello Paris! I‚Äôm here for the week. Anyone want to meet up? https://t.co/vxTVzdFqsI
1048246280370237400,Fri Oct 05 16:19:23 +0000 2018,@yeukang @withspectrum @parceljs This will be overridable via plugins in Parcel 2
1046109012880760800,Sat Sep 29 18:46:39 +0000 2018,RT @swyx: Thank you @ReactBoston for having me!  I need your PR's to test babel-blade ‚õ∏Ô∏è  Docs: https://t.co/t42D1OrEmg Github: https://t.c‚Ä¶
1046060210677338100,Sat Sep 29 15:32:43 +0000 2018,@dan_abramov Ah, all good. Feel better!
1046037417826963500,Sat Sep 29 14:02:09 +0000 2018,@left_pad @dan_abramov Totally. I‚Äôm not sure what the solution is, but I believe it is a problem worth solving.
1046036984920240100,Sat Sep 29 14:00:26 +0000 2018,@left_pad @dan_abramov Also things that aren‚Äôt proposals at all, but custom extensions like JSX and Flow.
1046036522070347800,Sat Sep 29 13:58:35 +0000 2018,@left_pad @dan_abramov Both. Browserslist helps for what is actually shipped, but need a way to specify things that haven‚Äôt shipped yet.
1046036003541176300,Sat Sep 29 13:56:32 +0000 2018,@ryanflorence @dan_abramov @left_pad Yeah I agree, except the transforms were browserify specific.
1046035672539304000,Sat Sep 29 13:55:13 +0000 2018,@dan_abramov btw, I visited the FB London office yesterday. Seem to have missed you though. Would love to meet sometime. üòä
1046035300508725200,Sat Sep 29 13:53:44 +0000 2018,@dan_abramov @left_pad I strongly believe that we need to get to a point where we can ship untranspiled code to npm‚Ä¶ https://t.co/7oc3lq8LXb
1045743158062133200,Fri Sep 28 18:32:52 +0000 2018,RT @acdlite: So many update performance problems in React go away when you use local state.  If you have some state that updates frequently‚Ä¶
1045712416842149900,Fri Sep 28 16:30:43 +0000 2018,Found a @parceljs van on the street in London. Gotta show up to the next hackathon in that! üòâ https://t.co/jr8shanW6p
1045708398547935200,Fri Sep 28 16:14:45 +0000 2018,It was awesome to meet @mjesun, @rafeca and @CompuIves from the Metro team at the Facebook office in London today.‚Ä¶ https://t.co/LMdD9XbRj4
1045622744392618000,Fri Sep 28 10:34:23 +0000 2018,Hello London! üëã   I‚Äôm here through Sunday. Who wants to meet up? https://t.co/OnAqAiNXP5
1045144940685082600,Thu Sep 27 02:55:46 +0000 2018,@dan_abramov Congrats! üëè
1044950455053238300,Wed Sep 26 14:02:57 +0000 2018,RT @benpaulhanna: @parceljs @babeljs @flowtype @elmlang If anyone needs a bare-bones example of using Elm with Parcel be sure to check out‚Ä¶
1044747398981926900,Wed Sep 26 00:36:05 +0000 2018,RT @parceljs: Parcel v1.10.0 is out! üöÄ  üê† @babeljs 7 support üåä Automatic @flowtype üå≥ @elmlang out of the box üëî Inline script and style extr‚Ä¶
1044676968543793200,Tue Sep 25 19:56:13 +0000 2018,@nullvoxpopuli @CodingItWrong @parceljs @fbjest @Cypress_io Yep should happen automatically when you link to them, eg in css or HTML
1044427503710875600,Tue Sep 25 03:24:56 +0000 2018,@ZoltanKochan yeah, roughly in half compared to Travis, and quarter compared to Appveyor! Plus the builds run in pa‚Ä¶ https://t.co/ydXzTSh3up
1044427430155317200,Tue Sep 25 03:24:38 +0000 2018,@divyavaishnavi yeah, roughly in half compared to Travis, and quarter compared to Appveyor! Plus the builds run in‚Ä¶ https://t.co/1kZZ42RFhV
1044252836442169300,Mon Sep 24 15:50:52 +0000 2018,@bahmutov @ZoltanKochan @AzureDevOps @parceljs it‚Äôs pretty darn easy! https://t.co/vqLjrvOIr3
1044251088411488300,Mon Sep 24 15:43:55 +0000 2018,@swyx well, Parcel does a lot of filesystem stuff, which is pretty OS specific. windows/unix paths, cross platform watcher, etc.
1044249997871464400,Mon Sep 24 15:39:35 +0000 2018,Replaced TravisCI and Appveyor with Microsoft‚Äôs @AzureDevOps Pipelines to run the @parceljs tests. Super impressed!‚Ä¶ https://t.co/2cB3kA7x5w
1044240647647944700,Mon Sep 24 15:02:26 +0000 2018,@xdamman Same. Too scared to update my work laptop.
1043981222832103400,Sun Sep 23 21:51:34 +0000 2018,@reneritchie https://t.co/x6blbmvXv7
1043571039542960100,Sat Sep 22 18:41:39 +0000 2018,@jandedobbeleer Walked into an Apple store and had one within 30 minutes. üòä
1043564076108984300,Sat Sep 22 18:13:58 +0000 2018,Upgraded from a Series 2 Apple Watch. Insane how much faster the Series 4 is. Bigger screen is also awesome. üëç https://t.co/NvOANRIvo8
1042961816542793700,Fri Sep 21 02:20:49 +0000 2018,Hooked up @framer X to our design system at Adobe today. Super impressed at how easy it was, and how well it works!‚Ä¶ https://t.co/HvsVPScMeH
1042268152921382900,Wed Sep 19 04:24:26 +0000 2018,@RealJakeCooper @parceljs @FuseBoxJS Source maps are supported in parcel. Not with tree shaking yet, but in develop‚Ä¶ https://t.co/9FsqxgCdOu
1041775371862007800,Mon Sep 17 19:46:18 +0000 2018,@rauchg Yessss! Now I can use it for the @parceljs website instead of my custom Travis setup. üëç
1041774542748696600,Mon Sep 17 19:43:00 +0000 2018,RT @zeithq: Now + GitHub: Evolved  ‚¨© Automatic deployments for every single push ‚¨© Automatic alias of master branch to custom domain(s) ‚¨© I‚Ä¶
1041527389182808000,Mon Sep 17 03:20:54 +0000 2018,RT @rauchg: We are *very* far away from what a smart compiler can do when pre-rendering and server-rendering. A Next.js page like so:  expo‚Ä¶
1041526266883563500,Mon Sep 17 03:16:27 +0000 2018,@Vjeux Sometimes we forget how good we have it in the JS world üòâ
1041420977337360400,Sun Sep 16 20:18:04 +0000 2018,It is possible to detect when dark mode is enabled in CSS via a media query. I hope every website does this! https://t.co/8vzGfRXPXD
1041420925030215700,Sun Sep 16 20:17:51 +0000 2018,I‚Äôm using this third party dark theme for Github. Wish they supported it natively. https://t.co/iYbS9rj8q4
1041420354726506500,Sun Sep 16 20:15:35 +0000 2018,Installed the macOS Mojave beta. Dark mode is amazing! Now I want every website to support it too. And where is dar‚Ä¶ https://t.co/fCYxbHevUe
1040758942744207400,Sat Sep 15 00:27:22 +0000 2018,Got approved to officially spend time during work hours on @parceljs! Really excited to dedicate more time to pushi‚Ä¶ https://t.co/kpYppXl45N
1040254417616990200,Thu Sep 13 15:02:34 +0000 2018,RT @CompuIves: This is game-changing. It brought the `yarn install` time for CodeSandbox down from 180 seconds to 19 seconds.  Congratulati‚Ä¶
1040253468047552500,Thu Sep 13 14:58:48 +0000 2018,Nooo! Google is shutting down Inbox, the best email app I‚Äôve ever used. The bundling feature is amazing, and Gmail‚Ä¶ https://t.co/aNNoBrUHrC
1040249517302460400,Thu Sep 13 14:43:06 +0000 2018,I am excited about this. It will also improve module resolution time a ton (no disk access needed). Should make too‚Ä¶ https://t.co/tKGcuObQdy
1040249129937428500,Thu Sep 13 14:41:34 +0000 2018,RT @arcanis: I made a 14-pages RFC to explain how Yarn is going to get rid of node_modules and bring the install time to new lows ü•≥ https:/‚Ä¶
1039691218244919300,Wed Sep 12 01:44:37 +0000 2018,@jamiebuilds @ryanflorence Also working on this üòä
1039548922958512100,Tue Sep 11 16:19:11 +0000 2018,CodeSandbox Live is absolutely incredible. Perfect for remote interviews. Nice job @CompuIves! üëè
1039153470668861400,Mon Sep 10 14:07:48 +0000 2018,RT @olivtassinari: Let's compare the performance of @getbootstrap with @MaterialUI, that's for static websites. For dynamic websites, I hav‚Ä¶
1039028943897022500,Mon Sep 10 05:52:59 +0000 2018,@ReasonableCoder @charlie_elg @Vjeux @reactjs I don‚Äôt think that‚Äôs necessarily true. There can still be separation‚Ä¶ https://t.co/PFkIrYPnAr
1039010556865175600,Mon Sep 10 04:39:55 +0000 2018,@jamespearce @parceljs WIP üòâ https://t.co/OgULNru7VM
1038989071215804400,Mon Sep 10 03:14:32 +0000 2018,@jamiebuilds @kylemathews hmm yeah I guess. Maybe fonts? i.e. if applied to `body` they'd start getting preloaded before any JS runs.
1038986935740420100,Mon Sep 10 03:06:03 +0000 2018,@tusharmath Parcel automatically code splits css that is imported from codesplit JS and loads it in parallel.
1038985997713723400,Mon Sep 10 03:02:19 +0000 2018,@jamiebuilds @kylemathews Even if they don't use SSR, separating CSS into a separate file allows it to be loaded in‚Ä¶ https://t.co/d3HyC939HU
1038985401489227800,Mon Sep 10 02:59:57 +0000 2018,@kylemathews yeah I just don't think very many people are doing ssr...
1038985144973975600,Mon Sep 10 02:58:56 +0000 2018,@tusharmath totally agree. Same tools that are used for JS code splitting can be used to code split css.
1038984493279797200,Mon Sep 10 02:56:21 +0000 2018,@tusharmath no one said "all", but you should at least load the css that will be needed on initial pageload upfront.
1038983892844175400,Mon Sep 10 02:53:58 +0000 2018,@kylemathews you mean server rendering? Then you have to actually have a server, or pre-render each page (ala gatsb‚Ä¶ https://t.co/XYiGWNHRj1
1038981347241386000,Mon Sep 10 02:43:51 +0000 2018,RT @devongovett: @kylemathews styled-components doesn‚Äôt. https://t.co/kjxgseyRmN  emotion technically does, but it‚Äôs deprecated. https://t.‚Ä¶
1038981291180314600,Mon Sep 10 02:43:37 +0000 2018,@kylemathews styled-components doesn‚Äôt. https://t.co/kjxgseyRmN  emotion technically does, but it‚Äôs deprecated. https://t.co/zk8RNWHkKE
1038979721617334300,Mon Sep 10 02:37:23 +0000 2018,@chrisbiscardi For example, many design systems support multiple themes, e.g. dark and light. Easy to swap out the‚Ä¶ https://t.co/lwKVMvpb7y
1038974843968925700,Mon Sep 10 02:18:00 +0000 2018,CSS is great **because** it is separate from JS. This means you can easily swap out the styling of your app without‚Ä¶ https://t.co/HUSkuDpZwJ
1038971876612042800,Mon Sep 10 02:06:13 +0000 2018,I believe the future is something like https://t.co/IJHUeeKs4n. Separate CSS files that can be fully statically ana‚Ä¶ https://t.co/chyGFXVikE
1038971838720692200,Mon Sep 10 02:06:04 +0000 2018,CSS is a language specifically designed for styling rather than a general purpose programming language. As a result‚Ä¶ https://t.co/iWrOTPrgbD
1038971790851170300,Mon Sep 10 02:05:52 +0000 2018,CSS-in-JS is bad for the web and needs to be stopped.  The most popular implementations don‚Äôt even support extracti‚Ä¶ https://t.co/Dy6qGIDYmD
1038630640168517600,Sun Sep 09 03:30:16 +0000 2018,Happy that Fogust is finally over. Thanks @KarlTheFog! ‚òÄÔ∏èüö¥ https://t.co/u7TCRn0GLA
1037533969401569300,Thu Sep 06 02:52:29 +0000 2018,RT @JasperDeMoor: Introducing babel-ast-converter, a tool to convert Babel 7 ASTs to Babel 6 compatible ASTs and vice versa https://t.co/Lx‚Ä¶
1037063921591435300,Tue Sep 04 19:44:41 +0000 2018,RT @ThePracticalDev: - What is Parcel.js? - Why is this useful to us? - Setting up our project with Parcel.js { author: @iam_timsmith } htt‚Ä¶
1035989857938694100,Sat Sep 01 20:36:44 +0000 2018,Outcome of ‚ÄúThe Play That Goes  Wrong‚Äù. Absolutely hilarious. üòÇ https://t.co/oxAZG1lpxD
1035736994268291100,Sat Sep 01 03:51:57 +0000 2018,@swyx @Netlify @ReactRally @NYCReact @NYCGraphQL @ReactBoston @jxnblk @transitive_bs Congrats man! üëè
1035648948541812700,Fri Aug 31 22:02:05 +0000 2018,@ryanflorence @kentcdodds Need shadow dom style hidden inner components in react devtools. Libraries could enable a‚Ä¶ https://t.co/knzLUq5bqi
1035614398868598800,Fri Aug 31 19:44:48 +0000 2018,@Tushkiz @left_pad @swyx Adobe
1035614246665633800,Fri Aug 31 19:44:11 +0000 2018,@codefundio @MaterialUI @vuetifyjs Awesome! Feel free to contribute to our @opencollect at https://t.co/RNoArxreVK üòç
1035331349761155100,Fri Aug 31 01:00:03 +0000 2018,@gauiis Haha that‚Äôs outlook üòÇ
1035288901903155200,Thu Aug 30 22:11:23 +0000 2018,@AdamRackis @left_pad @swyx Lol yeah that was at the office
1035286659829510100,Thu Aug 30 22:02:29 +0000 2018,It was great to meet up with @left_pad and @swyx this afternoon! The view wasn‚Äôt bad either. üòÇ https://t.co/rMXsXfePNC
1035161449977598000,Thu Aug 30 13:44:56 +0000 2018,Just doing a little work... üòÜ #AdobeLife https://t.co/kntLFxAu7k
1034954880488800300,Thu Aug 30 00:04:06 +0000 2018,Finally seeing Hamilton! https://t.co/1w8gBx9MOg
1034943680686239700,Wed Aug 29 23:19:36 +0000 2018,Hello NYC! I am here until Sunday. Anyone want to meet up? https://t.co/P9paXCCL9q
1034882844261146600,Wed Aug 29 19:17:51 +0000 2018,RT @devongovett: üì£ Posted a thread on @withspectrum about @parceljs v2 with a summary of its main features. If you haven't seen the RFC alr‚Ä¶
1034809980241604600,Wed Aug 29 14:28:19 +0000 2018,üì£ Posted a thread on @withspectrum about @parceljs v2 with a summary of its main features. If you haven't seen the‚Ä¶ https://t.co/JN0llyY746
1034780869138042900,Wed Aug 29 12:32:39 +0000 2018,‚ö°Ô∏èWIP on @babeljs v7 support in @parceljs: https://t.co/OgULNrLJkm  Want to help? Check out the todo list and make‚Ä¶ https://t.co/MJydhVnQrM
1034562684480639000,Tue Aug 28 22:05:39 +0000 2018,RT @devongovett: ‚ö°Ô∏è Super excited to publish the @parceljs v2 RFC today! Check it out and leave feedback! üî•  üìù Read here: https://t.co/gjhA‚Ä¶
1034529231139745800,Tue Aug 28 19:52:43 +0000 2018,@ArtSolopov Entirely opt-in! Parcel 2 will work exactly as it does now out of the box, but allow you the option to extend when you need to.
1034496926769668100,Tue Aug 28 17:44:22 +0000 2018,Parcel 2 will have a much improved plugin system, and will be even more extensible and configurable. It will enable‚Ä¶ https://t.co/VgFMMmLIpC
1034488820186603500,Tue Aug 28 17:12:09 +0000 2018,‚ö°Ô∏è Super excited to publish the @parceljs v2 RFC today! Check it out and leave feedback! üî•  üìù Read here:‚Ä¶ https://t.co/UvvUvSoEAU
1034243247944556500,Tue Aug 28 00:56:20 +0000 2018,@left_pad Congrats! What a long road. Great work. üòÄ
1034243167363579900,Tue Aug 28 00:56:01 +0000 2018,RT @left_pad: Done. Babel 7 is Released üé§  https://t.co/zQoeCiZN6p https://t.co/gUsILuQBnK
1032763652221358100,Thu Aug 23 22:56:57 +0000 2018,@CompuIves @gitlab Very cool
1032694762476843000,Thu Aug 23 18:23:12 +0000 2018,Perfect spot to review some @parceljs PRs. üòä https://t.co/pjFQpMeSoo
1031974693698449400,Tue Aug 21 18:41:54 +0000 2018,RT @WasmWeekly: Window 2000 emulated in WebAssembly https://t.co/l7f8au2Zk5 https://t.co/U9fg3w3ZRh
1031526583918637000,Mon Aug 20 13:01:17 +0000 2018,RT @xdamman: We built https://t.co/kFvNxZtA5j to help you identify the open source projects that you are depending on and that need funding‚Ä¶
1031182402503278600,Sun Aug 19 14:13:37 +0000 2018,RT @AndaristRake: üé£ Just released new @babeljs macro https://t.co/sD6rdo8oAZ which converts lists/sets of words to compressed RegExps using‚Ä¶
1030897876518494200,Sat Aug 18 19:23:01 +0000 2018,RT @CompuIves: I hope approaches like these become a trend. Configuration is the result of a program being too dumb to figure out what the‚Ä¶
1030861440784244700,Sat Aug 18 16:58:14 +0000 2018,@ksaitor @parceljs Lol üòÇ
1030697462560972800,Sat Aug 18 06:06:39 +0000 2018,RT @kshep92: Testing out @parceljs tonight, so I linked a .less file in my HTML to see what would happen. Parcel detected the extension, in‚Ä¶
1029972705032826900,Thu Aug 16 06:06:43 +0000 2018,@acdlite I wrote a bot to do this with their API automatically. Just checks if changes have been made for all PR co‚Ä¶ https://t.co/efoqrLRVOP
1029969296686891000,Thu Aug 16 05:53:10 +0000 2018,@thekitze @kentcdodds Parcel 2 will do this out of the box. üòâ
1029371213917773800,Tue Aug 14 14:16:36 +0000 2018,@iam_chuksfestus @parceljs You need to add Babel‚Äôs class properties transform. That isn‚Äôt standard syntax.
1029170369733713900,Tue Aug 14 00:58:31 +0000 2018,Parcel v2 hackathon day 1 was a success! üëç https://t.co/LR8xioG2Vy
1029033686430179300,Mon Aug 13 15:55:24 +0000 2018,Kicking off the first @parceljs v2 hackathon today with @jamiebuilds, @padmaia and @JasperDeMoor. 3 full days of fo‚Ä¶ https://t.co/FIgMITY2mX
1028421486623711200,Sat Aug 11 23:22:44 +0000 2018,Fun afternoon hanging out with @timneutkens, @rauchg and the @zeithq crew! They are doing awesome stuff. Excited to‚Ä¶ https://t.co/zu0MGNQym4
1026139113622138900,Sun Aug 05 16:13:24 +0000 2018,RT @thekitze: webdev: sorry but UI tools like framer x cannot generate production code yet  meanwhile in gamedev: https://t.co/gw2ceReBME
1025915746864390100,Sun Aug 05 01:25:49 +0000 2018,The new Mission Impossible is definitely the craziest one yet. üëç
1025807287351275500,Sat Aug 04 18:14:50 +0000 2018,@ryanflorence @dan_abramov @koenbok ya I‚Äôll be at the @zeithq meetup on friday
1025806793539125200,Sat Aug 04 18:12:52 +0000 2018,@ryanflorence @dan_abramov @koenbok Hey me too! We should chat sometime üòâ
1025804164792631300,Sat Aug 04 18:02:26 +0000 2018,@dan_abramov @koenbok Probably. I haven‚Äôt used it yet so idk what is in there, but I assumed more along the lines o‚Ä¶ https://t.co/qRi7N62aoM
1025799864687386600,Sat Aug 04 17:45:20 +0000 2018,@dan_abramov @koenbok I see. Makes sense, but feels like most of the time even designers could start from a base se‚Ä¶ https://t.co/JIj8BNrPvX
1025796897070493700,Sat Aug 04 17:33:33 +0000 2018,RT @devongovett: 95% of the time, designs use existing patterns like buttons, checkboxes, tables, treeviews, etc. which have known interact‚Ä¶
1025796650957074400,Sat Aug 04 17:32:34 +0000 2018,@dan_abramov That sounds good. What are the Frame components in your example? I assumed they were basically just divs.
1025795062679068700,Sat Aug 04 17:26:15 +0000 2018,95% of the time, designs use existing patterns like buttons, checkboxes, tables, treeviews, etc. which have known i‚Ä¶ https://t.co/X4vd5KpA9G
1025794032146870300,Sat Aug 04 17:22:10 +0000 2018,Design tools like Framer X that generate React components are awesome, but they really need to be built on top of a‚Ä¶ https://t.co/br0uF3Mllp
1025637450708709400,Sat Aug 04 06:59:58 +0000 2018,RT @acdlite: Redux is a stupid fucking event emitter with a disproportionately excellent ecosystem of tools built on top of it. I wonder wh‚Ä¶
1024738195227824100,Wed Aug 01 19:26:39 +0000 2018,@threepointone Call addDependency in your plugin?
1024682152498147300,Wed Aug 01 15:43:57 +0000 2018,So apparently I joined twitter 10 years ago today. That‚Äôs crazy! ü§Ø
1024091421370794000,Tue Jul 31 00:36:36 +0000 2018,@mjackson @angustweets best feature of coffeescript. still miss it.
1024055196568105000,Mon Jul 30 22:12:39 +0000 2018,@phiggins @threepointone @dojo lol of course dojo already did it. üòú
1024040749350801400,Mon Jul 30 21:15:15 +0000 2018,RT @sarah_federman: @devongovett @threepointone I'd even take it a step further and say it should come with an automated documentation site‚Ä¶
1024034140591513600,Mon Jul 30 20:48:59 +0000 2018,Lol, never tweet about Vue. üò±
1024026567037542400,Mon Jul 30 20:18:53 +0000 2018,@alexeyraspopov Sure, that‚Äôs a start but there are tons of components that are not included in the platform. And so‚Ä¶ https://t.co/YsLvBFXTb8
1024025927267696600,Mon Jul 30 20:16:21 +0000 2018,@SamHulick Prebuilt components for all the common UI controls most apps use. Styling completely customizable. Acces‚Ä¶ https://t.co/KIef6Xx2HQ
1024025569082531800,Mon Jul 30 20:14:55 +0000 2018,RT @devongovett: @threepointone Yeah totally. I don‚Äôt think it should come with any styling out of the box. It should just give you a base‚Ä¶
1024025453877649400,Mon Jul 30 20:14:28 +0000 2018,@threepointone Yeah totally. I don‚Äôt think it should come with any styling out of the box. It should just give you a base to work from.
1024025191402299400,Mon Jul 30 20:13:25 +0000 2018,@rauchg Yeah I guess maybe less choices are required since there are so many ‚Äúofficial‚Äù ones made for you. Similar to Ember in that way.
1024024775218233300,Mon Jul 30 20:11:46 +0000 2018,I mostly think we need a standard set of UI components that every app can start from rather than building everythin‚Ä¶ https://t.co/G3UQHTpP7M
1024023838542065700,Mon Jul 30 20:08:03 +0000 2018,Why do people think Vue is higher level than react? It does the same things‚Ä¶
1024023621503615000,Mon Jul 30 20:07:11 +0000 2018,@IsaacBenHu uhhhh I don‚Äôt know why people would think vue is higher level. it does literally the same thing as react.
1024023521616257000,Mon Jul 30 20:06:47 +0000 2018,@SamHulick lol vue is at the same level as react
1024021751854858200,Mon Jul 30 19:59:45 +0000 2018,As an industry we have to start building higher level abstractions on top of React, and stop reinventing the wheel.‚Ä¶ https://t.co/ev1r5qGSPY
1024021324673441800,Mon Jul 30 19:58:03 +0000 2018,Web UI development is still crazy hard. React made it much better but with no standard UI toolkit every company is‚Ä¶ https://t.co/eH2pHijb0K
1023970432024633300,Mon Jul 30 16:35:50 +0000 2018,Excited for @diegomura of react-pdf and maintainers of other projects in this ecosystem to get more involved with t‚Ä¶ https://t.co/Oy97FJBnpt
1023970363070275600,Mon Jul 30 16:35:33 +0000 2018,üì£ Just moved all my repos related to typography and document layout in JS to a new org on Github, including pdfkit,‚Ä¶ https://t.co/sFD1LdfN1E
1023676649756274700,Sun Jul 29 21:08:26 +0000 2018,RT @jxnblk: MDX-based presentation decks https://t.co/tuTpxlVjUL https://t.co/HCR9E72OPP
1023351938941771800,Sat Jul 28 23:38:09 +0000 2018,RT @rodoabad: @devongovett Even on a very small package, #scopehosting does wonders. #parcel #parcelbundler #tryit https://t.co/R1N92Yc1WB
1023343043741503500,Sat Jul 28 23:02:49 +0000 2018,Team @parceljs takes the bridge! üö¥üåâ  @JasperDeMoor https://t.co/g5BwaZzADf
1023260955663204400,Sat Jul 28 17:36:37 +0000 2018,RT @left_pad: Happy Friday! Just published a pretty detailed post on explaining our decision to remove the Stage presets in Babel 7. Also w‚Ä¶
1023067281658531800,Sat Jul 28 04:47:02 +0000 2018,@jasonlaster11 @littlecalculist I started trying to write a spec, but didn‚Äôt finish. Hopefully soon. https://t.co/NYfxZL7IPS
1022988369356238800,Fri Jul 27 23:33:28 +0000 2018,RT @jasonlaster11: OMG! @FirefoxNightly just got time travel debugging. Best birthday present ever! üéÇ ü¶ä  Here are all the deets. Can't wait‚Ä¶
1022015503525707800,Wed Jul 25 07:07:38 +0000 2018,@jamiebuilds üëç I see a parcel resolver plugin coming... üòâ
1021614213507117000,Tue Jul 24 04:33:03 +0000 2018,@ramblinjan Name a real benefit of using functional components. Less typing doesn‚Äôt count.
1021595146893193200,Tue Jul 24 03:17:17 +0000 2018,@grrowl ‚Äúbasic renderables‚Äù can easily become ‚Äúcomplex renderables‚Äù over time though as your app evolves. seems mor‚Ä¶ https://t.co/XekehvJ7ht
1021594121616556000,Tue Jul 24 03:13:13 +0000 2018,@grrowl why? what are the benefits of function components over classes? from my experience, there is only a margina‚Ä¶ https://t.co/9P4yqNNSwJ
1021583900005388300,Tue Jul 24 02:32:36 +0000 2018,@secoif or you could just not use them at all in the first place and avoid it. :)  seriously, not really seeing the benefits.
1021581399852077000,Tue Jul 24 02:22:40 +0000 2018,@phillip what‚Äôs the benefit of functional components? if nothing, then why use them?
1021581242372829200,Tue Jul 24 02:22:02 +0000 2018,@iamclaytonray what‚Äôs the benefit of using function components in your opinion?
1021577220341391400,Tue Jul 24 02:06:03 +0000 2018,RT @devongovett: ‚öõÔ∏è PSA: React functional components considered harmful. üòà  * Can‚Äôt make refs to them. Impossible for parent to know. * Can‚Ä¶
1021551515436085200,Tue Jul 24 00:23:55 +0000 2018,RT @AdrienHarnay: Managed to migrate two simple apps from CRA to @parceljs in 30 min ü§© No more config, and ability to share SCSS code with‚Ä¶
1021493759840866300,Mon Jul 23 20:34:25 +0000 2018,@mjackson I do the opposite. Just make everything classes from the start since I never know where I‚Äôm going to need‚Ä¶ https://t.co/nqhFuEjCVm
1021493518248947700,Mon Jul 23 20:33:27 +0000 2018,@renatorib_ There‚Äôs no way to know whether a child will be a functional component or a class component if you allow‚Ä¶ https://t.co/luHG98gQRf
1021472057433808900,Mon Jul 23 19:08:11 +0000 2018,react-pdf is pretty awesome! Uses a few of my libraries under the hood:  https://t.co/yfGIAdpdu2‚Ä¶ https://t.co/ycqhBFJMJE
1021466645762465800,Mon Jul 23 18:46:40 +0000 2018,@malchata you think you know that. then 3 months later you need to refactor the component to add them. üòâ
1021466035323424800,Mon Jul 23 18:44:15 +0000 2018,RT @diegomura: ‚ú® Styled-components in #reactpdf it's now a FACT‚ú®  Check it out for yourself: https://t.co/HplF4noqbU  More updated coming s‚Ä¶
1021465501984124900,Mon Jul 23 18:42:08 +0000 2018,‚öõÔ∏è PSA: React functional components considered harmful. üòà  * Can‚Äôt make refs to them. Impossible for parent to know‚Ä¶ https://t.co/QwBTafULTU
1021428124330831900,Mon Jul 23 16:13:36 +0000 2018,RT @mshilman: Thrilling news: the next chapter for @storybookjs with full-time maintenance and a bigger team. I'm over the moon!  https://t‚Ä¶
1021210147467612200,Mon Jul 23 01:47:26 +0000 2018,@CodingItWrong @emberjs yeah I'm thinking about more UI-focused tools as opposed to the CLI-based ones we mostly use today.
1021209531471126500,Mon Jul 23 01:45:00 +0000 2018,@CodingItWrong @emberjs Is it fully integrated into an IDE?
1021206808839372800,Mon Jul 23 01:34:10 +0000 2018,I don't necessarily mean one application UI with all those features, just that the tools should be able to connect‚Ä¶ https://t.co/uNVYcwWYa1
1021206278255784000,Mon Jul 23 01:32:04 +0000 2018,I think the future of developer tools is integrated, end to end. @code already integrates the language itself with‚Ä¶ https://t.co/Vr7kjRAHaL
1021201407800631300,Mon Jul 23 01:12:43 +0000 2018,I know I'm super late to this but... VS @code is seriously amazing. Like, crazy good! üî•
1021117146074513400,Sun Jul 22 19:37:53 +0000 2018,We did it! ‚≠êÔ∏è https://t.co/FpfpKMjhUx
1021117109781184500,Sun Jul 22 19:37:45 +0000 2018,RT @parceljs: ‚≠êÔ∏è‚ú®ü§© 25,000! üî•‚ö°Ô∏èüôå  https://t.co/G4eNJ2Jmkq  Amazing, thanks for your support everyone! üôè https://t.co/QuLT5vsA3s
1021113052358250500,Sun Jul 22 19:21:37 +0000 2018,RT @rastopyr_ua: @devongovett 5 left https://t.co/yFYVCNrSnh
1021065678239907800,Sun Jul 22 16:13:22 +0000 2018,Getting close! ü§©üò±üëè  https://t.co/jmmuKtUCFz https://t.co/PEgHi7EOcq
1020488716962299900,Sat Jul 21 02:00:44 +0000 2018,RT @anniesqueedle: I'm giving a short workshop about using @parceljs - a lightweight Webpack alternative I've been playing with recently. C‚Ä¶
1020086101334057000,Thu Jul 19 23:20:53 +0000 2018,@sebmck @parceljs Babel‚Äôs scope tracking is a big buggy yeah. We ended up calling `scope.crawl()` in some cases, wh‚Ä¶ https://t.co/TxKlcLVpUC
1020085539469312000,Thu Jul 19 23:18:39 +0000 2018,@sebmck @parceljs yeah we bail out and wrap the module in a function in a few cases:  - eval used - top-level retur‚Ä¶ https://t.co/HUenp11REC
1020083552304578600,Thu Jul 19 23:10:45 +0000 2018,RT @sebmck: Common misconception: ES Modules are required to do scope hoisting and static analysis.
1020083174351618000,Thu Jul 19 23:09:15 +0000 2018,@sebmck Heh, this is exactly how our implementation works. https://t.co/jpg3dLeRdp
1020082475949682700,Thu Jul 19 23:06:29 +0000 2018,@sebmck Yep. @parceljs supports tree shaking CommonJS too! üôÇ
1019959315900215300,Thu Jul 19 14:57:05 +0000 2018,@tomdale @HBO Huh I watched the first episode and didn‚Äôt really like it. Does it get better?
1019820144313303000,Thu Jul 19 05:44:04 +0000 2018,Star Wars with @SFSymphony üòä https://t.co/BVm4i1KfLc
1019407715125231600,Wed Jul 18 02:25:13 +0000 2018,RT @noffle: @devongovett I wrote peer-npm, a p2p npm registry + cli:  https://t.co/6dfQLBukjW
1019296521802547200,Tue Jul 17 19:03:23 +0000 2018,RT @devongovett: This is gonna be huge!  Colocated graphql queries to the extreme. ‚ú®  Completely autogenerated from your code. ü§Ø  Super gre‚Ä¶
1019119092169506800,Tue Jul 17 07:18:20 +0000 2018,Lol wut https://t.co/Ffgws3ODAG
1019036302275014700,Tue Jul 17 01:49:21 +0000 2018,RT @CompuIves: üåà Introducing Themes to CodeSandbox! üåà  - Theme your editor with any existing @code theme available - Support for white them‚Ä¶
1019032589997203500,Tue Jul 17 01:34:36 +0000 2018,RT @swyx: Setting up a @docusaurus site for babel-blade - it is looking pretty sweet! I need a logo though...  https://t.co/uiIj3t9F6W http‚Ä¶
1018896944977010700,Mon Jul 16 16:35:36 +0000 2018,This is gonna be huge!  Colocated graphql queries to the extreme. ‚ú®  Completely autogenerated from your code. ü§Ø  Su‚Ä¶ https://t.co/ZAj70IT9ce
1018645573157597200,Sun Jul 15 23:56:44 +0000 2018,RT @richardiii: Parcel just keeps getting better  @parceljs https://t.co/IhGxT6pEX0
1018567050707398700,Sun Jul 15 18:44:43 +0000 2018,üëã Portland!
1018179224484474900,Sat Jul 14 17:03:38 +0000 2018,RT @swyx: ‚õ∏Ô∏èRecorded a video explaining what babel-blade is and how to use it!  üôÖ‚Äç‚ôÇÔ∏èTo the @GraphQL Double Declaration Problem  üê¶v0.0.9 for‚Ä¶
1017892326000087000,Fri Jul 13 22:03:36 +0000 2018,@tomdale Try out @withspectrum too. We just moved the @parceljs community there and it‚Äôs been good so far. Less of‚Ä¶ https://t.co/X7CXtjLfoG
1017876583242010600,Fri Jul 13 21:01:03 +0000 2018,@swyx should it be composing Movie.fragment in here too or is that still wip? https://t.co/wJlpfH1W7y
1017801066425905200,Fri Jul 13 16:00:58 +0000 2018,@DanielRufde @ZoltanKochan @jotadeveloper I was thinking of looking into IPFS yeah.
1017648853288247300,Fri Jul 13 05:56:08 +0000 2018,RT @mikeal: I looked into it and I still don't need type errors to make programs that work.
1017647837901832200,Fri Jul 13 05:52:06 +0000 2018,When you delete some code that is causing a bug and it doesn‚Äôt break any tests... üò¨
1017590826493358100,Fri Jul 13 02:05:33 +0000 2018,@stroughtonsmith Not react native, but similar ideas yeah.
1017589637630472200,Fri Jul 13 02:00:50 +0000 2018,@stroughtonsmith A bunch of Adobe apps also have major pieces written in JavaScript, but using platform native widg‚Ä¶ https://t.co/4DYp8tkqX8
1017488760018092000,Thu Jul 12 19:19:59 +0000 2018,@PowersBenny also that :)
1017486393952497700,Thu Jul 12 19:10:34 +0000 2018,RT @sebmck: npm inc are complicit in thisüëåüèª https://t.co/P5aZqIGC54
1017485325721980900,Thu Jul 12 19:06:20 +0000 2018,Something as important as the npm registry should not be controlled by a private company.
1017484828076212200,Thu Jul 12 19:04:21 +0000 2018,Daydreaming about an open source, decentralized npm registry replacement‚Ä¶ üòá
1017479482410537000,Thu Jul 12 18:43:07 +0000 2018,Just enabled the new @zeithq cdn on https://t.co/Bys9Dej7ke. Excited to see the perf improvements for people around‚Ä¶ https://t.co/iRwbN7SAhf
1017247310873440300,Thu Jul 12 03:20:33 +0000 2018,@jamiebuilds check out https://t.co/uqn42C2Mqo. It‚Äôs example based, and has lots of common components documented. O‚Ä¶ https://t.co/BBCFIVivJi
1017236312875601900,Thu Jul 12 02:36:50 +0000 2018,Or just use @parceljs - tree shaking out of the box üòú https://t.co/LWwETxen8W
1017235909824016400,Thu Jul 12 02:35:14 +0000 2018,RT @devongovett: @dan_abramov Maybe. But if lodash/throttle in turn required three other things and only used one, you have no control over‚Ä¶
1017235895823392800,Thu Jul 12 02:35:11 +0000 2018,RT @devongovett: @dan_abramov Yeah tree-shaking is a buzzword, but at this point it‚Äôs kind of an umbrella term for a bunch of different opt‚Ä¶
1017235381144584200,Thu Jul 12 02:33:08 +0000 2018,@dan_abramov Maybe. But if lodash/throttle in turn required three other things and only used one, you have no contr‚Ä¶ https://t.co/SY4o7PzCPk
1017235316518744000,Thu Jul 12 02:32:53 +0000 2018,@dan_abramov Yeah tree-shaking is a buzzword, but at this point it‚Äôs kind of an umbrella term for a bunch of differ‚Ä¶ https://t.co/zPCwUaoYyf
1017158427754184700,Wed Jul 11 21:27:21 +0000 2018,RT @parceljs: Parcel v1.9.5 is out! Includes a ton of bugfixes and improvements. üöÄ‚ú®  üí¨ Improved logger ‚è± Watcher fixes for Linux and Window‚Ä¶
1017110316696518700,Wed Jul 11 18:16:11 +0000 2018,Always be shipping. üí™ https://t.co/oBRO9BZEpU
1017084545936470000,Wed Jul 11 16:33:46 +0000 2018,@jamiebuilds @cycomachead @AndaristRake @ryanflorence Interesting! I‚Äôd be curious to see examples of that.
1017080240105873400,Wed Jul 11 16:16:40 +0000 2018,@cycomachead @AndaristRake @jamiebuilds @ryanflorence Yeah that‚Äôs cool but I‚Äôm not sure it‚Äôs the right api for anyt‚Ä¶ https://t.co/0ikPEa9YKJ
1016946092011745300,Wed Jul 11 07:23:36 +0000 2018,@jamiebuilds @ryanflorence Not sure I understand what you mean. We should talk about this in person sometime. üòâ
1016944864859021300,Wed Jul 11 07:18:44 +0000 2018,@ryanflorence @jamiebuilds We‚Äôre starting to think about this exact thing at Adobe right now. How do you get the DO‚Ä¶ https://t.co/wRur1XLWET
1016941338581844000,Wed Jul 11 07:04:43 +0000 2018,RT @ignu: "just frontend" https://t.co/XyMWUc4qg1
1016751235641143300,Tue Jul 10 18:29:19 +0000 2018,RT @parceljs: üì£ Parcel has a new community on @withspectrum! https://t.co/gChzj52wH5  This will replace our current Slack group, which was‚Ä¶
1016723736618152000,Tue Jul 10 16:40:03 +0000 2018,So... I updated to iOS 12 public beta and everything seems great. Except... my watch doesn‚Äôt work anymore.  It unpa‚Ä¶ https://t.co/Vq2ePH42f1
1016583096634769400,Tue Jul 10 07:21:12 +0000 2018,@swyx Sweeeeet! ‚ú®
1016530367203774500,Tue Jul 10 03:51:40 +0000 2018,@swyx I guess if you were requesting two different things from the same field (with different arguments)? But then,‚Ä¶ https://t.co/ZlC8AVd1Lp
1016530014890627100,Tue Jul 10 03:50:16 +0000 2018,@swyx Guess I don't follow. Why are the aliases necessary?
1016522351897264100,Tue Jul 10 03:19:49 +0000 2018,@swyx How do you determine the difference between an alias and accessing a field of the response?
1016520935329882100,Tue Jul 10 03:14:11 +0000 2018,@jamiebuilds Alias react to another module and extend React.Component and add some logging maybe?
1016423217571852300,Mon Jul 09 20:45:53 +0000 2018,Followup on this: we‚Äôre moving to @withspectrum! Please join us. üòÄ https://t.co/9KJfiqCP8Z https://t.co/jdYXBpflJ3
1016415051190714400,Mon Jul 09 20:13:26 +0000 2018,The tooling for open source projects is so good these days!  @github - code @opencollect - funding @withspectrum -‚Ä¶ https://t.co/NGoVSW2LgY
1016176356000874500,Mon Jul 09 04:24:57 +0000 2018,@swyx Not sure... you could check what relay does. I did that out of habit.
1016094751584481300,Sun Jul 08 23:00:41 +0000 2018,@kentcdodds Integration tests can also be useful in some cases, but are much harder to write and maintain over time‚Ä¶ https://t.co/UaBfXon4ur
1016094086757937200,Sun Jul 08 22:58:03 +0000 2018,@kentcdodds React components compose together and don‚Äôt need to know how their children work, so unit tests should‚Ä¶ https://t.co/cyGaamataH
1016094002053984300,Sun Jul 08 22:57:42 +0000 2018,@kentcdodds To test only one component at a time. Makes tests much more resilient to changes in other components.
1016089787927707600,Sun Jul 08 22:40:58 +0000 2018,@kentcdodds I‚Äôd be interested in that as a big proponent of shallow rendering myself. But I get why you might avoid‚Ä¶ https://t.co/HuxFHkqF7V
1015993330109313000,Sun Jul 08 16:17:40 +0000 2018,RT @changelog: They must've gathered enough data on stop signs and storefronts... https://t.co/ya36PjeAfP
1015842955330895900,Sun Jul 08 06:20:08 +0000 2018,Just gonna stay here forever üåÖ https://t.co/J5lH1zmucb
1015836779939708900,Sun Jul 08 05:55:36 +0000 2018,Anyone installed the iOS 12 public beta? I think I'm going to do it, so if it's terrible please stop me!
1015830832425066500,Sun Jul 08 05:31:58 +0000 2018,@swyx Totally. You can always build implicit on top of explicit.
1015825977849466900,Sun Jul 08 05:12:40 +0000 2018,@swyx Nothing wrong with being explicit, but it sure would be awesome to not even need to know about the fragments being generated at all. üòâ
1015825677461811200,Sun Jul 08 05:11:29 +0000 2018,@swyx I think it always happens at the last property in the path since that‚Äôs what gets passed in. So, movie in thi‚Ä¶ https://t.co/me1QY18ev7
1015821528640831500,Sun Jul 08 04:55:00 +0000 2018,@kentcdodds Saaaaaame
1015821147571540000,Sun Jul 08 04:53:29 +0000 2018,@swyx I think to fix the connectFragment not defined in that example there needs to be a check for whether the refe‚Ä¶ https://t.co/ufxY8PMjJB
1015820142524096500,Sun Jul 08 04:49:29 +0000 2018,@swyx But I like that API in case you need to provide both! üëç
1015820006792163300,Sun Jul 08 04:48:57 +0000 2018,@swyx Cool! I still kinda like the idea that both params could be optional. 1st has to be in case there is no argum‚Ä¶ https://t.co/k1pwFkoLJ0
1015805968280457200,Sun Jul 08 03:53:10 +0000 2018,Chilling at the beach üèñ https://t.co/xaESBdiimi
1015708440792985600,Sat Jul 07 21:25:37 +0000 2018,RT @JasperDeMoor: Introducing Blazingly, a React SSR experiment with various performance optimising extensions included! https://t.co/63lRQ‚Ä¶
1015672790827954200,Sat Jul 07 19:03:58 +0000 2018,@swyx makes sense for the fields - could just pass a fragment there. anyway, not too sure about that one - maybe it‚Ä¶ https://t.co/Zp81MpeMBS
1015668831648284700,Sat Jul 07 18:48:14 +0000 2018,@swyx passing fields down would be easier to incrementally adopt this with existing components that don't already h‚Ä¶ https://t.co/juwS1Ajiuu
1015668159678779400,Sat Jul 07 18:45:34 +0000 2018,@swyx yeah conditionals could work - you'd have to also conditionally remove the fragment's usage too (e.g. `...movieFragment`.
1015661545336930300,Sat Jul 07 18:19:17 +0000 2018,@swyx But I realized the problem with this approach is that it's not very incrementally adoptable. All of your comp‚Ä¶ https://t.co/WVyg5E929p
1015660769508130800,Sat Jul 07 18:16:12 +0000 2018,@swyx @gatsbyjs so... I got a little excited üòâ  https://t.co/k9m03wW5nS
1015498573905924100,Sat Jul 07 07:31:41 +0000 2018,@pertorstensson @michaelvillar @discordapp @withspectrum @discourse and the I have to pay for the hosting. so, not free. :)
1015480254838632400,Sat Jul 07 06:18:54 +0000 2018,@swyx @gatsbyjs I believe in you! üòâ
1015479287078477800,Sat Jul 07 06:15:03 +0000 2018,@swyx @gatsbyjs I don't think you need cross-file state if you follow a convention like `ComponentName.fragment`. Y‚Ä¶ https://t.co/acwBbiiAIB
1015477359158284300,Sat Jul 07 06:07:23 +0000 2018,@swyx might be able to get rid of those `fragment(data)` calls as well with a bit more convention on the `data` prop.
1015477066408456200,Sat Jul 07 06:06:13 +0000 2018,@swyx maybe something like this? https://t.co/euD2r8e9xe  might require a bit of convention with how things are ass‚Ä¶ https://t.co/fjSgWCuAGE
1015467083717578800,Sat Jul 07 05:26:33 +0000 2018,@swyx might be cool if it generated fragments instead of full queries I think. then you could attach the blade as a‚Ä¶ https://t.co/da8NDnjgeH
1015466450780188700,Sat Jul 07 05:24:02 +0000 2018,@swyx ok this is pretty sweet. nice work! ‚ú®
1015465255541956600,Sat Jul 07 05:19:18 +0000 2018,RT @swyx: so I finally have a working prototype of my babel-plugin-blade/blade.macro! any GraphQL folks want to give comments?   try it her‚Ä¶
1015377978904100900,Fri Jul 06 23:32:29 +0000 2018,@swyx @jamiebuilds @the_mallen It does, but the idea is to allow some experimentation with automatic code splitting via plugins in Parcel 2.
1015371237768351700,Fri Jul 06 23:05:42 +0000 2018,@pertorstensson @michaelvillar @discordapp @withspectrum @discourse not free though :( https://t.co/pYqbLOsFjM
1015340474100428800,Fri Jul 06 21:03:27 +0000 2018,@mxstbr @swyx @withspectrum @CodePen @rauchg Awesome, thanks! Spectrum looks pretty cool so far.
1015339625705979900,Fri Jul 06 21:00:05 +0000 2018,Seems like the main options people recommended are @discordapp and @withspectrum.  Discord looks chat heavy: the UI‚Ä¶ https://t.co/vcrYnehKde
1015336884187250700,Fri Jul 06 20:49:11 +0000 2018,@swyx @withspectrum This looks cool. Are the threads google searchable? That would probably help drop the number of duplicate questions.
1015335887129882600,Fri Jul 06 20:45:14 +0000 2018,@kylemathews seems like it's targeting gamer communities? ui looks like slack though. are the threads google searchable?
1015335605302120400,Fri Jul 06 20:44:06 +0000 2018,@reactiflux @john_lyrrad @jamiebuilds The UI looks very similar to slack - definitely chat style. Are the threads google searchable?
1015315449066577900,Fri Jul 06 19:24:01 +0000 2018,@jamiebuilds I used to like them a lot, but these days I pretty much agree with this https://t.co/aJqqrGSecm
1015314904171966500,Fri Jul 06 19:21:51 +0000 2018,I still think slack is great for communication between team members etc., but it‚Äôs not designed for searchability a‚Ä¶ https://t.co/lYAjDjrsXv
1015314454764912600,Fri Jul 06 19:20:04 +0000 2018,The Parcel slack (https://t.co/4kZjAc83QG) recently passed 1000 members! This is pretty awesome but I‚Äôm beginning t‚Ä¶ https://t.co/gqqpvwKQw8
1015271160773087200,Fri Jul 06 16:28:02 +0000 2018,Yay so excited to have @JasperDeMoor in SF for the summer at Adobe! Team @parceljs is coming together. ‚ú® https://t.co/bqKk5tA6W4
1015078143118303200,Fri Jul 06 03:41:03 +0000 2018,@_developit You angered them https://t.co/qjjRAZAztB
1014993502738894800,Thu Jul 05 22:04:43 +0000 2018,Woke up at 3am and drove 2 hours to the top of a volcano to see the sunrise above the clouds. Totally worth it! üëåüåÖ https://t.co/xtV9SJC9Lp
1014713743039533000,Thu Jul 05 03:33:03 +0000 2018,@swyx Yeah I was thinking via Babel as well
1014713581131128800,Thu Jul 05 03:32:24 +0000 2018,@swyx What you did looks close to what I was thinking of! Can you compose components using blades together and have‚Ä¶ https://t.co/BUOumdm54B
1014712308419842000,Thu Jul 05 03:27:21 +0000 2018,@swyx I was thinking of building something similar. Like relay, but it generates the fragments for you based on acc‚Ä¶ https://t.co/MUhQm1b4aJ
1014709850180210700,Thu Jul 05 03:17:35 +0000 2018,@swyx Ooh this looks very interesting! üëè
1014707114046943200,Thu Jul 05 03:06:42 +0000 2018,@pedronauck @jamiebuilds @parceljs Yep! There is a parcel plugin for mdx here: https://t.co/fdshUf2GW5
1014570308500537300,Wed Jul 04 18:03:06 +0000 2018,@ken_wheeler I leave Sunday night. Which island are you going to?
1014569081595297800,Wed Jul 04 17:58:13 +0000 2018,Happy America day! üá∫üá∏ ü¶Ö   Is it your birthday @ken_wheeler?
1014550194707296300,Wed Jul 04 16:43:10 +0000 2018,RT @devongovett: üì£ Started writing a spec for package.json, which will help document and standardize common fields across tools. It will be‚Ä¶
1014550076750946300,Wed Jul 04 16:42:42 +0000 2018,RT @alidcastano: Announcing Rogue: an SSR framework for React that's invisible (zero config! - just an App.js file) and quick (no Webpack!‚Ä¶
1014548790664036400,Wed Jul 04 16:37:35 +0000 2018,Thread https://t.co/6znKhkDcxy
1014547755149037600,Wed Jul 04 16:33:28 +0000 2018,@alidcastano Well it only inlines the ones that are actually used in the code, so probably ok.
1014413957711269900,Wed Jul 04 07:41:49 +0000 2018,@maybekatz I've gotten some interesting ones, but probably not nearly as bad as you. I'm sorry this got out of hand.
1014411919808008200,Wed Jul 04 07:33:43 +0000 2018,@maybekatz holy shit, not ok.
1014382171430088700,Wed Jul 04 05:35:30 +0000 2018,In other news, I went on a 10 mile hike in the jungle today. It was pretty nice. üåøüëç https://t.co/eZimnkc9nc
1014370481976193000,Wed Jul 04 04:49:03 +0000 2018,@0xDEAD37 kind of. speccing existing things that are already widely implemented is basically a form of very detaile‚Ä¶ https://t.co/EknOaVqaz8
1014369450412240900,Wed Jul 04 04:44:57 +0000 2018,Clarified the goals of the package.json spec: https://t.co/A1ckBye4D7  1. Don't want to force existing tools to cha‚Ä¶ https://t.co/Hp4EBXr69E
1014288836405235700,Tue Jul 03 23:24:37 +0000 2018,@maybekatz Helps users because they don‚Äôt need to config lots of tools separately and helps new tools because there‚Ä¶ https://t.co/3GMuY1fpfx
1014288524168720400,Tue Jul 03 23:23:23 +0000 2018,@maybekatz Nothing is stopping tools from adding custom fields as they do today. The idea here is to improve the ec‚Ä¶ https://t.co/fZIdPaGZy2
1014286316903645200,Tue Jul 03 23:14:37 +0000 2018,@alexmkrolick Not in particular but the source field would be a good one to propose as an RFC. üòä
1014281647594721300,Tue Jul 03 22:56:03 +0000 2018,@maybekatz Sorry. My mistake.
1014280684268019700,Tue Jul 03 22:52:14 +0000 2018,The mistake npm is making is thinking they are the only tool using package.json. Many, many tools have adopted it a‚Ä¶ https://t.co/uJZU6fd1hf
1014279121109565400,Tue Jul 03 22:46:01 +0000 2018,@maybekatz No one is asking anyone to change anything. We‚Äôre documenting existing fields similar to the npm docs on‚Ä¶ https://t.co/0MooattWeZ
1014278241530474500,Tue Jul 03 22:42:31 +0000 2018,Wow, why you so hostile @npmjs? https://t.co/3IQkiWEahg
1014277318955524100,Tue Jul 03 22:38:51 +0000 2018,@maybekatz I just started this repo a couple hours ago, nothing is complete yet. If you‚Äôd like to contribute, it would be more than welcome!
1014276440697655300,Tue Jul 03 22:35:22 +0000 2018,@maybekatz I‚Äôm the maintainer of @parceljs, a module bundler implementing much of what is specified in package.json‚Ä¶ https://t.co/vVzcD5P3xd
1014273829126828000,Tue Jul 03 22:24:59 +0000 2018,@maybekatz I think I wrote it pretty clearly in the readme. It is important for interoperability of packages with m‚Ä¶ https://t.co/dOoEaPWlbZ
1014272139036262400,Tue Jul 03 22:18:16 +0000 2018,@maybekatz Why?
1014265541958103000,Tue Jul 03 21:52:04 +0000 2018,@sitnikcode @Browserslist Yep, that's great for finding tool-specific config in package.json, and that will always‚Ä¶ https://t.co/8Kt3cG0MvK
1014257464731037700,Tue Jul 03 21:19:58 +0000 2018,cc. @npmjs @webpack @browserify @RollupJS @nodejs @yarnpkg @lernajs @unpkg @jsDelivr @MetroBundler @dan_abramov‚Ä¶ https://t.co/3oNmHMRgLx
1014256351248244700,Tue Jul 03 21:15:32 +0000 2018,@FGRibreau totally!
1014253659557802000,Tue Jul 03 21:04:51 +0000 2018,RT @kristoferbaxter: This is the opportunity to help define a more formal specification for package.json for the front-end web community as‚Ä¶
1014253600187355100,Tue Jul 03 21:04:36 +0000 2018,üì£ Started writing a spec for package.json, which will help document and standardize common fields across tools. It‚Ä¶ https://t.co/ir4dYoyqbZ
1014250055602061300,Tue Jul 03 20:50:31 +0000 2018,@TheLarkInn @mjackson @WebReflection @richardiii @RollupJS @webpack @parceljs @unpkg @jamiebuilds Started a repo he‚Ä¶ https://t.co/eWML7LxUx6
1014212898338451500,Tue Jul 03 18:22:52 +0000 2018,@alidcastano Could be https://t.co/5oD0V6MVGA?
1014209304419655700,Tue Jul 03 18:08:35 +0000 2018,@alidcastano 2 quick things:  Parcel will automatically inline environment variables, so the babel transform listed‚Ä¶ https://t.co/UashjOR7lq
1014207489577873400,Tue Jul 03 18:01:23 +0000 2018,@alidcastano Awesome work! Congrats on shipping. ‚ú®
1014201135022788600,Tue Jul 03 17:36:08 +0000 2018,@mjackson @WebReflection @TheLarkInn @richardiii @RollupJS @webpack @parceljs @unpkg There needs to be an authorita‚Ä¶ https://t.co/H7Uuuxbt4y
1014189805331050500,Tue Jul 03 16:51:06 +0000 2018,@WebReflection @TheLarkInn @richardiii @RollupJS @webpack @parceljs @unpkg @npmjs Right now, package.json is a hodg‚Ä¶ https://t.co/dJXaofiP2e
1014189350848827400,Tue Jul 03 16:49:18 +0000 2018,@WebReflection @TheLarkInn @richardiii @RollupJS @webpack @parceljs @unpkg @npmjs npm only documents the fields the‚Ä¶ https://t.co/bCjeuhQtiu
1014188612768809000,Tue Jul 03 16:46:22 +0000 2018,@WebReflection @TheLarkInn @richardiii @RollupJS @webpack @parceljs @unpkg I linked you the spec earlier. It‚Äôs what‚Ä¶ https://t.co/6iMaQ8S2vL
1014187960827195400,Tue Jul 03 16:43:47 +0000 2018,@WebReflection @TheLarkInn @richardiii @RollupJS @webpack @parceljs @unpkg ‚Äúbrowser‚Äù is and always has been CJS, se‚Ä¶ https://t.co/ZM38ZWbe1j
1014183632758435800,Tue Jul 03 16:26:35 +0000 2018,@richardiii @WebReflection @TheLarkInn @RollupJS @webpack @parceljs Yep if your code is 100% universal that‚Äôs great‚Ä¶ https://t.co/uWXXM5nKB4
1014182766622093300,Tue Jul 03 16:23:08 +0000 2018,@CompuIves Awesome, congrats on the launch! üéâ
1014182689807585300,Tue Jul 03 16:22:50 +0000 2018,RT @CompuIves: Announcing CodeSandbox Dashboard &amp; Teams! üéâ  üóÉÔ∏è Use your dashboard to organize, search and edit all of your sandboxes ‚ö°Ô∏è Cre‚Ä¶
1014180822293753900,Tue Jul 03 16:15:25 +0000 2018,@WebReflection @TheLarkInn @RollupJS @webpack @parceljs The browser field is also CJS and is an explicit override o‚Ä¶ https://t.co/fGBH027o9B
1013655202790953000,Mon Jul 02 05:26:47 +0000 2018,No filter üåÖ https://t.co/7xHr8iGotr
1013637101592592400,Mon Jul 02 04:14:52 +0000 2018,@cpojer @CompuIves I don‚Äôt have anything in particular right now‚Ä¶ We‚Äôre also in the process of designing Parcel 2,‚Ä¶ https://t.co/oNhgXwOGMI
1013636698196959200,Mon Jul 02 04:13:15 +0000 2018,@jordanstaniscia Skiing in Hakuba and not sure after that yet.  I‚Äôm in Hawaii this week - back the 9th.
1013633940748300300,Mon Jul 02 04:02:18 +0000 2018,@jordanstaniscia üòÆ Going to Japan this winter for skiing but will have some time to explore as well. I‚Äôll have to get your recommendations!
1013540262503563300,Sun Jul 01 21:50:03 +0000 2018,Just released Parcel v1.9.4, which includes a bunch of bug fixes and improvements! üöÄ  üíÖ SASS watching improvements‚Ä¶ https://t.co/uih0FAFvAl
1013518844109905900,Sun Jul 01 20:24:57 +0000 2018,@CompuIves @cpojer Ooh nice. Would love to talk about how metro and parcel can work together more sometime! üòú
1013505081528873000,Sun Jul 01 19:30:16 +0000 2018,Looks like a rock but‚Ä¶ it moves! üèñüê¢ https://t.co/RQ8x1OZIFC
1013468665843363800,Sun Jul 01 17:05:33 +0000 2018,@fasterthanlime @parceljs oops, fixed!
1013445746304036900,Sun Jul 01 15:34:29 +0000 2018,@Runspired Ha! üëç
1013128163503702000,Sat Jun 30 18:32:31 +0000 2018,RT @devongovett: @greweb @dan_abramov uglify-es has been unmaintained for a while now. We recently switched @parceljs to terser, a fork tha‚Ä¶
1013127516943315000,Sat Jun 30 18:29:57 +0000 2018,@greweb @dan_abramov uglify-es has been unmaintained for a while now. We recently switched @parceljs to terser, a f‚Ä¶ https://t.co/PiwefyHBKx
1013091856794583000,Sat Jun 30 16:08:15 +0000 2018,Woke up to this view üòäüåÖ https://t.co/2EqHI7dJjA
1012824767324307500,Fri Jun 29 22:26:56 +0000 2018,Off to Maui for my 4th of July Adobe shutdown week. Gonna relax and maybe hack on @parceljs a bit from the beach! üòéüå¥üèñ
1012196961741492200,Thu Jun 28 04:52:16 +0000 2018,@jlongster If you notice a pattern for when you need to do that please file an issue! We‚Äôd love to fix it. üòä
1012016509831471100,Wed Jun 27 16:55:12 +0000 2018,@probablyup @parceljs We support sideEffects as well. But most of the code on npm is not published as ES modules bu‚Ä¶ https://t.co/mynVRWuWq1
1011999705113419800,Wed Jun 27 15:48:26 +0000 2018,Pretty awesome results for tree shaking in @parceljs 1.9! Support for hoisting CommonJS along with ES modules pays‚Ä¶ https://t.co/jRoVLob2IU
1011716931630477300,Tue Jun 26 21:04:47 +0000 2018,@jbreckmckye nice! I‚Äôm a little surprised about the second test - will have to look into that. Not sure how lodash‚Ä¶ https://t.co/vRu9GR78rQ
1011449844748042200,Tue Jun 26 03:23:29 +0000 2018,@dan_abramov Thanks for the link to Parcel! üòç
1011449551687839700,Tue Jun 26 03:22:19 +0000 2018,Nice, the official @reactjs docs now link to @parceljs! ‚ú® https://t.co/l97sYWMvPU
1011010426060996600,Sun Jun 24 22:17:23 +0000 2018,Happy Pride SF! üè≥Ô∏è‚Äçüåà https://t.co/HemRx6G3rQ
1010919943506878500,Sun Jun 24 16:17:51 +0000 2018,RT @nathangitter: Bringing newspapers to life with #ARKit. üì∞üì±  Animated weather maps and sports highlights are just the beginning! Built wi‚Ä¶
1010636005471223800,Sat Jun 23 21:29:35 +0000 2018,Finally made it out for a bike ride! Summer has arrived in SF (at least for today). ‚òÄÔ∏èüö≤ https://t.co/ULDyuGoos4
1009268907134181400,Wed Jun 20 02:57:13 +0000 2018,City sunset üåÖ #sf #sunset #cityscape @ San‚Ä¶ https://t.co/BOevqqXqPS
1009110984290533400,Tue Jun 19 16:29:41 +0000 2018,This is a common misunderstanding of what is meant by ‚Äúzero config‚Äù. It doesn‚Äôt mean ‚Äúnon-configurable‚Äù, it means ‚Äú‚Ä¶ https://t.co/uInkqlHrlY
1008955208326496300,Tue Jun 19 06:10:41 +0000 2018,@jandolezal71 @parceljs we have been hashing bundle names since v1.7 :) https://t.co/bXbKNqcpMK
1008953920989696000,Tue Jun 19 06:05:34 +0000 2018,@jandolezal71 @parceljs https://t.co/luLm6GhgG3
1008905733071519700,Tue Jun 19 02:54:05 +0000 2018,@eaf4 yeah that‚Äôs true for the template files - there can be custom logic there to pull out dependencies because it‚Ä¶ https://t.co/iMpfIfMjsH
1008903296965173200,Tue Jun 19 02:44:25 +0000 2018,@eaf4 The problem is that many tools like Parcel depend on dependencies being declared in a standard way in the cod‚Ä¶ https://t.co/LRPntDRY9r
1008895669229084700,Tue Jun 19 02:14:06 +0000 2018,@Runspired @jamiebuilds @parceljs I tried to make a demo based on Glimmer a loooong time ago and had it working. I‚Äô‚Ä¶ https://t.co/DvcAWya8m7
1008891770044706800,Tue Jun 19 01:58:36 +0000 2018,@osdevisnot @parceljs hmm not sure about the value of this. why would you need a bundler if you‚Äôre using native mod‚Ä¶ https://t.co/s2ffbQ8kK4
1008890422603608000,Tue Jun 19 01:53:15 +0000 2018,@Runspired @jamiebuilds @parceljs Parcel needs to be able to discover the graph itself, but we could think about ho‚Ä¶ https://t.co/AvCLdgkjS5
1008889507721048000,Tue Jun 19 01:49:37 +0000 2018,@Runspired @jamiebuilds @parceljs I‚Äôm sure it‚Äôs possible in custom tooling, but it‚Äôs very ember specific and hard t‚Ä¶ https://t.co/XbThsChoAD
1008888946393165800,Tue Jun 19 01:47:23 +0000 2018,@Runspired @jamiebuilds @parceljs My understanding the last time I looked was that ember templates can reference ot‚Ä¶ https://t.co/khmhgauuTu
1008837873104085000,Mon Jun 18 22:24:26 +0000 2018,@fusionstrings @parceljs @RollupJS @jspm why do you need to use Rollup and Parcel together?
1008802712698253300,Mon Jun 18 20:04:44 +0000 2018,@martin_hotell @parceljs https://t.co/luLm6GhgG3
1008789865981304800,Mon Jun 18 19:13:41 +0000 2018,@robcresswell @parceljs we just added tree shaking support in 1.9! It should get the same or even smaller sizes tha‚Ä¶ https://t.co/6pgWk3Os4f
1008783191493132300,Mon Jun 18 18:47:09 +0000 2018,@ahmedlhanafy @jaffathecake @parceljs done back in 1.7 üòâ https://t.co/bXbKNqcpMK
1008783191493132300,Mon Jun 18 18:47:09 +0000 2018,@ahmedlhanafy @jaffathecake @parceljs done back in 1.7 üòâ https://t.co/bXbKNqcpMK
1008782412904423400,Mon Jun 18 18:44:04 +0000 2018,@rafalfilipek @parceljs lol
1008781397434064900,Mon Jun 18 18:40:02 +0000 2018,@quarterto @jaffathecake @parceljs https://t.co/luLm6GhgG3
1008781322892898300,Mon Jun 18 18:39:44 +0000 2018,@JonathanMH_com @parceljs yep, Vue was added in 1.7 https://t.co/bXbKNqcpMK
1008779757482213400,Mon Jun 18 18:33:31 +0000 2018,Parcel 2 will require zero configuration out of the box, and most users will never need to configure it. But for th‚Ä¶ https://t.co/mq11YG9gVt
1008779696924852200,Mon Jun 18 18:33:16 +0000 2018,@CodingItWrong @PrettierCode config will still not be required in Parcel 2, and I‚Äôd expect most users to never need‚Ä¶ https://t.co/NNFwhvodC9
1008778220487917600,Mon Jun 18 18:27:24 +0000 2018,Parcel 2 will be much more extendible, pluggable, and configurable (üò±). It will be designed to scale for huge apps,‚Ä¶ https://t.co/huDmg2EnPb
1008775564553961500,Mon Jun 18 18:16:51 +0000 2018,@AdamRackis @parceljs yup, you‚Äôll be able to extend or even swap out the resolved wholesale
1008774802490847200,Mon Jun 18 18:13:49 +0000 2018,@AdamRackis @parceljs Some of those things are probably already possible (see https://t.co/VeCtCXAy7P) but we‚Äôre ma‚Ä¶ https://t.co/xUb3NRdKwQ
1008772961149468700,Mon Jun 18 18:06:30 +0000 2018,@AdamRackis @parceljs indeed, we‚Äôre working on a much improved plugin system for Parcel 2! üôÇ
1008482965007953900,Sun Jun 17 22:54:10 +0000 2018,@brian_d_vaughn @probablyup Yeah, you have to really optimize your item rendering and reuse DOM nodes as much as possible.
1008459643037802500,Sun Jun 17 21:21:29 +0000 2018,@brian_d_vaughn If you scroll really fast, it doesn‚Äôt quite keep up - you start seeing whitespace. In my experience‚Ä¶ https://t.co/3yKLyKvxyh
1008421348882899000,Sun Jun 17 18:49:19 +0000 2018,@jasonlaster11 @parceljs @FirefoxDevTools source maps aren‚Äôt quite supported with tree shaking yet, but we‚Äôre worki‚Ä¶ https://t.co/HnZRoYuzjM
1007764046643265500,Fri Jun 15 23:17:26 +0000 2018,RT @HenrikJoreteg: Holy, wowsers, Batman! @parceljs added experimental support for treeshaking to 1.9. and it even works on commonjs module‚Ä¶
1007644385113079800,Fri Jun 15 15:21:57 +0000 2018,RT @acdlite: I think I‚Äôll try Parcel in my next side project. Great post, @devongovett https://t.co/8P22W2VAuT
1007446856786370600,Fri Jun 15 02:17:02 +0000 2018,RT @devongovett: üçÉ Parcel v1.9.0 does tree shaking on both ES6 and CommonJS modules! This is a HUGE deal since most of the code on npm is s‚Ä¶
1007391878956761100,Thu Jun 14 22:38:35 +0000 2018,@jkup @jamiebuilds I think it should, if not even smaller since we also handle tree shaking for CommonJS. Webpack only handles ES6.
1007391710836449300,Thu Jun 14 22:37:54 +0000 2018,@StewartUlm https://t.co/ngKgvlDWoN  https://t.co/brrUOFvhPe
1007342978241687600,Thu Jun 14 19:24:16 +0000 2018,@CompuIves @mjackson @_developit @unpkg we‚Äôre also working on getting Parcel to run in the browser. üòâ
1007318546622189600,Thu Jun 14 17:47:11 +0000 2018,pretty awesome üî• https://t.co/BVSZa4uqvM
1007312125843333100,Thu Jun 14 17:21:40 +0000 2018,daaaaaang, nice! üôå https://t.co/ngKgvlDWoN
1007304328376299500,Thu Jun 14 16:50:41 +0000 2018,@AdamRackis @tolmasky @cpojer @RollupJS @wSokra Just released tree shaking in parcel 1.9.0, and it supports CommonJ‚Ä¶ https://t.co/kERSX2C4kp
1007299353541636100,Thu Jun 14 16:30:55 +0000 2018,@bcoops222 yep, `scopeHoist: true`
1007295102878769200,Thu Jun 14 16:14:01 +0000 2018,üçÉ Parcel v1.9.0 does tree shaking on both ES6 and CommonJS modules! This is a HUGE deal since most of the code on n‚Ä¶ https://t.co/4O7W5YAM57
1007293385911119900,Thu Jun 14 16:07:12 +0000 2018,HUGE thanks to @fathyboundjadj for his help implementing tree shaking in @parceljs! And congrats on earning merge rights too. üòç
1007291359336677400,Thu Jun 14 15:59:09 +0000 2018,Pretty excited about this one. üòâ https://t.co/UmO3KFmi3G
1007291244152696800,Thu Jun 14 15:58:41 +0000 2018,RT @parceljs: Parcel v1.9.0 is out! üöÄ  üå≥ Tree Shaking + scope hoisting for both ES6 and CommonJS modules! üëÄ Up to 2x faster file watcher üíµ‚Ä¶
1006556355769991200,Tue Jun 12 15:18:30 +0000 2018,RT @pedronauck: I'm so happy to announce Docz! üòçüöÄ A simple and powerful tool that'll help you a lot documenting things!  https://t.co/nVnbg‚Ä¶
1006359296601305100,Tue Jun 12 02:15:28 +0000 2018,@ryanflorence yeah you have to call `focus()` yourself on the button, both on mousedown and mouseup if you want saf‚Ä¶ https://t.co/ZYs1qu2oGL
1006241071053996000,Mon Jun 11 18:25:41 +0000 2018,I used to write libraries in other compile to JS langs, e.g. CoffeeScript - but now that isn‚Äôt really a thing anymo‚Ä¶ https://t.co/I2d27Dp6MT
1006227227107778600,Mon Jun 11 17:30:40 +0000 2018,What is it with people offering to convert open source libraries to TypeScript? Like, thanks for offering to contri‚Ä¶ https://t.co/S518BicUdM
1006224941027491800,Mon Jun 11 17:21:35 +0000 2018,@jkup @wesbos @parceljs it is not, but that is pretty exciting too üòâ
1005882781740646400,Sun Jun 10 18:41:58 +0000 2018,Who is excited for some REALLY exciting @parceljs stuff this week? üòâüí™üî•üöÄ
1005881356239290400,Sun Jun 10 18:36:18 +0000 2018,üåüü§©‚ú® https://t.co/aEfK4refQn
1005676440640053200,Sun Jun 10 05:02:02 +0000 2018,@jamiebuilds @flowtype oh god that syntax is so ugly
1005286796874342400,Sat Jun 09 03:13:44 +0000 2018,Watching the @warriors crush the @cavs! üèÄ #NBAFinals https://t.co/c1tDcphGmr
1005103081913061400,Fri Jun 08 15:03:43 +0000 2018,RT @thekitze: Introducing JSUI - A powerful UI toolkit for managing JavaScript apps üéâ  üóÇ Organize &amp; group apps ü§ñ Generate new apps üîç Search‚Ä¶
1004186872187269100,Wed Jun 06 02:23:01 +0000 2018,Did my civic duty! üëç https://t.co/4sn8t3iBUq
1004125581531758600,Tue Jun 05 22:19:29 +0000 2018,@jkup @dan_abramov check out https://t.co/RwckfolE9y
1004122890818633700,Tue Jun 05 22:08:47 +0000 2018,@dan_abramov yes.
1003781257732354000,Mon Jun 04 23:31:15 +0000 2018,Hello Seattle! üëã https://t.co/mHqZcmrUX3
1003746661485633500,Mon Jun 04 21:13:47 +0000 2018,Haha just as webgl becomes a thing‚Ä¶ ü§¶‚Äç‚ôÇÔ∏è https://t.co/faQuZLfFsA
1003395952135163900,Sun Jun 03 22:00:11 +0000 2018,@jamiebuilds @parceljs Yeah I definitely saw it around but I feel like it has really become a thing in the last few months.
1003395091166158800,Sun Jun 03 21:56:46 +0000 2018,Oh no‚Ä¶ ü§¶‚Äç‚ôÇÔ∏è https://t.co/Of55LIGWay
1003368220382949400,Sun Jun 03 20:10:00 +0000 2018,Did @parceljs start the ‚Äúblazing fast‚Äù meme? üòÉ #whathaveidone
1003123729679839200,Sun Jun 03 03:58:28 +0000 2018,Ooh deno uses @parceljs! üòÉ https://t.co/FyLhzillEo
1003090818671013900,Sun Jun 03 01:47:42 +0000 2018,Exploring Vancouver this weekend! Beautiful city. üòä https://t.co/krbMKnj7Ab
1003010484851826700,Sat Jun 02 20:28:29 +0000 2018,Everyone go support Henry! He quit his job to work full time on @babeljs which you probably use. Give back to the p‚Ä¶ https://t.co/rSDQOpYXV0
1003010082194329600,Sat Jun 02 20:26:53 +0000 2018,@fcassia I believe they are still working on archiving it
1002619190136561700,Fri Jun 01 18:33:37 +0000 2018,@humphd @parceljs Yeah! Any file type can be the entry point for Parcel, not only HTML or JS. üòä
1002560395297448000,Fri Jun 01 14:39:59 +0000 2018,@swyx @parceljs Hmm not sure, I don‚Äôt know much about typescript. You could ask in our slack maybe: https://t.co/4kZjAc83QG
1002559836817580000,Fri Jun 01 14:37:46 +0000 2018,RT @ryanflorence: ‚ôøÔ∏è Announcing Reach Router: An Accessible Router for React ‚ôøÔ∏è  - Accessible by Default w/ Focus Management - Relative Lin‚Ä¶
1002559521317777400,Fri Jun 01 14:36:31 +0000 2018,RT @_egoistlily: üî• Introducing Maid üî•  A markdown driven task runner.. Like @gulpjs but you write task in Markdown ü§Ø  https://t.co/Uu3s1XVA‚Ä¶
1000881977854054400,Sun May 27 23:30:33 +0000 2018,Beautiful day in Portland! ‚òÄÔ∏è https://t.co/KAERMp1IjX
1000583775397408800,Sun May 27 03:45:36 +0000 2018,Made a new friend today üê±‚ù§Ô∏è https://t.co/o36oupEmj3
999797523035242500,Thu May 24 23:41:19 +0000 2018,Oh man, this could be HUGE for @parceljs! üí• https://t.co/MInro7CGQ2
999700152301441000,Thu May 24 17:14:24 +0000 2018,@gatsbyjs Ooh nice! Let‚Äôs make it use @parceljs! üòâ
999678744116674600,Thu May 24 15:49:20 +0000 2018,RT @swyx: üîàThanks to the wonderful folks at @NYCReact for having me speak about create-react-app and the quest for better developer experie‚Ä¶
999530752667603000,Thu May 24 06:01:16 +0000 2018,@mjackson @skevy That‚Äôs why I wrote @parceljs
998688107527524400,Mon May 21 22:12:54 +0000 2018,@skevy @parceljs yeah the problem with watchman is that you have to install a daemon.
998659307347492900,Mon May 21 20:18:27 +0000 2018,@jkup @parceljs YES! Happy to help with that. üòâ
998659156985892900,Mon May 21 20:17:51 +0000 2018,HUGE thanks to @JasperDeMoor who keeps killing it on @parceljs too! ‚ù§Ô∏èüëç https://t.co/KPruoCJeG9
998658762805166100,Mon May 21 20:16:17 +0000 2018,üéâ Really excited about this PR, which moves the @parceljs file watcher into a background worker for performance and‚Ä¶ https://t.co/PCgdDPNRUk
998657517021376500,Mon May 21 20:11:20 +0000 2018,@jamiebuilds lol
998638559622938600,Mon May 21 18:56:01 +0000 2018,@intelligibabble congrats!
998638394690318300,Mon May 21 18:55:21 +0000 2018,Man Google Inbox is so good! ‚ù§Ô∏è the categories it makes and the ability to delete everything in a category at once.‚Ä¶ https://t.co/iRYlVLffi7
998622186611949600,Mon May 21 17:50:57 +0000 2018,@bogas04 @code honestly I just started trying out VS Code yesterday so not sure yet :D
998621943686287400,Mon May 21 17:49:59 +0000 2018,@jordanstaniscia @Philmod @maxvoltar don‚Äôt encourage him üòú
998621645832044500,Mon May 21 17:48:48 +0000 2018,@jordanstaniscia @goabstract congrats dude!! I have heard good things. üòÄ
998582910671204400,Mon May 21 15:14:53 +0000 2018,@xdamman Well‚Ä¶ I‚Äôm not planning on using it as my main machine so hopefully it‚Äôs enough for some light stuff when t‚Ä¶ https://t.co/RkSj1nHSqk
998379204088553500,Mon May 21 01:45:25 +0000 2018,Might be late to this, but https://t.co/s0s39FEVPc is super nice, even on desktop. Way better than the normal website. üëè
998353180604878800,Mon May 21 00:02:01 +0000 2018,I just got the base model, Intel Core m3, 8GB RAM. So far, it's plenty fast. Trying not to install much on it. Full‚Ä¶ https://t.co/r3KEiNREQR
998352204565131300,Sun May 20 23:58:08 +0000 2018,So I bought a 12" MacBook for personal use. Previously only had an iMac at home and a work laptop.  Man this thing‚Ä¶ https://t.co/DhP02bCdVD
998257396848865300,Sun May 20 17:41:24 +0000 2018,@AdamRackis hmm it should, everything uses the same resolver.
998239807007440900,Sun May 20 16:31:31 +0000 2018,@AdamRackis The leading slash tells the reader where to look for that module. Otherwise it just looks like it should be in node_modules.
998063472477798400,Sun May 20 04:50:49 +0000 2018,@AdamRackis aliases are necessary in order to support e.g. react -&gt; preact, but I generally discourage people from‚Ä¶ https://t.co/mp7JOWF7NO
998063466610024400,Sun May 20 04:50:48 +0000 2018,@AdamRackis I generally think that mucking with the require paths is a bad idea. Reading code that uses this is ann‚Ä¶ https://t.co/CypSbMpo73
998052731901198300,Sun May 20 04:08:08 +0000 2018,@AdamRackis you can do this with aliases in package.json:  "alias": {   "app": "./path/to/app" }
998012590490927100,Sun May 20 01:28:38 +0000 2018,RT @devongovett: @AdamRackis we're working on it üôÉ  https://t.co/CZuuOk6u7B  That PR handles tree shaking of both ES6 and CommonJS modules,‚Ä¶
998012414460215300,Sun May 20 01:27:56 +0000 2018,@AdamRackis we're working on it üôÉ  https://t.co/CZuuOk6u7B  That PR handles tree shaking of both ES6 and CommonJS m‚Ä¶ https://t.co/UZd3AJD9FW
997703115179606000,Sat May 19 04:58:53 +0000 2018,Deadpool 2 üëç
997494543606923300,Fri May 18 15:10:06 +0000 2018,RT @mjasay: .@filmaj used the GitHub REST API to pull public profile information from all 2,060,011 GitHub users who were active in 2017 (1‚Ä¶
997492413877780500,Fri May 18 15:01:38 +0000 2018,RT @MaterialUI: Material-UI v1 is out üéâ https://t.co/20rdtAYmZ0
997300622285094900,Fri May 18 02:19:31 +0000 2018,RT @swyx: Looks like the cool new @TensorFlow Pose demos use @parceljs to make their demos super simple - so cool!  https://t.co/PsI3xM9kYw‚Ä¶
997300613422567400,Fri May 18 02:19:29 +0000 2018,Whaaat! So awesome. üòé https://t.co/HTkLC3FUbs
997139113747742700,Thu May 17 15:37:45 +0000 2018,Wearing appropriate attire for @Storify‚Äôs last day. üò¢   Working with @xdamman @burtherman @boheekim @Philmod‚Ä¶ https://t.co/CZjXeXzMyb
996965244793638900,Thu May 17 04:06:51 +0000 2018,@RobertFischer @parceljs Our slack is the best place to get help: https://t.co/4kZjAc83QG
996551165025267700,Wed May 16 00:41:27 +0000 2018,@jamiebuilds Nope
996455071050154000,Tue May 15 18:19:36 +0000 2018,@mathias @probablyup @bmeurer @sebastiansoft @v8js @nodejs I have another function that is much slower now though a‚Ä¶ https://t.co/hKzePa24H0
996448712984444900,Tue May 15 17:54:20 +0000 2018,@probablyup @bmeurer @sebastiansoft @v8js @nodejs I guess, but the performance characteristics of this code changed‚Ä¶ https://t.co/wFks2OnGSG
996410338084962300,Tue May 15 15:21:51 +0000 2018,@bmeurer @sebastiansoft @v8js @nodejs ah hmm, does not appear to happen in v8.11.1. I just assumed that they wouldn‚Ä¶ https://t.co/IhKEZLgUne
996409335998632000,Tue May 15 15:17:52 +0000 2018,@bmeurer @sebastiansoft @v8js @nodejs v8.2.1 to be exact. I saw the message in the remote chrome profiler for the p‚Ä¶ https://t.co/KU0w4Ig2kU
996402075331280900,Tue May 15 14:49:01 +0000 2018,@bmeurer @sebastiansoft @v8js @nodejs This is node 8 which is the current LTS version‚Ä¶
996401618038898700,Tue May 15 14:47:12 +0000 2018,@mathias @v8js Node 8. Hopefully not that ancient! üòâ
996263794887213000,Tue May 15 05:39:33 +0000 2018,Sooo‚Ä¶ I changed this variable declaration from `let` to `var` and this function got 2x faster. WTF @v8js!‚Ä¶ https://t.co/LifvCXFasx
996233824731217900,Tue May 15 03:40:27 +0000 2018,@sarah_federman Maybe if it wasn‚Äôt called ‚Äúdesign‚Äù systems more devs would pay attention?
996214925444837400,Tue May 15 02:25:21 +0000 2018,Yup https://t.co/lGjRZ7WPo2
996213969298718700,Tue May 15 02:21:33 +0000 2018,Earthquake?
996121800152043500,Mon May 14 20:15:18 +0000 2018,@_whiteswift @_ChrisGreg @arielwithlegs @jamesracollins hey, what bugs did you run across? üòâ
996053525271478300,Mon May 14 15:44:00 +0000 2018,@cpojer @sebmck @madbyk @amasad @arcanis @sebmarkbage @MetroBundler @babeljs @yarnpkg Parcel has explored this a li‚Ä¶ https://t.co/r6gUizoQxG
995349016295555100,Sat May 12 17:04:32 +0000 2018,RT @neoziro: Just published Loadable Components v2.0.1, the simplest React Code Splitting library ‚úÇÔ∏è‚ú®  üì¶ Webpack &amp; Parcel support ‚ö°Ô∏è Hot Re‚Ä¶
995141915707195400,Sat May 12 03:21:36 +0000 2018,RT @swyx: üí©create-react-app-parcel is done!! üí©  Make blazing (yes, BLAZING) üî•üë®üèº‚ÄçüöíüöíüéÜ fast @reactjs apps bundled by @parceljs !  `npm i -g cr‚Ä¶
994999095570849800,Fri May 11 17:54:05 +0000 2018,RT @left_pad: üôå So excited to announce a new support tier for @babeljs via @opencollect, starting with my previous company @Adobe! üéâCan rea‚Ä¶
994964516290027500,Fri May 11 15:36:40 +0000 2018,@Rich_Harris @jamiebuilds Except if you actually need to test in IE to fix a bug or something. Then you might be co‚Ä¶ https://t.co/7OcivOt2Zo
994948732075425800,Fri May 11 14:33:57 +0000 2018,@Rich_Harris @AdamRackis @jkup @TheLarkInn @RollupJS @parceljs @webpack mmm. well this seems like a fairly small ap‚Ä¶ https://t.co/eBucXEthB8
994944184892112900,Fri May 11 14:15:53 +0000 2018,@AdamRackis @Rich_Harris @jkup @TheLarkInn @RollupJS @parceljs @webpack The numbers are wrong‚Ä¶ https://t.co/yXo3Dx2c4j
994765616094634000,Fri May 11 02:26:19 +0000 2018,@TheLarkInn @Rich_Harris @RollupJS @parceljs @webpack um‚Ä¶ what is going on here?
994676398508789800,Thu May 10 20:31:48 +0000 2018,@seldo @Storify not for long. we are shutting it down in a few days (i‚Äôm the last remaining engineer on the team). üòû
994671847881957400,Thu May 10 20:13:43 +0000 2018,Thanks everyone for sharing your ideas and experiences. If you‚Äôre suffering from burnout as well, take a look at th‚Ä¶ https://t.co/83Ue9BdaTb
994319285337010200,Wed May 09 20:52:45 +0000 2018,@kg_creative üëã
994259926410186800,Wed May 09 16:56:53 +0000 2018,@ericnakagawa @left_pad I‚Äôd say my management is supportive and understanding but current priorities make it difficult.
994247052610568200,Wed May 09 16:05:44 +0000 2018,Stickers, coming at ya! ‚ù§Ô∏è, @parceljs.   P.S. my hand hurts now from writing all those addresses. üòä https://t.co/Ak37tTYcSJ
994246565077254100,Wed May 09 16:03:47 +0000 2018,@left_pad ya my main issue is trying to balance open source time with work time. Trying to get more time at work to do OSS, but it‚Äôs hard.
994219953837363200,Wed May 09 14:18:03 +0000 2018,Open source maintainers / people with jobs: what are some good tips to deal with burnout? üòê
994216634230325200,Wed May 09 14:04:51 +0000 2018,RT @mikeal: This seems to have gone mostly unnoticed.  All readable streams in Node.js v10 are async iterators. This is really, really, big‚Ä¶
994063932217348100,Wed May 09 03:58:04 +0000 2018,@sarah_federman That would require using workday üò©
994063558387302400,Wed May 09 03:56:35 +0000 2018,@jkup @sarah_federman working on it üòâ
994057621811298300,Wed May 09 03:33:00 +0000 2018,We‚Äôre hiring too! Come join us. üòúüî• https://t.co/BUnD31l0TU
993960264964890600,Tue May 08 21:06:08 +0000 2018,There are no hard feelings between @webpack and @parceljs. Ryan Clark does not represent webpack and acted alone. W‚Ä¶ https://t.co/kHcr2kQ7fa
993944378522587100,Tue May 08 20:03:01 +0000 2018,@rynclark Thanks. I realize I may be pushing our luck here, but would you be open to keeping `parceljs` (since it m‚Ä¶ https://t.co/tFf4WnCvg1
993943224422039600,Tue May 08 19:58:25 +0000 2018,Holy shit, guess I missed some drama this morning‚Ä¶ üòê
993579097006657500,Mon May 07 19:51:31 +0000 2018,parcel-plugin-bundle-visualiser is pretty awesome for analyzing bundle sizes. Managed to reduce the initial bundle‚Ä¶ https://t.co/ClBunY9r3P
993247286397255700,Sun May 06 21:53:01 +0000 2018,RT @MicheleBertoli: I just published `react-automata` v3 üöÄ  https://t.co/K3I0Aeu93w Thanks to @AndaristRake (improved the bundle) @GantLabo‚Ä¶
992945324216864800,Sun May 06 01:53:07 +0000 2018,@_developit @DasSurma @marvinhagemeist @lionralfs connect = (store, Comp) =&gt; class extends Component {   componentD‚Ä¶ https://t.co/aAEFp03rKR
992937589979078700,Sun May 06 01:22:23 +0000 2018,@_developit @DasSurma @marvinhagemeist @lionralfs store = {}
992933891332702200,Sun May 06 01:07:42 +0000 2018,Github‚Äôs new issue type templates are really nice! Will really help people enter the relevant info for different ty‚Ä¶ https://t.co/99gUtvVIMh
992438131549921300,Fri May 04 16:17:43 +0000 2018,@adel_kamel @yann_isabel @parceljs DM me your address ;)
992438058220798000,Fri May 04 16:17:26 +0000 2018,@sintloer @parceljs all good, just DM me your address. we accept donations on opencollective too btw: https://t.co/RNoArxIPNi ;)
992437939723354100,Fri May 04 16:16:58 +0000 2018,@albinotonnina @parceljs DM me your address ;)
992251897082822700,Fri May 04 03:57:42 +0000 2018,@klintmane @kentcdodds Multiple entry points launched today üòâ https://t.co/k8qRWF179I
992187775523811300,Thu May 03 23:42:54 +0000 2018,Got some new @parceljs stickers! They‚Äôre smaller than the first batch: 2x2‚Äù. DM if you want one! ü§© https://t.co/gIozjvB7Vv
992135363178082300,Thu May 03 20:14:38 +0000 2018,@kentcdodds Tree shaking is one of the last big things, but that‚Äôs coming very soon üòú https://t.co/CZuuOk6u7B
992131461015789600,Thu May 03 19:59:07 +0000 2018,RT @xdamman: Great to see @framasoft working on an open source version of @Storify.   First beta available on  https://t.co/rpW7B4qzOO (cur‚Ä¶
992122354359652400,Thu May 03 19:22:56 +0000 2018,@sincerely_tegan @parceljs twitter probably had that cached‚Ä¶
992119518024499200,Thu May 03 19:11:40 +0000 2018,RT @parceljs: We now have `parcel` on npm! v1.8.0 is published as both `parcel-bundler` and `parcel`. üôå https://t.co/WwwJP3yg1S
992118017998766100,Thu May 03 19:05:42 +0000 2018,RT @parceljs: üöÄ Parcel v1.8.0 is out!  üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Multiple entry points üîó `source` field in package.json to enable babel on symlinked modules‚Ä¶
992102094424305700,Thu May 03 18:02:26 +0000 2018,RT @JasperDeMoor: I just published ‚ÄúWriting a @parceljs plugin‚Äù https://t.co/w37TxoNkcX
992078061246951400,Thu May 03 16:26:56 +0000 2018,@left_pad Haha gotta ask what‚Äôs on my mind Henry üòâ
991876484506697700,Thu May 03 03:05:56 +0000 2018,üëç @wafflejs https://t.co/KtNpm121bP
991816291492159500,Wed May 02 23:06:45 +0000 2018,Heading to @wafflejs tonight, looks like it will be a good time.
991704055939457000,Wed May 02 15:40:46 +0000 2018,üëï Any designers out there want to help design a @parceljs t-shirt? I think the current logo probably is too photo-r‚Ä¶ https://t.co/ZkUwN2nXn3
991437956203339800,Tue May 01 22:03:23 +0000 2018,Nice, go see all your Github contributions of all time in one chart. https://t.co/R8CrhBDblQ https://t.co/tIorqFnkED
991044125695795200,Mon Apr 30 19:58:26 +0000 2018,RT @HugoGiraudel: GitHub *finally* moved the + and - symbols from diffs to CSS pseudo-elements, making it possible to copy code directly fr‚Ä¶
990642429123485700,Sun Apr 29 17:22:15 +0000 2018,Really cool project! Drag and drop a font to see all kinds of information about it, including the character set, wh‚Ä¶ https://t.co/eGXSpWNMRY
990638320458678300,Sun Apr 29 17:05:55 +0000 2018,@pixelambacht awesome work!
990309915989164000,Sat Apr 28 19:20:57 +0000 2018,RT @zeithq: https://t.co/eVihl1Age0 - The new home for Next.js, its documentation, and a showcase of beautiful applications using it https:‚Ä¶
990294534650130400,Sat Apr 28 18:19:50 +0000 2018,RT @rauchg: üî¥  https://t.co/ynKHRAazDb
990083559820902400,Sat Apr 28 04:21:30 +0000 2018,@a0viedo @zeithq Oh really‚Ä¶? ü§î
990080901169082400,Sat Apr 28 04:10:56 +0000 2018,Man wish I was going to @zeithq day tomorrow. Looks great, not sure how I missed it before. https://t.co/lVvPVEI8Ib
990060641401487400,Sat Apr 28 02:50:26 +0000 2018,@LeaVerou üòï sorry about that‚Ä¶
989869904084942800,Fri Apr 27 14:12:30 +0000 2018,Ok, we won‚Äôt drop IE 11 by default just yet in @parceljs even though I‚Äôd like to. Mostly don‚Äôt want to deal with th‚Ä¶ https://t.co/2xmKbQn5mN
989864653982392300,Fri Apr 27 13:51:38 +0000 2018,@jkup @CompuIves Join me and @left_pad for lunch on Wednesday? üòä
989702791491870700,Fri Apr 27 03:08:27 +0000 2018,@CompuIves üëã
989350965231763500,Thu Apr 26 03:50:26 +0000 2018,RT @devongovett: Poll: We are considering dropping IE 11 support by default in @parceljs. Easy enough to turn back on with your own custom‚Ä¶
989151366596608000,Wed Apr 25 14:37:17 +0000 2018,Poll: We are considering dropping IE 11 support by default in @parceljs. Easy enough to turn back on with your own‚Ä¶ https://t.co/F0Wblq82Nf
989149715496296400,Wed Apr 25 14:30:44 +0000 2018,Using a browserslist query of `&gt; 1%, not ie 11` with babel-preset-env results in just 2 plugins being applied inste‚Ä¶ https://t.co/lJWsEdUbMG
988765887720128500,Tue Apr 24 13:05:32 +0000 2018,Open source has the power to change that. Would be awesome to standardize on one or two component libraries that ar‚Ä¶ https://t.co/qPoKTdJpA0
988765707251761200,Tue Apr 24 13:04:49 +0000 2018,Unfortunately, most companies don‚Äôt have the resources to invest in making their component libraries truly great. T‚Ä¶ https://t.co/N5LMH6YSZR
988764450734858200,Tue Apr 24 12:59:50 +0000 2018,Interesting list of design systems/component libraries different companies have developed: https://t.co/fw7UZeGXv3‚Ä¶ https://t.co/DPl4pX3H5R
988414268709027800,Mon Apr 23 13:48:20 +0000 2018,Pretty nice article about @parceljs from a Webpack fan üéâ https://t.co/NDk7fGlkUk https://t.co/GUXXxg8xSU
987985225341956100,Sun Apr 22 09:23:28 +0000 2018,RT @xdamman: Great to see more and more companies chipping in to sustain our common open source infrastructure. üòç  Become an internal champ‚Ä¶
987737419142361100,Sat Apr 21 16:58:46 +0000 2018,The rooftops of Belgrade üá∑üá∏ #serbia #sunset #travel @ Belgrade, Serbia https://t.co/CGMBCFtx8M
987252521034018800,Fri Apr 20 08:51:57 +0000 2018,RT @MicheleBertoli: (On an issue) Bob: it shouldn't be hard to implement. Maintainer: would you be happy to submit a PR? Bob: I don't have‚Ä¶
987203927161671700,Fri Apr 20 05:38:52 +0000 2018,RT @glitch: Get started with @parceljs using this handy starter app! https://t.co/fCXI7TvufK https://t.co/XBspkiB0JI
986674055460859900,Wed Apr 18 18:33:20 +0000 2018,RT @albinotonnina: I'm working on a project at work. I started it with @parceljs, version 1.2.1 at the time, with the fingers that I couldn‚Ä¶
986554513078222800,Wed Apr 18 10:38:19 +0000 2018,Vue has JSX now? This looks exactly like React. What‚Äôs the advantage of Vue then? https://t.co/Cw2iviWSZT
986250445994758100,Tue Apr 17 14:30:04 +0000 2018,@_egoistlily @babeljs @parceljs the sync plugin. I ended up using https://t.co/NIdbKvUhuC üòâ.  This converts a promi‚Ä¶ https://t.co/N1h8L40ccj
986248929607024600,Tue Apr 17 14:24:03 +0000 2018,@_egoistlily @babeljs ooh nice, I needed this for @parceljs recently. üòä
986154172339892200,Tue Apr 17 08:07:31 +0000 2018,@theKashey It‚Äôs much more necessary than you think. A list control should be one tab stop. You should tab to the en‚Ä¶ https://t.co/r9UnwTQRjB
986151934334775300,Tue Apr 17 07:58:37 +0000 2018,@theKashey e.g. a list component that you want to be navigable with the arrow keys. To be accessible, the ‚Äúselected‚Ä¶ https://t.co/WuaDjiQ5SS
986150366612947000,Tue Apr 17 07:52:23 +0000 2018,RT @devongovett: @theKashey Changing focus is useful for many reasons, especially implementing proper accessibility e.g. keyboard navigatio‚Ä¶
986150332106502100,Tue Apr 17 07:52:15 +0000 2018,@theKashey Changing focus is useful for many reasons, especially implementing proper accessibility e.g. keyboard na‚Ä¶ https://t.co/YJBbml5d45
985976897258639400,Mon Apr 16 20:23:05 +0000 2018,RT @devongovett: Played around with building a controlled focus manager in React today. Let‚Äôs you work with focus through state instead of‚Ä¶
985890188445585400,Mon Apr 16 14:38:32 +0000 2018,Played around with building a controlled focus manager in React today. Let‚Äôs you work with focus through state inst‚Ä¶ https://t.co/qaKAE69JfP
985583944702857200,Sun Apr 15 18:21:38 +0000 2018,RT @parceljs: üöÄ Parcel v1.7.1 is out! Includes lots of fixes, including freezing on Windows with large projects, and parallel yarn/npm auto‚Ä¶
985574498136215600,Sun Apr 15 17:44:06 +0000 2018,No webpack config means no loaders, which means basically only JS, and only old JS at that because no babel. Good l‚Ä¶ https://t.co/Bbfvq2liID
985574419702706200,Sun Apr 15 17:43:47 +0000 2018,I‚Äôve held off saying this for a while, but every time I hear someone say Webpack 4 is zero config I just laugh a li‚Ä¶ https://t.co/u7LE8TkQjz
985539183430291500,Sun Apr 15 15:23:46 +0000 2018,Amsterdam reflections üá≥üá±üòç #travel #amsterdam #reflection @ Amsterdam, Netherlands https://t.co/9a50DHCfLn
985437535143899100,Sun Apr 15 08:39:51 +0000 2018,Thanks to everyone who organized @ReactAmsterdam. I had a great time! üëç  Now the world tour continues: on to Belgrade. üá∑üá∏
985258690713477100,Sat Apr 14 20:49:11 +0000 2018,RT @ElaziziYoussouf: I just update the parcel-story repo in @github : the easy way to develop your @react components UI  üõ†Ô∏è - a @storybook‚Ä¶
985257963328852000,Sat Apr 14 20:46:18 +0000 2018,@left_pad @zeithq Yeah let me know!
985252113205866500,Sat Apr 14 20:23:03 +0000 2018,RT @parceljs: üåç The Parcel documentation is now available in French and Italian thanks to @forresst17 and @bertolinimarco!  üòç  üá´üá∑ https://t‚Ä¶
985221896793919500,Sat Apr 14 18:22:59 +0000 2018,RT @wzrdzl: #ReactAmsterdam gathers together truly amazing people, so even when the conf ends fun continues ! Thanks for the awesome time!‚Ä¶
985078977344819200,Sat Apr 14 08:55:04 +0000 2018,RT @keeskluskens: Just met with @devongovett at #ReactAmsterdam and now it feels like I'm cheating on @TheLarkInn https://t.co/drTaX9Imel
984726227893260300,Fri Apr 13 09:33:22 +0000 2018,@eriklieben @ReactAmsterdam @parceljs @AureliaEffect @AureliaAMS I‚Äôll be there!
984709746036035600,Fri Apr 13 08:27:53 +0000 2018,If you‚Äôre at @ReactAmsterdam come find me for a @parceljs sticker. üòâ
984706455361212400,Fri Apr 13 08:14:48 +0000 2018,Awesome talk by @MicheleBertoli at #ReactAmsterdam about using state machines for UI development. react-automata an‚Ä¶ https://t.co/G4KnfViBCS
984693823694622700,Fri Apr 13 07:24:36 +0000 2018,Go @ReactAmsterdam! üòç https://t.co/1RRTuIvwMq
984693216812437500,Fri Apr 13 07:22:12 +0000 2018,@TheLarkInn Yeah dynamic imports cause split points and separate files are created. Common deps are hoisted up to p‚Ä¶ https://t.co/Rm4YlPHdML
984680256471752700,Fri Apr 13 06:30:42 +0000 2018,@TheLarkInn Parcel
984679496891686900,Fri Apr 13 06:27:41 +0000 2018,So Amsterdam is nice üëç https://t.co/0YeBisVA8D
984450573419376600,Thu Apr 12 15:18:01 +0000 2018,@rob_dodson Yeah, we‚Äôve managed this by setting `aria-live` on things explicitly sometimes, but it‚Äôs hard.
984450445279158300,Thu Apr 12 15:17:31 +0000 2018,@probablyup yeah totally. have to remember to set `aria-hidden` on all the other elements too. gets even more compl‚Ä¶ https://t.co/3AJc55lNf1
984449813285670900,Thu Apr 12 15:15:00 +0000 2018,@probablyup Lots of complex components need to manage focus of several sub-elements explicitly, e.g. handling keybo‚Ä¶ https://t.co/YTFqLHhFA4
984439552613011500,Thu Apr 12 14:34:14 +0000 2018,@swyx I don‚Äôt think so, not in the DOM at least. Maybe react native? I haven‚Äôt used it much.
984439385981702100,Thu Apr 12 14:33:34 +0000 2018,I‚Äôm thinking some kind of wrapper component to manage the current focused element:  &lt;FocusManager current=‚Äúfoo‚Äù&gt;‚Ä¶ https://t.co/y3LZxG2HaH
984438378782486500,Thu Apr 12 14:29:34 +0000 2018,React really needs a better accessibility story, especially around focus management. Making refs on every element a‚Ä¶ https://t.co/VQcfb7afJM
984420804279570400,Thu Apr 12 13:19:44 +0000 2018,@CompuIves @ReactAmsterdam Nice, I‚Äôll be there too! With @parceljs stickers. üòâ
984413742288003100,Thu Apr 12 12:51:40 +0000 2018,RT @CompuIves: Woow this is super neat:  WebAssembly Studio - an online IDE that helps you learn and teach others about WebAssembly.¬†  http‚Ä¶
984412594508369900,Thu Apr 12 12:47:06 +0000 2018,@intelligibabble @ReactAmsterdam üëã
984388234393325600,Thu Apr 12 11:10:18 +0000 2018,Hello Amsterdam! üëã üá≥üá± https://t.co/P2pgqJdmEX
983954583671189500,Wed Apr 11 06:27:08 +0000 2018,@swernerx I‚Äôm heading north to Amsterdam tomorrow. But I‚Äôve visited the castle at Heidelberg before - beautiful town!
983686591435690000,Tue Apr 10 12:42:14 +0000 2018,RT @ThePracticalDev: "Zero configuration is a huge selling point, but it's not the only thing Parcel has going for it. Whereas bundlers lik‚Ä¶
983673186037399600,Tue Apr 10 11:48:57 +0000 2018,Made it to the first stop on my world tour: Frankfurt! üá©üá™
983405177385316400,Mon Apr 09 18:03:59 +0000 2018,RT @devongovett: üôå Pretty excited about the work on tree shaking/scope hoisting happening in @parceljs.  The module system is compiled away‚Ä¶
983384944188637200,Mon Apr 09 16:43:35 +0000 2018,RT @FrontendDaily: How to Build Chrome Extensions with React and Parcel: https://t.co/IX2u3EK7Vw
983064316298473500,Sun Apr 08 19:29:32 +0000 2018,Oh, and like the rest of @parceljs, most of this happens in parallel on worker processes, so it‚Äôs fast! üò≤ https://t.co/sLnlMEtkCe
983063962496385000,Sun Apr 08 19:28:07 +0000 2018,üôå Pretty excited about the work on tree shaking/scope hoisting happening in @parceljs.  The module system is compil‚Ä¶ https://t.co/Yq2YYSt4GW
982756505651834900,Sat Apr 07 23:06:24 +0000 2018,Pretty awesome! Check out how many deps were removed. üëç https://t.co/0Nqeb7bJgz https://t.co/5dTxEavgbI
982697932347531300,Sat Apr 07 19:13:39 +0000 2018,Spent a few hours optimizing @babeljs core. Running babel-preset-minify over lodash is now 36% faster! Similar gain‚Ä¶ https://t.co/CdvPcWXgFK
982674479334621200,Sat Apr 07 17:40:27 +0000 2018,@SilvestreVivo üëç I‚Äôll be at @ReactAmsterdam on Friday. Any chance you‚Äôll be there?
982449399753162800,Sat Apr 07 02:46:04 +0000 2018,@jkup lol we really should meet up sometime. we literally work in the same building üòú
982447493974655000,Sat Apr 07 02:38:30 +0000 2018,Traveling a lot in the next two weeks: SFO üõ´ FRA üöÜ AMS üõ© BEG üõ¨ SFO. If you‚Äôre in one of those cities and want to me‚Ä¶ https://t.co/cN6wBwzqpt
981942794737496000,Thu Apr 05 17:13:00 +0000 2018,Interesting advertising @Cloudflare https://t.co/WvdEBZBQjQ
